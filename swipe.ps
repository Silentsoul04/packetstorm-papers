%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPCOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 17 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Courier-Bold FMFONTDEFINE
4 0 /Palatino-Roman FMFONTDEFINE
5 0 /Helvetica FMFONTDEFINE
6 0 /Helvetica-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 14 Q
0 X
0 K
(The Ar) 192.19 710.67 T
(chitectur) 235.07 710.67 T
(e and Implementation) 288.44 710.67 T
(of Network-Layer Security Under Unix) 188.64 694.67 T
1 11 Q
(ABSTRACT) 280.06 564.67 T
2 F
0.55 (swIPe is a network-layer security protocol for the IP protocol suite. This) 144 545.67 P
0.04 (paper presents the architecture, design philosophy) 144 532.67 P
0.04 (, and performance of an) 363.19 532.67 P
0.54 (implementation of swIPe under several variants of Unix. swIPe provides) 144 519.67 P
0.34 (authentication, integrity) 144 506.67 P
0.34 (, and con\336dentiality of IP datagrams, and is com-) 248.6 506.67 P
1.7 (pletely compatible with the existing IP infrastructure. T) 144 493.67 P
1.7 (o maintain this) 399.28 493.67 P
2.66 (compatibility) 144 480.67 P
2.66 (, swIPe is implemented using an encapsulation protocol.) 201.89 480.67 P
1.03 (Mechanism \050the details of the protocol\051 is decoupled from policy \050what) 144 467.67 P
1 (and when to protect\051 and key management. swIPe under Unix is imple-) 144 454.67 P
-0.04 (mented using a virtual network interface. The parts of the implementation) 144 441.67 P
1.83 (that process incoming and outgoing packets are entirely in the kernel;) 144 428.67 P
0.04 (parameter setting and exception handling, however) 144 415.67 P
0.04 (, are managed by user) 368.31 415.67 P
0.04 (-) 464.34 415.67 P
-0.22 (level processes. The performance of swIPe on modern workstations is pri-) 144 402.67 P
1.95 (marily limited only by the speed of the underlying authentication and) 144 389.67 P
0.64 (encryption algorithms; the mechanism overhead is negligible in our pro-) 144 376.67 P
(totype.) 144 363.67 T
0 F
(1. Intr) 90 331.67 T
(oduction) 119.71 331.67 T
2 F
0.66 (T) 90 312.67 P
0.66 (raditionally) 96.33 312.67 P
0.66 (, system security has been addressed in an) 146.27 312.67 P
1 F
0.66 (ad-hoc) 339.2 312.67 P
2 F
0.66 ( fashion and at a fairly high level,) 369.7 312.67 P
0.28 (usually in the applications themselves. As applications become more distributed in nature and are) 90 299.67 P
-0.08 (relying more and more on the integrity of information received from their peers, it becomes attrac-) 90 286.67 P
-0.03 (tive to consider common, general solutions to replace) 90 273.67 P
1 F
-0.03 (ad-hoc) 327.44 273.67 P
2 F
-0.03 (, application-speci\336c security mecha-) 357.95 273.67 P
1.12 (nisms. Most system-level security work has focused on the operating system and on arbitrating) 90 260.67 P
0.98 (access to resources on a particular machine. Relatively little attention has been paid to securing) 90 247.67 P
-0.19 (communications in any consistent way) 90 234.67 P
-0.19 (. In modern distributed systems, however) 258.81 234.67 P
-0.19 (, which are charac-) 438.99 234.67 P
-0.22 (terized by a lar) 90 221.67 P
-0.22 (ge number of single-user or single-purpose machines, the network itself is emer) 154.75 221.67 P
-0.22 (ging) 502.47 221.67 P
(as the best candidate for concentrating security ef) 90 208.67 T
(forts.) 307.33 208.67 T
1.01 (The explosively increasing size of the Internet, with its concomitant security problems, coupled) 90 189.67 P
0.44 (with the wide range of services and applications that it supports, make IP-based networks a good) 90 176.67 P
0.58 (choice for understanding and exploring network security issues. The rising mobility of users, the) 90 163.67 P
0.68 (advent of wireless networking services, and the increasingly critical dependence of \336nancial and) 90 150.67 P
-0.22 (commercial services on the Internet infrastructure, call for the adoption of authentication, integrity) 90 137.67 P
-0.22 (,) 519.25 137.67 P
(and privacy features as) 90 124.67 T
1 F
(sine qua non) 193.72 124.67 T
2 F
( features of the network.) 249.87 124.67 T
0.14 (There have been a number of ef) 90 105.67 P
0.14 (forts aimed at providing security services at some layer in the net-) 230.33 105.67 P
1.5 (work hierarchy [4,8,12,16]. However) 90 92.67 P
1.5 (, no existing protocol is completely satisfactory for lar) 257.88 92.67 P
1.5 (ge-) 507.97 92.67 P
-0.12 (scale Internet-based deployment. Existing network-layer security protocols such as SP3 and NLSP) 90 79.67 P
90 72 522 720 C
102 590 510 674 C
138 542 306 665 R
7 X
0 K
V
1 12 Q
0 X
(John Ioannidis) 186.19 657 T
(Columbia University) 171.86 643 T
(New Y) 172.24 629 T
(ork, NY 10027) 202.13 629 T
(ji@cs.columbia.edu) 174.18 601 T
306 542 462 665 R
7 X
V
0 X
(Matt Blaze) 357.85 657 T
(A) 325.24 643 T
(T&T Bell Laboratories) 332.13 643 T
(Holmdel, NJ 07733) 337.2 629 T
(mab@r) 328.3 601 T
(esear) 364.2 601 T
(ch.att.com) 389.74 601 T
90 72 522 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
-0.13 (implicitly impose a speci\336c model of trust and policy; this manifests itself in the form of unwieldy features) 72 712.67 P
0.9 (and a multiplicity of options. This unnecessary complexity frustrates ef) 72 699.67 P
0.9 (\336cient implementations and con-) 392.97 699.67 P
-0.22 (fuses mechanism with policy) 72 686.67 P
-0.22 (. Non-network-layer protocols, such as ADP and Kerberos, make it dif) 198.48 686.67 P
-0.22 (\336cult to) 506.34 686.67 P
-0.22 (enforce security policies in a consistent manner) 72 673.67 P
-0.22 (, and often make it impossible to exploit their features with-) 278.91 673.67 P
2.56 (out rewriting applications. Furthermore, non-network-layer solutions cannot be used to transparently) 72 660.67 P
1.64 (enforce intermediate-hop security in an internetwork. swIPe\325) 72 647.67 P
1.64 (s power lies in its minimalist structure; it) 348.79 647.67 P
-0.22 (avoids facilities that could best be provided elsewhere. Regardless, the techniques developed for swIPe can) 72 634.67 P
(be readily adopted by implementations of any network-layer security protocol.) 72 621.67 T
1.57 (swIPe was designed to complement IP functionality by adding the necessary security features without) 72 602.67 P
0.08 (altering the structure of IP itself. This is accomplished by encapsulating IP datagrams within IP datagrams) 72 589.67 P
0.62 (of a new IP Protocol type \050) 72 576.67 P
3 F
1.36 -0.55 (IPPROTO_SWIPE) 194.1 576.67 B
2 F
0.62 (\051; these datagrams carry the payload of the original IP data-) 272.65 576.67 P
0.18 (gram, enough header information to reconstruct them at the remote end, and any additional security infor-) 72 563.67 P
(mation that may be needed.) 72 550.67 T
0.87 (This approach has a number of advantages. First and foremost, since datagrams are encapsulated within) 72 531.67 P
0.48 (other IP datagrams, they can transit parts of the network that know nothing about swIPe. Since the trans-) 72 518.67 P
1.48 (port and higher) 72 505.67 P
1.48 (-layer protocols never see swIPe datagrams, they need no changes and can employ the) 141.86 505.67 P
-0.05 (existing network infrastructure and interfaces. Since encapsulation and decapsulation can take place at any) 72 492.67 P
1.07 (place where IP datagrams are processed \050) 72 479.67 P
1 F
1.07 (i.e.) 260.21 479.67 P
2 F
1.07 (, either hosts or routers\051, swIPe may be used to implement) 273.63 479.67 P
1.48 (both end-to-end and intermediate-hop security) 72 466.67 P
1.48 (. Furthermore, a wide variety of security policies can be) 281.04 466.67 P
0.06 (implemented simply by controlling when to encapsulate) 72 453.67 P
1 F
0.06 (outgoing) 321.76 453.67 P
2 F
0.06 ( datagrams and when to accept) 360.83 453.67 P
1 F
0.06 (incoming) 499.11 453.67 P
2 F
0.87 (datagrams \050which may or may not be swIPe-encapsulated\051. Finally) 72 440.67 P
0.87 (, as our prototype experience demon-) 372.1 440.67 P
-0.03 (strates, swIPe can be implemented ef) 72 427.67 P
-0.03 (\336ciently on a variety of modern Unix systems, such as SunOS, Mach,) 234.58 427.67 P
(and BSDI.) 72 414.67 T
(swIPe provides three fundamental security services:) 72 395.67 T
3 10 Q
(   \245) 72 376.67 T
2 11 Q
(Data con\336dentiality: protecting against unauthorized access to data being transmitted.) 108 376.67 T
3 10 Q
(   \245) 72 357.67 T
2 11 Q
(Data integrity: protecting against alteration or future replay of traf) 108 357.67 T
(\336c.) 397.96 357.67 T
3 10 Q
(   \245) 72 338.67 T
2 11 Q
(Source authentication: network addresses are authenticated as part of the protocol.) 108 338.67 T
0.44 (It is important to point out that swIPe\325) 72 319.67 P
0.44 (s protections are limited to the context of the network. Data not on) 242.66 319.67 P
-0.07 (the network itself, such as \336les, window contents, etc., may still require other protection mechanisms \050) 72 306.67 P
1 F
-0.07 (e.g.) 521.39 306.67 P
2 F
-0.07 (,) 537.25 306.67 P
(CFS [2]\051.) 72 293.67 T
0 F
(2. swIPe Pr) 72 255.67 T
(otocol Overview) 125.2 255.67 T
2 F
0.22 (A complete speci\336cation of the swIPe protocol is beyond the scope of this paper) 72 236.67 P
0.22 (. The reader is referred to) 427.27 236.67 P
0.24 ([6] for the authoritative protocol description. This section gives a brief overview of the important features) 72 223.67 P
(in swIPe.) 72 210.67 T
1.16 (Brie\337y) 72 191.67 P
1.16 (, a swIPe system consists of three conceptual entities on top of the ordinary IP mechanisms: the) 101.81 191.67 P
1 F
1.53 (security pr) 72 178.67 P
1.53 (ocessing engine) 120.42 178.67 P
2 F
1.53 (, the) 191.82 178.67 P
1 F
1.53 (key management engine) 216.54 178.67 P
2 F
1.53 (, and the) 325.16 178.67 P
1 F
1.53 (policy engine) 370.02 178.67 P
2 F
1.53 (. This three-way split is) 430.44 178.67 P
(entirely conceptual; an implementation need not maintain strict barriers between them.) 72 165.67 T
0.95 (The policy engine is responsible for three tasks: examining outgoing packets to determine whether they) 72 146.67 P
0.35 (require swIPe processing, examining incoming packets to determine whether they are to be accepted, and) 72 133.67 P
0.21 (deciding the exact nature of the processing. Note that the policy engine implements the local security pol-) 72 120.67 P
(icy for the host, which must be coordinated with the security of its correspondents.) 72 107.67 T
0.35 (The key management engine establishes the session cryptographic variables used by the security process-) 72 88.67 P
0.89 (ing engine. It also communicates with key management engines on other hosts to establish key associa-) 72 75.67 P
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
0.17 (tions, and is responsible for managing any required secure key exchanges. Cryptographic variables can be) 72 712.67 P
1.93 (transmitted with pre-arranged secret keys, with an authenticated Dif) 72 699.67 P
1.93 (\336e-Hellman exchange, or through) 385.93 699.67 P
(some other user) 72 686.67 T
(-de\336ned mechanism.) 141.35 686.67 T
-0.25 (The security engine applies the actual authentication, integrity) 72 667.67 P
-0.25 (, and con\336dentiality processing on individual) 342.91 667.67 P
(datagrams, as controlled by the policy engine, and using keys provided by the key management engine.) 72 654.67 T
0.13 (It is useful to think of swIPe as an input layer that processes datagrams between the data link layer and IP) 72 635.67 P
0.13 (,) 537.25 635.67 P
0.53 (and as an output layer that pre-processes datagrams just before they reach IP from higher layer protocols) 72 622.67 P
0.47 (\050see Figure 1\051. Actually) 72 609.67 P
0.47 (, packets being routed \320 passed from the input side to the output side of IP \320must) 177.03 609.67 P
(also pass through the output swIPe layer) 72 596.67 T
(.) 248.99 596.67 T
0.5 (IP datagrams are encapsulated within swIPe packets using an extension of IPIP) 72 317.67 P
0.5 (, the IP-inside-IP protocol) 424.39 317.67 P
0.3 (\050used by Mobile*IP) 72 304.67 P
0.3 (, as de\336ned in [5,7]\051. A swIPe packet is itself an IP datagram, containing an IP header) 158.66 304.67 P
0.26 (with the IP protocol \336eld set to 94. The payload of this packet consists of the swIPe header) 72 291.67 P
0.26 (, which in turn) 475.13 291.67 P
0.97 (contains control information to direct the receiving side on how to process the datagram, any necessary) 72 278.67 P
-0.24 (security information \050such as an authentication value and sequence number \050to protect against replay\051\051, and) 72 265.67 P
(the original IP datagram, possibly encrypted. The packet format is shown in Figure 2.) 72 252.67 T
0.26 (Conceptually) 72 233.67 P
0.26 (, swIPe output processing proceeds as follows. The policy engine examines the IP packet \050in) 129.88 233.67 P
1.83 (the simple case, only its destination address\051, and determines whether the packet requires encryption,) 72 220.67 P
0.69 (authentication, or both. If not, the packet is simply sent down to IP) 72 207.67 P
0.69 (. Otherwise, a swIPe header is gener-) 372.33 207.67 P
0.24 (ated; the security processing engine obtains the keys from the key management engine, applies the appro-) 72 194.67 P
1.46 (priate authentication and encryption algorithms, and the resulting encapsulated packet is sent to IP for) 72 181.67 P
0.42 (delivery) 72 168.67 P
0.42 (. Note that it is possible that the key management engine may be unable to supply a key immedi-) 107.29 168.67 P
-0.19 (ately \050) 72 155.67 P
1 F
-0.19 (e.g.) 99.57 155.67 P
2 F
-0.19 (, a secure key exchange protocol may \336rst have to be initiated with a remote host\051. In these cases,) 115.43 155.67 P
-0.26 (the implementation may either re-queue the packet until all keys are available, or simply drop it and rely on) 72 142.67 P
(higher) 72 129.67 T
(-layer protocols to retransmit it later) 99.85 129.67 T
(.) 258.22 129.67 T
0.95 (Input processing proceeds in roughly the opposite manner) 72 110.67 P
0.95 (. When an IP datagram is received, the swIPe) 332.85 110.67 P
-0.08 (policy engine examines it; if the packet is already a swIPe packet, it is passed to the security engine, which) 72 97.67 P
0.4 (processes the packet in a manner analogous to the output processing described in the previous paragraph.) 72 84.67 P
72 72 540 720 C
93 333 519 574 C
99 370 297 568 R
1 H
2 Z
0 X
0 K
N
4 11 Q
(\050a\051 Standar) 108 379 T
(d IP pr) 161.14 379 T
(ocessing) 194.43 379 T
315 370 513 568 R
N
(\050b\051 IP and) 324 379 T
4 8 Q
(swIPe) 374.57 379 T
125.34 433.08 269.34 503.37 R
N
197.34 503.37 197.34 431.37 2 L
11 X
N
167.57 416.92 160.34 394.04 154.35 417.28 160.96 417.1 4 Y
3 X
V
161.34 431.37 160.96 417.1 2 L
4 H
0 Z
N
226.4 408.4 233.34 431.37 239.63 408.21 233.02 408.3 4 Y
V
233.02 408.3 232.84 395.7 2 L
N
226.73 525.3 233.34 548.37 239.96 525.3 233.34 525.3 4 Y
V
233.34 525.3 233.34 503.37 2 L
N
167.96 526.44 161.34 503.37 154.73 526.44 161.34 526.44 4 Y
V
161.34 526.44 161.34 548.37 2 L
N
183.31 520.1 178.51 503.37 173.71 520.1 178.51 520.1 4 Y
1 X
V
178.51 520.1 178.51 521.37 214.51 521.37 214.51 503.37 4 L
1.8 H
N
5 10 Q
0 X
(forwarding) 172.84 526.75 T
(higher-layer protocols) 154.59 555.25 T
(network) 179.01 407.58 T
5 12 Q
(IP) 156.01 476 T
(Output) 143.67 464 T
(  Processing) 125.34 452 T
(IP) 228.01 476.63 T
(Input) 220.34 464.63 T
(  Processing) 197.34 452.63 T
5 10 Q
(interfaces) 176.23 397.58 T
341.53 488.07 413.53 506.07 R
5 X
V
341.53 435.77 485.53 506.07 R
1 H
2 Z
0 X
N
413.53 506.07 413.53 434.07 2 L
11 X
N
383.69 412.27 377.53 389.07 370.46 412.01 377.07 412.14 4 Y
3 X
V
376.7 431.27 377.07 412.14 2 L
4 H
0 Z
N
442.91 411 449.53 434.07 456.14 411 449.53 411 4 Y
V
449.53 411 449.53 389.07 2 L
N
442.91 528 449.53 551.07 456.14 528 449.53 528 4 Y
V
449.53 528 449.53 506.07 2 L
N
384.56 529.02 377.52 506.07 371.33 529.26 377.95 529.14 4 Y
V
377.96 529.14 378.36 551.07 2 L
N
400.33 522.8 395.53 506.07 390.73 522.8 395.53 522.8 4 Y
1 X
V
395.53 522.8 395.53 524.07 431.53 524.07 431.53 506.07 4 L
1.8 H
N
0 X
(forwarding) 389.03 529.45 T
413.53 435.77 485.53 452.07 R
5 X
V
0 X
(higher-layer protocols) 359.78 555.93 T
(network) 395.98 416.1 T
5 9 Q
(swIPe) 431.76 439.2 T
(swIPe) 359.53 491.66 T
5 12 Q
(IP) 372.19 469.7 T
(Output) 359.86 457.7 T
(  Processing) 341.53 445.7 T
(IP) 444.19 491.7 T
(Input) 436.52 479.7 T
(  Processing) 413.53 467.7 T
5 10 Q
(interfaces) 393.2 406.1 T
0 11 Q
(Figur) 197.66 349 T
(e 1: IP Pr) 223.71 349 T
(ocessing with and without swIPe) 268.36 349 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
0.66 (Otherwise, the policy engine determines whether the packet is admissible without authentication/encryp-) 72 289.67 P
0.18 (tion, and if so, simply passes it on to IP for regular input processing. If the packet is not admissible, it ini-) 72 276.67 P
0.49 (tiates exception processing, which could result in either a new key exchange, or simply an error message) 72 263.67 P
(being recorded in the system log.) 72 250.67 T
0.07 (Note that the speci\336cs of cryptographic variable exchange are not part of the swIPe protocol) 72 231.67 P
1 F
0.07 (per se) 480.97 231.67 P
2 F
0.07 (. swIPe) 507.59 231.67 P
0.8 (provides an out-of-band mechanism for communication between key management agents through which) 72 218.67 P
(necessary key exchanges take place.) 72 205.67 T
0.51 (Note also that swIPe does not require the use of any particular encryption or authentication scheme. Any) 72 186.67 P
0.55 (encryption and cryptographic authentication functions can be used. Our implementation, described in the) 72 173.67 P
0.16 (next section, supports DES [1) 72 160.67 P
0.16 (1] for encryption, and MD5 [14] seeded with a key for authentication. How-) 203.13 160.67 P
1.53 (ever) 72 147.67 P
1.53 (, there is no reason why one could not use,) 90.47 147.67 P
1 F
1.53 (e.g.) 295.57 147.67 P
2 F
1.53 (, triple-DES, IDEA [9], or even Skipjack [10] for) 311.43 147.67 P
(encryption, and SHS [13] for authentication, if desired.) 72 134.67 T
0.47 (swIPe can be used in a variety of con\336gurations, each implementing a dif) 72 115.67 P
0.47 (ferent security model. The sim-) 399.92 115.67 P
1.26 (plest con\336guration is end-to-end security) 72 102.67 P
1.26 (, as shown in Figure 3. Here, the individual hosts,) 256.37 102.67 P
3 F
2.78 -0.55 (alice) 489.92 102.67 B
2 F
1.26 ( and) 520.13 102.67 P
3 F
0.52 -0.55 (bob) 72 89.67 B
2 F
0.23 (, use swIPe directly to communicate securely with each other) 90.13 89.67 P
0.23 (. Both hosts must be equipped for swIPe) 360.75 89.67 P
(processing.) 72 76.67 T
72 72 540 720 C
72 297 540 720 C
2 10 Q
0 X
0 K
(Authentication Information, if any) 233.41 490.92 T
120.84 623.29 132.18 623.29 132.18 617.62 3 L
0.24 H
0 Z
N
132.18 623.29 143.51 623.29 143.51 617.62 3 L
N
143.51 623.29 154.85 623.29 154.85 617.62 3 L
N
154.85 623.29 166.19 623.29 166.19 617.62 3 L
N
166.19 623.29 177.53 623.29 177.53 617.62 3 L
N
177.53 623.29 188.87 623.29 188.87 617.62 3 L
N
188.87 623.29 200.21 623.29 200.21 617.62 3 L
N
200.21 623.29 211.55 623.29 211.55 617.62 3 L
N
211.55 623.29 222.88 623.29 222.88 617.62 3 L
N
222.88 623.29 234.22 623.29 234.22 617.62 3 L
N
234.22 623.29 245.56 623.29 245.56 617.62 3 L
N
245.56 623.29 256.9 623.29 256.9 617.62 3 L
N
256.9 623.29 268.24 623.29 268.24 617.62 3 L
N
268.24 623.29 279.58 623.29 279.58 617.62 3 L
N
279.58 623.29 290.92 623.29 290.92 617.62 3 L
N
290.92 623.29 302.26 623.29 302.26 617.62 3 L
N
302.26 623.29 313.59 623.29 313.59 617.62 3 L
N
313.59 623.29 324.93 623.29 324.93 617.62 3 L
N
324.93 623.29 336.27 623.29 336.27 617.62 3 L
N
336.27 623.29 347.61 623.29 347.61 617.62 3 L
N
347.61 623.29 358.95 623.29 358.95 617.62 3 L
N
358.95 623.29 370.29 623.29 370.29 617.62 3 L
N
370.29 623.29 381.62 623.29 381.62 617.62 3 L
N
381.62 623.29 392.96 623.29 392.96 617.62 3 L
N
392.96 623.29 404.3 623.29 404.3 617.62 3 L
N
404.3 623.29 415.64 623.29 415.64 617.62 3 L
N
415.64 623.29 426.98 623.29 426.98 617.62 3 L
N
426.98 623.29 438.32 623.29 438.32 617.62 3 L
N
438.32 623.29 449.66 623.29 449.66 617.62 3 L
N
449.66 623.29 460.99 623.29 460.99 617.62 3 L
N
460.99 623.29 472.33 623.29 472.33 617.62 3 L
N
472.33 623.29 483.67 623.29 483.67 617.62 3 L
N
120.84 623.29 120.84 617.62 2 L
N
120.84 623.29 132.18 623.29 132.18 628.96 3 L
N
132.18 623.29 143.51 623.29 143.51 628.96 3 L
N
143.51 623.29 154.85 623.29 154.85 628.96 3 L
N
154.85 623.29 166.19 623.29 166.19 628.96 3 L
N
166.19 623.29 177.53 623.29 177.53 628.96 3 L
N
177.53 623.29 188.87 623.29 188.87 628.96 3 L
N
188.87 623.29 200.21 623.29 200.21 628.96 3 L
N
200.21 623.29 211.55 623.29 211.55 628.96 3 L
N
211.55 623.29 222.88 623.29 222.88 628.96 3 L
N
222.88 623.29 234.22 623.29 234.22 628.96 3 L
N
234.22 623.29 245.56 623.29 245.56 628.96 3 L
N
245.56 623.29 256.9 623.29 256.9 628.96 3 L
N
256.9 623.29 268.24 623.29 268.24 628.96 3 L
N
268.24 623.29 279.58 623.29 279.58 628.96 3 L
N
279.58 623.29 290.92 623.29 290.92 628.96 3 L
N
290.92 623.29 302.26 623.29 302.26 628.96 3 L
N
302.26 623.29 313.59 623.29 313.59 628.96 3 L
N
313.59 623.29 324.93 623.29 324.93 628.96 3 L
N
324.93 623.29 336.27 623.29 336.27 628.96 3 L
N
336.27 623.29 347.61 623.29 347.61 628.96 3 L
N
347.61 623.29 358.95 623.29 358.95 628.96 3 L
N
358.95 623.29 370.29 623.29 370.29 628.96 3 L
N
370.29 623.29 381.62 623.29 381.62 628.96 3 L
N
381.62 623.29 392.96 623.29 392.96 628.96 3 L
N
392.96 623.29 404.3 623.29 404.3 628.96 3 L
N
404.3 623.29 415.64 623.29 415.64 628.96 3 L
N
415.64 623.29 426.98 623.29 426.98 628.96 3 L
N
426.98 623.29 438.32 623.29 438.32 628.96 3 L
N
438.32 623.29 449.66 623.29 449.66 628.96 3 L
N
449.66 623.29 460.99 623.29 460.99 628.96 3 L
N
460.99 623.29 472.33 623.29 472.33 628.96 3 L
N
472.33 623.29 483.67 623.29 483.67 628.96 3 L
N
120.84 623.29 120.84 628.96 2 L
N
120.84 628.96 120.84 617.62 2 L
0.48 H
2 Z
N
211.55 628.96 211.55 617.62 2 L
N
302.26 628.96 302.26 617.62 2 L
N
392.96 628.96 392.96 617.62 2 L
N
483.67 628.96 483.67 617.62 2 L
N
120.84 645.97 132.18 645.97 132.18 640.3 3 L
0.24 H
0 Z
N
132.18 645.97 143.51 645.97 143.51 640.3 3 L
N
143.51 645.97 154.85 645.97 154.85 640.3 3 L
N
154.85 645.97 166.19 645.97 166.19 640.3 3 L
N
166.19 645.97 177.53 645.97 177.53 640.3 3 L
N
177.53 645.97 188.87 645.97 188.87 640.3 3 L
N
188.87 645.97 200.21 645.97 200.21 640.3 3 L
N
200.21 645.97 211.55 645.97 211.55 640.3 3 L
N
211.55 645.97 222.88 645.97 222.88 640.3 3 L
N
222.88 645.97 234.22 645.97 234.22 640.3 3 L
N
234.22 645.97 245.56 645.97 245.56 640.3 3 L
N
245.56 645.97 256.9 645.97 256.9 640.3 3 L
N
256.9 645.97 268.24 645.97 268.24 640.3 3 L
N
268.24 645.97 279.58 645.97 279.58 640.3 3 L
N
279.58 645.97 290.92 645.97 290.92 640.3 3 L
N
290.92 645.97 302.26 645.97 302.26 640.3 3 L
N
302.26 645.97 313.59 645.97 313.59 640.3 3 L
N
313.59 645.97 324.93 645.97 324.93 640.3 3 L
N
324.93 645.97 336.27 645.97 336.27 640.3 3 L
N
336.27 645.97 347.61 645.97 347.61 640.3 3 L
N
347.61 645.97 358.95 645.97 358.95 640.3 3 L
N
358.95 645.97 370.29 645.97 370.29 640.3 3 L
N
370.29 645.97 381.62 645.97 381.62 640.3 3 L
N
381.62 645.97 392.96 645.97 392.96 640.3 3 L
N
392.96 645.97 404.3 645.97 404.3 640.3 3 L
N
404.3 645.97 415.64 645.97 415.64 640.3 3 L
N
415.64 645.97 426.98 645.97 426.98 640.3 3 L
N
426.98 645.97 438.32 645.97 438.32 640.3 3 L
N
438.32 645.97 449.66 645.97 449.66 640.3 3 L
N
449.66 645.97 460.99 645.97 460.99 640.3 3 L
N
460.99 645.97 472.33 645.97 472.33 640.3 3 L
N
472.33 645.97 483.67 645.97 483.67 640.3 3 L
N
120.84 645.97 120.84 640.3 2 L
N
120.84 645.97 132.18 645.97 132.18 651.64 3 L
N
132.18 645.97 143.51 645.97 143.51 651.64 3 L
N
143.51 645.97 154.85 645.97 154.85 651.64 3 L
N
154.85 645.97 166.19 645.97 166.19 651.64 3 L
N
166.19 645.97 177.53 645.97 177.53 651.64 3 L
N
177.53 645.97 188.87 645.97 188.87 651.64 3 L
N
188.87 645.97 200.21 645.97 200.21 651.64 3 L
N
200.21 645.97 211.55 645.97 211.55 651.64 3 L
N
211.55 645.97 222.88 645.97 222.88 651.64 3 L
N
222.88 645.97 234.22 645.97 234.22 651.64 3 L
N
234.22 645.97 245.56 645.97 245.56 651.64 3 L
N
245.56 645.97 256.9 645.97 256.9 651.64 3 L
N
256.9 645.97 268.24 645.97 268.24 651.64 3 L
N
268.24 645.97 279.58 645.97 279.58 651.64 3 L
N
279.58 645.97 290.92 645.97 290.92 651.64 3 L
N
290.92 645.97 302.26 645.97 302.26 651.64 3 L
N
302.26 645.97 313.59 645.97 313.59 651.64 3 L
N
313.59 645.97 324.93 645.97 324.93 651.64 3 L
N
324.93 645.97 336.27 645.97 336.27 651.64 3 L
N
336.27 645.97 347.61 645.97 347.61 651.64 3 L
N
347.61 645.97 358.95 645.97 358.95 651.64 3 L
N
358.95 645.97 370.29 645.97 370.29 651.64 3 L
N
370.29 645.97 381.62 645.97 381.62 651.64 3 L
N
381.62 645.97 392.96 645.97 392.96 651.64 3 L
N
392.96 645.97 404.3 645.97 404.3 651.64 3 L
N
404.3 645.97 415.64 645.97 415.64 651.64 3 L
N
415.64 645.97 426.98 645.97 426.98 651.64 3 L
N
426.98 645.97 438.32 645.97 438.32 651.64 3 L
N
438.32 645.97 449.66 645.97 449.66 651.64 3 L
N
449.66 645.97 460.99 645.97 460.99 651.64 3 L
N
460.99 645.97 472.33 645.97 472.33 651.64 3 L
N
472.33 645.97 483.67 645.97 483.67 651.64 3 L
N
120.84 645.97 120.84 651.64 2 L
N
120.84 651.64 120.84 640.3 2 L
0.48 H
2 Z
N
211.55 651.64 211.55 640.3 2 L
N
302.26 651.64 302.26 640.3 2 L
N
392.96 651.64 392.96 640.3 2 L
N
483.67 651.64 483.67 640.3 2 L
N
120.84 600.61 132.18 600.61 132.18 594.95 3 L
0.24 H
0 Z
N
132.18 600.61 143.51 600.61 143.51 594.95 3 L
N
143.51 600.61 154.85 600.61 154.85 594.95 3 L
N
154.85 600.61 166.19 600.61 166.19 594.95 3 L
N
166.19 600.61 177.53 600.61 177.53 594.95 3 L
N
177.53 600.61 188.87 600.61 188.87 594.95 3 L
N
188.87 600.61 200.21 600.61 200.21 594.95 3 L
N
200.21 600.61 211.55 600.61 211.55 594.95 3 L
N
211.55 600.61 222.88 600.61 222.88 594.95 3 L
N
222.88 600.61 234.22 600.61 234.22 594.95 3 L
N
234.22 600.61 245.56 600.61 245.56 594.95 3 L
N
245.56 600.61 256.9 600.61 256.9 594.95 3 L
N
256.9 600.61 268.24 600.61 268.24 594.95 3 L
N
268.24 600.61 279.58 600.61 279.58 594.95 3 L
N
279.58 600.61 290.92 600.61 290.92 594.95 3 L
N
290.92 600.61 302.26 600.61 302.26 594.95 3 L
N
302.26 600.61 313.59 600.61 313.59 594.95 3 L
N
313.59 600.61 324.93 600.61 324.93 594.95 3 L
N
324.93 600.61 336.27 600.61 336.27 594.95 3 L
N
336.27 600.61 347.61 600.61 347.61 594.95 3 L
N
347.61 600.61 358.95 600.61 358.95 594.95 3 L
N
358.95 600.61 370.29 600.61 370.29 594.95 3 L
N
370.29 600.61 381.62 600.61 381.62 594.95 3 L
N
381.62 600.61 392.96 600.61 392.96 594.95 3 L
N
392.96 600.61 404.3 600.61 404.3 594.95 3 L
N
404.3 600.61 415.64 600.61 415.64 594.95 3 L
N
415.64 600.61 426.98 600.61 426.98 594.95 3 L
N
426.98 600.61 438.32 600.61 438.32 594.95 3 L
N
438.32 600.61 449.66 600.61 449.66 594.95 3 L
N
449.66 600.61 460.99 600.61 460.99 594.95 3 L
N
460.99 600.61 472.33 600.61 472.33 594.95 3 L
N
472.33 600.61 483.67 600.61 483.67 594.95 3 L
N
120.84 600.61 120.84 594.95 2 L
N
120.84 600.61 132.18 600.61 132.18 606.28 3 L
N
132.18 600.61 143.51 600.61 143.51 606.28 3 L
N
143.51 600.61 154.85 600.61 154.85 606.28 3 L
N
154.85 600.61 166.19 600.61 166.19 606.28 3 L
N
166.19 600.61 177.53 600.61 177.53 606.28 3 L
N
177.53 600.61 188.87 600.61 188.87 606.28 3 L
N
188.87 600.61 200.21 600.61 200.21 606.28 3 L
N
200.21 600.61 211.55 600.61 211.55 606.28 3 L
N
211.55 600.61 222.88 600.61 222.88 606.28 3 L
N
222.88 600.61 234.22 600.61 234.22 606.28 3 L
N
234.22 600.61 245.56 600.61 245.56 606.28 3 L
N
245.56 600.61 256.9 600.61 256.9 606.28 3 L
N
256.9 600.61 268.24 600.61 268.24 606.28 3 L
N
268.24 600.61 279.58 600.61 279.58 606.28 3 L
N
279.58 600.61 290.92 600.61 290.92 606.28 3 L
N
290.92 600.61 302.26 600.61 302.26 606.28 3 L
N
302.26 600.61 313.59 600.61 313.59 606.28 3 L
N
313.59 600.61 324.93 600.61 324.93 606.28 3 L
N
324.93 600.61 336.27 600.61 336.27 606.28 3 L
N
336.27 600.61 347.61 600.61 347.61 606.28 3 L
N
347.61 600.61 358.95 600.61 358.95 606.28 3 L
N
358.95 600.61 370.29 600.61 370.29 606.28 3 L
N
370.29 600.61 381.62 600.61 381.62 606.28 3 L
N
381.62 600.61 392.96 600.61 392.96 606.28 3 L
N
392.96 600.61 404.3 600.61 404.3 606.28 3 L
N
404.3 600.61 415.64 600.61 415.64 606.28 3 L
N
415.64 600.61 426.98 600.61 426.98 606.28 3 L
N
426.98 600.61 438.32 600.61 438.32 606.28 3 L
N
438.32 600.61 449.66 600.61 449.66 606.28 3 L
N
449.66 600.61 460.99 600.61 460.99 606.28 3 L
N
460.99 600.61 472.33 600.61 472.33 606.28 3 L
N
472.33 600.61 483.67 600.61 483.67 606.28 3 L
N
120.84 600.61 120.84 606.28 2 L
N
120.84 606.28 120.84 594.95 2 L
0.48 H
2 Z
N
211.55 606.28 211.55 594.95 2 L
N
302.26 606.28 302.26 594.95 2 L
N
392.96 606.28 392.96 594.95 2 L
N
483.67 606.28 483.67 594.95 2 L
N
120.84 668.65 132.18 668.65 132.18 662.98 3 L
0.24 H
0 Z
N
132.18 668.65 143.51 668.65 143.51 662.98 3 L
N
143.51 668.65 154.85 668.65 154.85 662.98 3 L
N
154.85 668.65 166.19 668.65 166.19 662.98 3 L
N
166.19 668.65 177.53 668.65 177.53 662.98 3 L
N
177.53 668.65 188.87 668.65 188.87 662.98 3 L
N
188.87 668.65 200.21 668.65 200.21 662.98 3 L
N
200.21 668.65 211.55 668.65 211.55 662.98 3 L
N
211.55 668.65 222.88 668.65 222.88 662.98 3 L
N
222.88 668.65 234.22 668.65 234.22 662.98 3 L
N
234.22 668.65 245.56 668.65 245.56 662.98 3 L
N
245.56 668.65 256.9 668.65 256.9 662.98 3 L
N
256.9 668.65 268.24 668.65 268.24 662.98 3 L
N
268.24 668.65 279.58 668.65 279.58 662.98 3 L
N
279.58 668.65 290.92 668.65 290.92 662.98 3 L
N
290.92 668.65 302.26 668.65 302.26 662.98 3 L
N
302.26 668.65 313.59 668.65 313.59 662.98 3 L
N
313.59 668.65 324.93 668.65 324.93 662.98 3 L
N
324.93 668.65 336.27 668.65 336.27 662.98 3 L
N
336.27 668.65 347.61 668.65 347.61 662.98 3 L
N
347.61 668.65 358.95 668.65 358.95 662.98 3 L
N
358.95 668.65 370.29 668.65 370.29 662.98 3 L
N
370.29 668.65 381.62 668.65 381.62 662.98 3 L
N
381.62 668.65 392.96 668.65 392.96 662.98 3 L
N
392.96 668.65 404.3 668.65 404.3 662.98 3 L
N
404.3 668.65 415.64 668.65 415.64 662.98 3 L
N
415.64 668.65 426.98 668.65 426.98 662.98 3 L
N
426.98 668.65 438.32 668.65 438.32 662.98 3 L
N
438.32 668.65 449.66 668.65 449.66 662.98 3 L
N
449.66 668.65 460.99 668.65 460.99 662.98 3 L
N
460.99 668.65 472.33 668.65 472.33 662.98 3 L
N
472.33 668.65 483.67 668.65 483.67 662.98 3 L
N
120.84 668.65 120.84 662.98 2 L
N
120.84 668.65 132.18 668.65 132.18 674.32 3 L
N
132.18 668.65 143.51 668.65 143.51 674.32 3 L
N
143.51 668.65 154.85 668.65 154.85 674.32 3 L
N
154.85 668.65 166.19 668.65 166.19 674.32 3 L
N
166.19 668.65 177.53 668.65 177.53 674.32 3 L
N
177.53 668.65 188.87 668.65 188.87 674.32 3 L
N
188.87 668.65 200.21 668.65 200.21 674.32 3 L
N
200.21 668.65 211.55 668.65 211.55 674.32 3 L
N
211.55 668.65 222.88 668.65 222.88 674.32 3 L
N
222.88 668.65 234.22 668.65 234.22 674.32 3 L
N
234.22 668.65 245.56 668.65 245.56 674.32 3 L
N
245.56 668.65 256.9 668.65 256.9 674.32 3 L
N
256.9 668.65 268.24 668.65 268.24 674.32 3 L
N
268.24 668.65 279.58 668.65 279.58 674.32 3 L
N
279.58 668.65 290.92 668.65 290.92 674.32 3 L
N
290.92 668.65 302.26 668.65 302.26 674.32 3 L
N
302.26 668.65 313.59 668.65 313.59 674.32 3 L
N
313.59 668.65 324.93 668.65 324.93 674.32 3 L
N
324.93 668.65 336.27 668.65 336.27 674.32 3 L
N
336.27 668.65 347.61 668.65 347.61 674.32 3 L
N
347.61 668.65 358.95 668.65 358.95 674.32 3 L
N
358.95 668.65 370.29 668.65 370.29 674.32 3 L
N
370.29 668.65 381.62 668.65 381.62 674.32 3 L
N
381.62 668.65 392.96 668.65 392.96 674.32 3 L
N
392.96 668.65 404.3 668.65 404.3 674.32 3 L
N
404.3 668.65 415.64 668.65 415.64 674.32 3 L
N
415.64 668.65 426.98 668.65 426.98 674.32 3 L
N
426.98 668.65 438.32 668.65 438.32 674.32 3 L
N
438.32 668.65 449.66 668.65 449.66 674.32 3 L
N
449.66 668.65 460.99 668.65 460.99 674.32 3 L
N
460.99 668.65 472.33 668.65 472.33 674.32 3 L
N
472.33 668.65 483.67 668.65 483.67 674.32 3 L
N
120.84 668.65 120.84 674.32 2 L
N
120.84 674.32 120.84 662.98 2 L
0.48 H
2 Z
N
211.55 674.32 211.55 662.98 2 L
N
302.26 674.32 302.26 662.98 2 L
N
392.96 674.32 392.96 662.98 2 L
N
483.67 674.32 483.67 662.98 2 L
N
120.84 555.26 132.18 555.26 132.18 549.59 3 L
0.24 H
0 Z
N
132.18 555.26 143.51 555.26 143.51 549.59 3 L
N
143.51 555.26 154.85 555.26 154.85 549.59 3 L
N
154.85 555.26 166.19 555.26 166.19 549.59 3 L
N
166.19 555.26 177.53 555.26 177.53 549.59 3 L
N
177.53 555.26 188.87 555.26 188.87 549.59 3 L
N
188.87 555.26 200.21 555.26 200.21 549.59 3 L
N
200.21 555.26 211.55 555.26 211.55 549.59 3 L
N
211.55 555.26 222.88 555.26 222.88 549.59 3 L
N
222.88 555.26 234.22 555.26 234.22 549.59 3 L
N
234.22 555.26 245.56 555.26 245.56 549.59 3 L
N
245.56 555.26 256.9 555.26 256.9 549.59 3 L
N
256.9 555.26 268.24 555.26 268.24 549.59 3 L
N
268.24 555.26 279.58 555.26 279.58 549.59 3 L
N
279.58 555.26 290.92 555.26 290.92 549.59 3 L
N
290.92 555.26 302.26 555.26 302.26 549.59 3 L
N
302.26 555.26 313.59 555.26 313.59 549.59 3 L
N
313.59 555.26 324.93 555.26 324.93 549.59 3 L
N
324.93 555.26 336.27 555.26 336.27 549.59 3 L
N
336.27 555.26 347.61 555.26 347.61 549.59 3 L
N
347.61 555.26 358.95 555.26 358.95 549.59 3 L
N
358.95 555.26 370.29 555.26 370.29 549.59 3 L
N
370.29 555.26 381.62 555.26 381.62 549.59 3 L
N
381.62 555.26 392.96 555.26 392.96 549.59 3 L
N
392.96 555.26 404.3 555.26 404.3 549.59 3 L
N
404.3 555.26 415.64 555.26 415.64 549.59 3 L
N
415.64 555.26 426.98 555.26 426.98 549.59 3 L
N
426.98 555.26 438.32 555.26 438.32 549.59 3 L
N
438.32 555.26 449.66 555.26 449.66 549.59 3 L
N
449.66 555.26 460.99 555.26 460.99 549.59 3 L
N
460.99 555.26 472.33 555.26 472.33 549.59 3 L
N
472.33 555.26 483.67 555.26 483.67 549.59 3 L
N
120.84 555.26 120.84 549.59 2 L
N
120.84 555.26 132.18 555.26 132.18 560.93 3 L
N
132.18 555.26 143.51 555.26 143.51 560.93 3 L
N
143.51 555.26 154.85 555.26 154.85 560.93 3 L
N
154.85 555.26 166.19 555.26 166.19 560.93 3 L
N
166.19 555.26 177.53 555.26 177.53 560.93 3 L
N
177.53 555.26 188.87 555.26 188.87 560.93 3 L
N
188.87 555.26 200.21 555.26 200.21 560.93 3 L
N
200.21 555.26 211.55 555.26 211.55 560.93 3 L
N
211.55 555.26 222.88 555.26 222.88 560.93 3 L
N
222.88 555.26 234.22 555.26 234.22 560.93 3 L
N
234.22 555.26 245.56 555.26 245.56 560.93 3 L
N
245.56 555.26 256.9 555.26 256.9 560.93 3 L
N
256.9 555.26 268.24 555.26 268.24 560.93 3 L
N
268.24 555.26 279.58 555.26 279.58 560.93 3 L
N
279.58 555.26 290.92 555.26 290.92 560.93 3 L
N
290.92 555.26 302.26 555.26 302.26 560.93 3 L
N
302.26 555.26 313.59 555.26 313.59 560.93 3 L
N
313.59 555.26 324.93 555.26 324.93 560.93 3 L
N
324.93 555.26 336.27 555.26 336.27 560.93 3 L
N
336.27 555.26 347.61 555.26 347.61 560.93 3 L
N
347.61 555.26 358.95 555.26 358.95 560.93 3 L
N
358.95 555.26 370.29 555.26 370.29 560.93 3 L
N
370.29 555.26 381.62 555.26 381.62 560.93 3 L
N
381.62 555.26 392.96 555.26 392.96 560.93 3 L
N
392.96 555.26 404.3 555.26 404.3 560.93 3 L
N
404.3 555.26 415.64 555.26 415.64 560.93 3 L
N
415.64 555.26 426.98 555.26 426.98 560.93 3 L
N
426.98 555.26 438.32 555.26 438.32 560.93 3 L
N
438.32 555.26 449.66 555.26 449.66 560.93 3 L
N
449.66 555.26 460.99 555.26 460.99 560.93 3 L
N
460.99 555.26 472.33 555.26 472.33 560.93 3 L
N
472.33 555.26 483.67 555.26 483.67 560.93 3 L
N
120.84 555.26 120.84 560.93 2 L
N
120.84 560.93 120.84 549.59 2 L
0.48 H
2 Z
N
211.55 560.93 211.55 549.59 2 L
N
302.26 560.93 302.26 549.59 2 L
N
392.96 560.93 392.96 549.59 2 L
N
483.67 560.93 483.67 549.59 2 L
N
120.84 691.32 132.18 691.32 132.18 685.65 3 L
0.24 H
0 Z
N
132.18 691.32 143.51 691.32 143.51 685.65 3 L
N
143.51 691.32 154.85 691.32 154.85 685.65 3 L
N
154.85 691.32 166.19 691.32 166.19 685.65 3 L
N
166.19 691.32 177.53 691.32 177.53 685.65 3 L
N
177.53 691.32 188.87 691.32 188.87 685.65 3 L
N
188.87 691.32 200.21 691.32 200.21 685.65 3 L
N
200.21 691.32 211.55 691.32 211.55 685.65 3 L
N
211.55 691.32 222.88 691.32 222.88 685.65 3 L
N
222.88 691.32 234.22 691.32 234.22 685.65 3 L
N
234.22 691.32 245.56 691.32 245.56 685.65 3 L
N
245.56 691.32 256.9 691.32 256.9 685.65 3 L
N
256.9 691.32 268.24 691.32 268.24 685.65 3 L
N
268.24 691.32 279.58 691.32 279.58 685.65 3 L
N
279.58 691.32 290.92 691.32 290.92 685.65 3 L
N
290.92 691.32 302.26 691.32 302.26 685.65 3 L
N
302.26 691.32 313.59 691.32 313.59 685.65 3 L
N
313.59 691.32 324.93 691.32 324.93 685.65 3 L
N
324.93 691.32 336.27 691.32 336.27 685.65 3 L
N
336.27 691.32 347.61 691.32 347.61 685.65 3 L
N
347.61 691.32 358.95 691.32 358.95 685.65 3 L
N
358.95 691.32 370.29 691.32 370.29 685.65 3 L
N
370.29 691.32 381.62 691.32 381.62 685.65 3 L
N
381.62 691.32 392.96 691.32 392.96 685.65 3 L
N
392.96 691.32 404.3 691.32 404.3 685.65 3 L
N
404.3 691.32 415.64 691.32 415.64 685.65 3 L
N
415.64 691.32 426.98 691.32 426.98 685.65 3 L
N
426.98 691.32 438.32 691.32 438.32 685.65 3 L
N
438.32 691.32 449.66 691.32 449.66 685.65 3 L
N
449.66 691.32 460.99 691.32 460.99 685.65 3 L
N
460.99 691.32 472.33 691.32 472.33 685.65 3 L
N
472.33 691.32 483.67 691.32 483.67 685.65 3 L
N
120.84 691.32 120.84 685.65 2 L
N
120.84 691.32 132.18 691.32 132.18 696.99 3 L
N
132.18 691.32 143.51 691.32 143.51 696.99 3 L
N
143.51 691.32 154.85 691.32 154.85 696.99 3 L
N
154.85 691.32 166.19 691.32 166.19 696.99 3 L
N
166.19 691.32 177.53 691.32 177.53 696.99 3 L
N
177.53 691.32 188.87 691.32 188.87 696.99 3 L
N
188.87 691.32 200.21 691.32 200.21 696.99 3 L
N
200.21 691.32 211.55 691.32 211.55 696.99 3 L
N
211.55 691.32 222.88 691.32 222.88 696.99 3 L
N
222.88 691.32 234.22 691.32 234.22 696.99 3 L
N
234.22 691.32 245.56 691.32 245.56 696.99 3 L
N
245.56 691.32 256.9 691.32 256.9 696.99 3 L
N
256.9 691.32 268.24 691.32 268.24 696.99 3 L
N
268.24 691.32 279.58 691.32 279.58 696.99 3 L
N
279.58 691.32 290.92 691.32 290.92 696.99 3 L
N
290.92 691.32 302.26 691.32 302.26 696.99 3 L
N
302.26 691.32 313.59 691.32 313.59 696.99 3 L
N
313.59 691.32 324.93 691.32 324.93 696.99 3 L
N
324.93 691.32 336.27 691.32 336.27 696.99 3 L
N
336.27 691.32 347.61 691.32 347.61 696.99 3 L
N
347.61 691.32 358.95 691.32 358.95 696.99 3 L
N
358.95 691.32 370.29 691.32 370.29 696.99 3 L
N
370.29 691.32 381.62 691.32 381.62 696.99 3 L
N
381.62 691.32 392.96 691.32 392.96 696.99 3 L
N
392.96 691.32 404.3 691.32 404.3 696.99 3 L
N
404.3 691.32 415.64 691.32 415.64 696.99 3 L
N
415.64 691.32 426.98 691.32 426.98 696.99 3 L
N
426.98 691.32 438.32 691.32 438.32 696.99 3 L
N
438.32 691.32 449.66 691.32 449.66 696.99 3 L
N
449.66 691.32 460.99 691.32 460.99 696.99 3 L
N
460.99 691.32 472.33 691.32 472.33 696.99 3 L
N
472.33 691.32 483.67 691.32 483.67 696.99 3 L
N
120.84 691.32 120.84 696.99 2 L
N
5 9 Q
(0) 124.01 708 T
(1) 135.35 696.66 T
(2) 146.69 696.66 T
(3) 158.02 696.66 T
(4) 169.36 696.66 T
(5) 180.7 696.66 T
(6) 192.04 696.66 T
(7) 203.38 696.66 T
(8) 214.72 696.66 T
(9) 226.06 696.66 T
(0) 237.39 696.66 T
(1) 248.73 696.66 T
(2) 260.07 696.66 T
(3) 271.41 696.66 T
(4) 282.75 696.66 T
(5) 294.09 696.66 T
(6) 305.43 696.66 T
(7) 316.76 696.66 T
(8) 328.1 696.66 T
(9) 339.44 696.66 T
(0) 350.78 696.66 T
(1) 362.12 696.66 T
(2) 373.46 696.66 T
(3) 384.8 696.66 T
(4) 396.13 696.66 T
(5) 407.47 696.66 T
(6) 418.81 696.66 T
(7) 430.15 696.66 T
(8) 441.49 696.66 T
(9) 452.83 696.66 T
(0) 464.17 696.66 T
(1) 475.5 696.66 T
(0) 124.01 696.66 T
(1) 237.39 708 T
(2) 350.78 708 T
(3) 464.17 708 T
120.84 696.99 120.84 685.65 2 L
0.48 H
2 Z
N
211.55 696.99 211.55 685.65 2 L
N
302.26 696.99 302.26 685.65 2 L
N
392.96 696.99 392.96 685.65 2 L
N
483.67 696.99 483.67 685.65 2 L
N
2 10 Q
(T) 247.55 677.66 T
(OS) 253.48 677.66 T
211.55 668.65 302.25 691.32 R
N
(T) 367.36 677.66 T
(otal Length) 372.77 677.66 T
302.26 668.65 483.67 691.32 R
N
(IP version) 123.11 677.66 T
120.84 668.65 166.19 691.32 R
N
(ID) 206.27 654.98 T
120.84 645.97 302.26 668.65 R
N
(Packet type dependent) 348 564.27 T
302.26 555.26 483.67 577.94 R
N
(Destination Address) 261.59 586.95 T
120.84 577.94 483.67 600.61 R
N
(Source Address) 270.75 609.62 T
120.84 600.61 483.67 623.29 R
N
(Inner \050original\051 IP Packet.) 250.07 400.21 T
(Packet Sequence Number) 250.91 541.59 T
120.84 532.58 483.67 555.26 R
N
(hdr len) 174.85 677.66 T
166.19 668.65 211.55 691.32 R
N
(Of) 380.57 654.98 T
(fset) 390.93 654.98 T
302.26 645.97 483.67 668.65 R
N
3 F
(D) 304.93 657.98 T
(F) 304.93 650.98 T
302.26 645.97 313.59 668.65 R
N
(M) 316.26 657.98 T
(F) 316.26 650.98 T
313.59 645.97 324.93 668.65 R
N
2 F
(Packet type) 143.01 564.27 T
120.84 555.26 211.55 577.94 R
N
(Checksum) 371.86 632.3 T
302.26 623.29 483.67 645.97 R
N
(T) 138.96 632.3 T
(ime T) 144.71 632.3 T
(o Live) 167.61 632.3 T
120.84 623.29 211.55 645.97 R
N
(Protocol) 221.98 630.97 T
3 12 Q
( \05094\051) 255.85 630.97 T
211.55 623.29 302.25 645.97 R
N
120.84 577.94 132.18 577.94 132.18 572.27 3 L
0.24 H
0 Z
N
132.18 577.94 143.51 577.94 143.51 572.27 3 L
N
143.51 577.94 154.85 577.94 154.85 572.27 3 L
N
154.85 577.94 166.19 577.94 166.19 572.27 3 L
N
166.19 577.94 177.53 577.94 177.53 572.27 3 L
N
177.53 577.94 188.87 577.94 188.87 572.27 3 L
N
188.87 577.94 200.21 577.94 200.21 572.27 3 L
N
200.21 577.94 211.55 577.94 211.55 572.27 3 L
N
211.55 577.94 222.88 577.94 222.88 572.27 3 L
N
222.88 577.94 234.22 577.94 234.22 572.27 3 L
N
234.22 577.94 245.56 577.94 245.56 572.27 3 L
N
245.56 577.94 256.9 577.94 256.9 572.27 3 L
N
256.9 577.94 268.24 577.94 268.24 572.27 3 L
N
268.24 577.94 279.58 577.94 279.58 572.27 3 L
N
279.58 577.94 290.92 577.94 290.92 572.27 3 L
N
290.92 577.94 302.26 577.94 302.26 572.27 3 L
N
302.26 577.94 313.59 577.94 313.59 572.27 3 L
N
313.59 577.94 324.93 577.94 324.93 572.27 3 L
N
324.93 577.94 336.27 577.94 336.27 572.27 3 L
N
336.27 577.94 347.61 577.94 347.61 572.27 3 L
N
347.61 577.94 358.95 577.94 358.95 572.27 3 L
N
358.95 577.94 370.29 577.94 370.29 572.27 3 L
N
370.29 577.94 381.62 577.94 381.62 572.27 3 L
N
381.62 577.94 392.96 577.94 392.96 572.27 3 L
N
392.96 577.94 404.3 577.94 404.3 572.27 3 L
N
404.3 577.94 415.64 577.94 415.64 572.27 3 L
N
415.64 577.94 426.98 577.94 426.98 572.27 3 L
N
426.98 577.94 438.32 577.94 438.32 572.27 3 L
N
438.32 577.94 449.66 577.94 449.66 572.27 3 L
N
449.66 577.94 460.99 577.94 460.99 572.27 3 L
N
460.99 577.94 472.33 577.94 472.33 572.27 3 L
N
472.33 577.94 483.67 577.94 483.67 572.27 3 L
N
120.84 577.94 120.84 572.27 2 L
N
120.84 577.94 132.18 577.94 132.18 583.61 3 L
N
132.18 577.94 143.51 577.94 143.51 583.61 3 L
N
143.51 577.94 154.85 577.94 154.85 583.61 3 L
N
154.85 577.94 166.19 577.94 166.19 583.61 3 L
N
166.19 577.94 177.53 577.94 177.53 583.61 3 L
N
177.53 577.94 188.87 577.94 188.87 583.61 3 L
N
188.87 577.94 200.21 577.94 200.21 583.61 3 L
N
200.21 577.94 211.55 577.94 211.55 583.61 3 L
N
211.55 577.94 222.88 577.94 222.88 583.61 3 L
N
222.88 577.94 234.22 577.94 234.22 583.61 3 L
N
234.22 577.94 245.56 577.94 245.56 583.61 3 L
N
245.56 577.94 256.9 577.94 256.9 583.61 3 L
N
256.9 577.94 268.24 577.94 268.24 583.61 3 L
N
268.24 577.94 279.58 577.94 279.58 583.61 3 L
N
279.58 577.94 290.92 577.94 290.92 583.61 3 L
N
290.92 577.94 302.26 577.94 302.26 583.61 3 L
N
302.26 577.94 313.59 577.94 313.59 583.61 3 L
N
313.59 577.94 324.93 577.94 324.93 583.61 3 L
N
324.93 577.94 336.27 577.94 336.27 583.61 3 L
N
336.27 577.94 347.61 577.94 347.61 583.61 3 L
N
347.61 577.94 358.95 577.94 358.95 583.61 3 L
N
358.95 577.94 370.29 577.94 370.29 583.61 3 L
N
370.29 577.94 381.62 577.94 381.62 583.61 3 L
N
381.62 577.94 392.96 577.94 392.96 583.61 3 L
N
392.96 577.94 404.3 577.94 404.3 583.61 3 L
N
404.3 577.94 415.64 577.94 415.64 583.61 3 L
N
415.64 577.94 426.98 577.94 426.98 583.61 3 L
N
426.98 577.94 438.32 577.94 438.32 583.61 3 L
N
438.32 577.94 449.66 577.94 449.66 583.61 3 L
N
449.66 577.94 460.99 577.94 460.99 583.61 3 L
N
460.99 577.94 472.33 577.94 472.33 583.61 3 L
N
472.33 577.94 483.67 577.94 483.67 583.61 3 L
N
120.84 577.94 120.84 583.61 2 L
N
120.84 583.61 120.84 572.27 2 L
0.48 H
2 Z
N
211.55 583.61 211.55 572.27 2 L
N
302.26 583.61 302.26 572.27 2 L
N
392.96 583.61 392.96 572.27 2 L
N
483.67 583.61 483.67 572.27 2 L
N
120.84 441.88 132.18 441.88 132.18 436.2 3 L
0.24 H
0 Z
N
132.18 441.88 143.51 441.88 143.51 436.2 3 L
N
143.51 441.88 154.85 441.88 154.85 436.2 3 L
N
154.85 441.88 166.19 441.88 166.19 436.2 3 L
N
166.19 441.88 177.53 441.88 177.53 436.2 3 L
N
177.53 441.88 188.87 441.88 188.87 436.2 3 L
N
188.87 441.88 200.21 441.88 200.21 436.2 3 L
N
200.21 441.88 211.55 441.88 211.55 436.2 3 L
N
211.55 441.88 222.88 441.88 222.88 436.2 3 L
N
222.88 441.88 234.22 441.88 234.22 436.2 3 L
N
234.22 441.88 245.56 441.88 245.56 436.2 3 L
N
245.56 441.88 256.9 441.88 256.9 436.2 3 L
N
256.9 441.88 268.24 441.88 268.24 436.2 3 L
N
268.24 441.88 279.58 441.88 279.58 436.2 3 L
N
279.58 441.88 290.92 441.88 290.92 436.2 3 L
N
290.92 441.88 302.26 441.88 302.26 436.2 3 L
N
302.26 441.88 313.59 441.88 313.59 436.2 3 L
N
313.59 441.88 324.93 441.88 324.93 436.2 3 L
N
324.93 441.88 336.27 441.88 336.27 436.2 3 L
N
336.27 441.88 347.61 441.88 347.61 436.2 3 L
N
347.61 441.88 358.95 441.88 358.95 436.2 3 L
N
358.95 441.88 370.29 441.88 370.29 436.2 3 L
N
370.29 441.88 381.62 441.88 381.62 436.2 3 L
N
381.62 441.88 392.96 441.88 392.96 436.2 3 L
N
392.96 441.88 404.3 441.88 404.3 436.2 3 L
N
404.3 441.88 415.64 441.88 415.64 436.2 3 L
N
415.64 441.88 426.98 441.88 426.98 436.2 3 L
N
426.98 441.88 438.32 441.88 438.32 436.2 3 L
N
438.32 441.88 449.66 441.88 449.66 436.2 3 L
N
449.66 441.88 460.99 441.88 460.99 436.2 3 L
N
460.99 441.88 472.33 441.88 472.33 436.2 3 L
N
472.33 441.88 483.67 441.88 483.67 436.2 3 L
N
120.84 441.88 120.84 436.2 2 L
N
120.84 441.88 132.18 441.88 132.18 447.54 3 L
N
132.18 441.88 143.51 441.88 143.51 447.54 3 L
N
143.51 441.88 154.85 441.88 154.85 447.54 3 L
N
154.85 441.88 166.19 441.88 166.19 447.54 3 L
N
166.19 441.88 177.53 441.88 177.53 447.54 3 L
N
177.53 441.88 188.87 441.88 188.87 447.54 3 L
N
188.87 441.88 200.21 441.88 200.21 447.54 3 L
N
200.21 441.88 211.55 441.88 211.55 447.54 3 L
N
211.55 441.88 222.88 441.88 222.88 447.54 3 L
N
222.88 441.88 234.22 441.88 234.22 447.54 3 L
N
234.22 441.88 245.56 441.88 245.56 447.54 3 L
N
245.56 441.88 256.9 441.88 256.9 447.54 3 L
N
256.9 441.88 268.24 441.88 268.24 447.54 3 L
N
268.24 441.88 279.58 441.88 279.58 447.54 3 L
N
279.58 441.88 290.92 441.88 290.92 447.54 3 L
N
290.92 441.88 302.26 441.88 302.26 447.54 3 L
N
302.26 441.88 313.59 441.88 313.59 447.54 3 L
N
313.59 441.88 324.93 441.88 324.93 447.54 3 L
N
324.93 441.88 336.27 441.88 336.27 447.54 3 L
N
336.27 441.88 347.61 441.88 347.61 447.54 3 L
N
347.61 441.88 358.95 441.88 358.95 447.54 3 L
N
358.95 441.88 370.29 441.88 370.29 447.54 3 L
N
370.29 441.88 381.62 441.88 381.62 447.54 3 L
N
381.62 441.88 392.96 441.88 392.96 447.54 3 L
N
392.96 441.88 404.3 441.88 404.3 447.54 3 L
N
404.3 441.88 415.64 441.88 415.64 447.54 3 L
N
415.64 441.88 426.98 441.88 426.98 447.54 3 L
N
426.98 441.88 438.32 441.88 438.32 447.54 3 L
N
438.32 441.88 449.66 441.88 449.66 447.54 3 L
N
449.66 441.88 460.99 441.88 460.99 447.54 3 L
N
460.99 441.88 472.33 441.88 472.33 447.54 3 L
N
472.33 441.88 483.67 441.88 483.67 447.54 3 L
N
120.84 441.88 120.84 447.54 2 L
N
120.84 447.54 120.84 436.2 2 L
0.48 H
2 Z
N
211.55 447.54 211.55 436.2 2 L
N
302.26 447.54 302.26 436.2 2 L
N
392.96 447.54 392.96 436.2 2 L
N
483.67 447.54 483.67 436.2 2 L
N
120.84 532.58 132.18 532.58 132.18 526.91 3 L
0.24 H
0 Z
N
132.18 532.58 143.51 532.58 143.51 526.91 3 L
N
143.51 532.58 154.85 532.58 154.85 526.91 3 L
N
154.85 532.58 166.19 532.58 166.19 526.91 3 L
N
166.19 532.58 177.53 532.58 177.53 526.91 3 L
N
177.53 532.58 188.87 532.58 188.87 526.91 3 L
N
188.87 532.58 200.21 532.58 200.21 526.91 3 L
N
200.21 532.58 211.55 532.58 211.55 526.91 3 L
N
211.55 532.58 222.88 532.58 222.88 526.91 3 L
N
222.88 532.58 234.22 532.58 234.22 526.91 3 L
N
234.22 532.58 245.56 532.58 245.56 526.91 3 L
N
245.56 532.58 256.9 532.58 256.9 526.91 3 L
N
256.9 532.58 268.24 532.58 268.24 526.91 3 L
N
268.24 532.58 279.58 532.58 279.58 526.91 3 L
N
279.58 532.58 290.92 532.58 290.92 526.91 3 L
N
290.92 532.58 302.26 532.58 302.26 526.91 3 L
N
302.26 532.58 313.59 532.58 313.59 526.91 3 L
N
313.59 532.58 324.93 532.58 324.93 526.91 3 L
N
324.93 532.58 336.27 532.58 336.27 526.91 3 L
N
336.27 532.58 347.61 532.58 347.61 526.91 3 L
N
347.61 532.58 358.95 532.58 358.95 526.91 3 L
N
358.95 532.58 370.29 532.58 370.29 526.91 3 L
N
370.29 532.58 381.62 532.58 381.62 526.91 3 L
N
381.62 532.58 392.96 532.58 392.96 526.91 3 L
N
392.96 532.58 404.3 532.58 404.3 526.91 3 L
N
404.3 532.58 415.64 532.58 415.64 526.91 3 L
N
415.64 532.58 426.98 532.58 426.98 526.91 3 L
N
426.98 532.58 438.32 532.58 438.32 526.91 3 L
N
438.32 532.58 449.66 532.58 449.66 526.91 3 L
N
449.66 532.58 460.99 532.58 460.99 526.91 3 L
N
460.99 532.58 472.33 532.58 472.33 526.91 3 L
N
472.33 532.58 483.67 532.58 483.67 526.91 3 L
N
120.84 532.58 120.84 526.91 2 L
N
120.84 532.58 132.18 532.58 132.18 538.25 3 L
N
132.18 532.58 143.51 532.58 143.51 538.25 3 L
N
143.51 532.58 154.85 532.58 154.85 538.25 3 L
N
154.85 532.58 166.19 532.58 166.19 538.25 3 L
N
166.19 532.58 177.53 532.58 177.53 538.25 3 L
N
177.53 532.58 188.87 532.58 188.87 538.25 3 L
N
188.87 532.58 200.21 532.58 200.21 538.25 3 L
N
200.21 532.58 211.55 532.58 211.55 538.25 3 L
N
211.55 532.58 222.88 532.58 222.88 538.25 3 L
N
222.88 532.58 234.22 532.58 234.22 538.25 3 L
N
234.22 532.58 245.56 532.58 245.56 538.25 3 L
N
245.56 532.58 256.9 532.58 256.9 538.25 3 L
N
256.9 532.58 268.24 532.58 268.24 538.25 3 L
N
268.24 532.58 279.58 532.58 279.58 538.25 3 L
N
279.58 532.58 290.92 532.58 290.92 538.25 3 L
N
290.92 532.58 302.26 532.58 302.26 538.25 3 L
N
302.26 532.58 313.59 532.58 313.59 538.25 3 L
N
313.59 532.58 324.93 532.58 324.93 538.25 3 L
N
324.93 532.58 336.27 532.58 336.27 538.25 3 L
N
336.27 532.58 347.61 532.58 347.61 538.25 3 L
N
347.61 532.58 358.95 532.58 358.95 538.25 3 L
N
358.95 532.58 370.29 532.58 370.29 538.25 3 L
N
370.29 532.58 381.62 532.58 381.62 538.25 3 L
N
381.62 532.58 392.96 532.58 392.96 538.25 3 L
N
392.96 532.58 404.3 532.58 404.3 538.25 3 L
N
404.3 532.58 415.64 532.58 415.64 538.25 3 L
N
415.64 532.58 426.98 532.58 426.98 538.25 3 L
N
426.98 532.58 438.32 532.58 438.32 538.25 3 L
N
438.32 532.58 449.66 532.58 449.66 538.25 3 L
N
449.66 532.58 460.99 532.58 460.99 538.25 3 L
N
460.99 532.58 472.33 532.58 472.33 538.25 3 L
N
472.33 532.58 483.67 532.58 483.67 538.25 3 L
N
120.84 532.58 120.84 538.25 2 L
N
120.84 538.25 120.84 526.91 2 L
0.48 H
2 Z
N
211.55 538.25 211.55 526.91 2 L
N
302.26 538.25 302.26 526.91 2 L
N
392.96 538.25 392.96 526.91 2 L
N
483.67 538.25 483.67 526.91 2 L
N
120.84 351.17 132.18 351.17 132.18 345.5 3 L
0.24 H
0 Z
N
132.18 351.17 143.51 351.17 143.51 345.5 3 L
N
143.51 351.17 154.85 351.17 154.85 345.5 3 L
N
154.85 351.17 166.19 351.17 166.19 345.5 3 L
N
166.19 351.17 177.53 351.17 177.53 345.5 3 L
N
177.53 351.17 188.87 351.17 188.87 345.5 3 L
N
188.87 351.17 200.21 351.17 200.21 345.5 3 L
N
200.21 351.17 211.55 351.17 211.55 345.5 3 L
N
211.55 351.17 222.88 351.17 222.88 345.5 3 L
N
222.88 351.17 234.22 351.17 234.22 345.5 3 L
N
234.22 351.17 245.56 351.17 245.56 345.5 3 L
N
245.56 351.17 256.9 351.17 256.9 345.5 3 L
N
256.9 351.17 268.24 351.17 268.24 345.5 3 L
N
268.24 351.17 279.58 351.17 279.58 345.5 3 L
N
279.58 351.17 290.92 351.17 290.92 345.5 3 L
N
290.92 351.17 302.26 351.17 302.26 345.5 3 L
N
302.26 351.17 313.59 351.17 313.59 345.5 3 L
N
313.59 351.17 324.93 351.17 324.93 345.5 3 L
N
324.93 351.17 336.27 351.17 336.27 345.5 3 L
N
336.27 351.17 347.61 351.17 347.61 345.5 3 L
N
347.61 351.17 358.95 351.17 358.95 345.5 3 L
N
358.95 351.17 370.29 351.17 370.29 345.5 3 L
N
370.29 351.17 381.62 351.17 381.62 345.5 3 L
N
381.62 351.17 392.96 351.17 392.96 345.5 3 L
N
392.96 351.17 404.3 351.17 404.3 345.5 3 L
N
404.3 351.17 415.64 351.17 415.64 345.5 3 L
N
415.64 351.17 426.98 351.17 426.98 345.5 3 L
N
426.98 351.17 438.32 351.17 438.32 345.5 3 L
N
438.32 351.17 449.66 351.17 449.66 345.5 3 L
N
449.66 351.17 460.99 351.17 460.99 345.5 3 L
N
460.99 351.17 472.33 351.17 472.33 345.5 3 L
N
472.33 351.17 483.67 351.17 483.67 345.5 3 L
N
120.84 351.17 120.84 345.5 2 L
N
120.84 351.17 132.18 351.17 132.18 356.83 3 L
N
132.18 351.17 143.51 351.17 143.51 356.83 3 L
N
143.51 351.17 154.85 351.17 154.85 356.83 3 L
N
154.85 351.17 166.19 351.17 166.19 356.83 3 L
N
166.19 351.17 177.53 351.17 177.53 356.83 3 L
N
177.53 351.17 188.87 351.17 188.87 356.83 3 L
N
188.87 351.17 200.21 351.17 200.21 356.83 3 L
N
200.21 351.17 211.55 351.17 211.55 356.83 3 L
N
211.55 351.17 222.88 351.17 222.88 356.83 3 L
N
222.88 351.17 234.22 351.17 234.22 356.83 3 L
N
234.22 351.17 245.56 351.17 245.56 356.83 3 L
N
245.56 351.17 256.9 351.17 256.9 356.83 3 L
N
256.9 351.17 268.24 351.17 268.24 356.83 3 L
N
268.24 351.17 279.58 351.17 279.58 356.83 3 L
N
279.58 351.17 290.92 351.17 290.92 356.83 3 L
N
290.92 351.17 302.26 351.17 302.26 356.83 3 L
N
302.26 351.17 313.59 351.17 313.59 356.83 3 L
N
313.59 351.17 324.93 351.17 324.93 356.83 3 L
N
324.93 351.17 336.27 351.17 336.27 356.83 3 L
N
336.27 351.17 347.61 351.17 347.61 356.83 3 L
N
347.61 351.17 358.95 351.17 358.95 356.83 3 L
N
358.95 351.17 370.29 351.17 370.29 356.83 3 L
N
370.29 351.17 381.62 351.17 381.62 356.83 3 L
N
381.62 351.17 392.96 351.17 392.96 356.83 3 L
N
392.96 351.17 404.3 351.17 404.3 356.83 3 L
N
404.3 351.17 415.64 351.17 415.64 356.83 3 L
N
415.64 351.17 426.98 351.17 426.98 356.83 3 L
N
426.98 351.17 438.32 351.17 438.32 356.83 3 L
N
438.32 351.17 449.66 351.17 449.66 356.83 3 L
N
449.66 351.17 460.99 351.17 460.99 356.83 3 L
N
460.99 351.17 472.33 351.17 472.33 356.83 3 L
N
472.33 351.17 483.67 351.17 483.67 356.83 3 L
N
120.84 351.17 120.84 356.83 2 L
N
120.84 356.83 120.84 345.5 2 L
0.48 H
2 Z
N
211.55 356.83 211.55 345.5 2 L
N
302.26 356.83 302.26 345.5 2 L
N
392.96 356.83 392.96 345.5 2 L
N
483.67 356.83 483.67 345.5 2 L
N
2 10 Q
(Header Length) 227.07 564.27 T
211.55 555.26 302.25 577.94 R
N
483.67 532.58 483.67 509.91 472.33 478.16 495.01 496.3 483.67 464.55 483.67 441.88 6 L
0.5 H
N
120.84 526.91 120.84 504.24 109.5 472.49 132.18 490.63 120.84 458.88 120.84 436.2 6 L
N
483.67 441.88 483.67 419.2 472.33 387.45 495.01 405.59 483.67 373.84 483.67 351.17 6 L
N
120.84 441.88 120.84 419.2 109.5 387.45 132.18 405.59 120.84 373.84 120.84 351.17 6 L
N
487.13 689.06 M
 493.93 689.06 493.93 689.06 496.2 682.33 D
 498.47 675.6 498.47 675.6 498.47 662.13 D
 498.47 648.67 498.47 648.67 499.6 641.94 D
 500.73 635.21 500.73 635.21 509.81 635.21 D
1.5 H
N
487.13 581.34 M
 493.93 581.34 493.93 581.34 496.2 588.08 D
 498.47 594.81 498.47 594.81 498.47 608.28 D
 498.47 621.74 498.47 621.74 499.6 628.47 D
 500.73 635.21 500.73 635.21 507.54 635.21 D
N
487.2 575.08 M
 494 575.08 494 575.08 496.27 566.93 D
 498.54 558.78 498.54 558.78 498.54 542.48 D
 498.54 526.18 498.54 526.18 499.67 518.04 D
 500.8 509.89 500.8 509.89 509.88 509.89 D
N
487.2 444.69 M
 494 444.69 494 444.69 496.27 452.84 D
 498.54 460.99 498.54 460.99 498.54 477.29 D
 498.54 493.59 498.54 493.59 499.67 501.74 D
 500.8 509.89 500.8 509.89 507.61 509.89 D
N
2 9 Q
(swIPe) 0 -90 513.57 545.83 TF
2 12 Q
(Header) 0 -90 513.57 519.37 TF
489.34 436.2 M
 496.14 436.2 496.14 436.2 498.41 431.24 D
 500.68 426.29 500.68 426.29 500.68 416.36 D
 500.68 406.44 500.68 406.44 501.81 401.48 D
 502.95 396.52 502.95 396.52 512.02 396.52 D
N
489.34 356.83 M
 496.14 356.83 496.14 356.83 498.41 361.8 D
 500.68 366.76 500.68 366.76 500.68 376.68 D
 500.68 386.6 500.68 386.6 501.81 391.56 D
 502.95 396.52 502.95 396.52 509.75 396.52 D
N
(Original) 0 -90 525.54 414.64 TF
(IP Packet) 0 -90 513.54 414.64 TF
116.33 689.07 M
 107.83 689.07 107.83 689.07 104.99 680.89 D
 102.16 672.72 102.16 672.72 102.16 656.36 D
 102.16 640.01 102.16 640.01 100.74 631.84 D
 99.32 623.66 99.32 623.66 87.99 623.66 D
N
116.33 558.24 M
 107.83 558.24 107.83 558.24 104.99 566.43 D
 102.16 574.6 102.16 574.6 102.16 590.96 D
 102.16 607.31 102.16 607.31 100.74 615.48 D
 99.32 623.66 99.32 623.66 90.82 623.66 D
N
(IP Header) 0 -90 513.57 661.87 TF
(Authenticated/Encrypted) 0 -270 83.71 383.6 TF
116.24 552.62 M
 107.74 552.62 107.74 552.62 104.9 540.14 D
 102.07 527.65 102.07 527.65 102.07 502.67 D
 102.07 477.7 102.07 477.7 100.65 465.21 D
 99.23 452.73 99.23 452.73 87.89 452.73 D
N
116.24 352.82 M
 107.74 352.82 107.74 352.82 104.9 365.32 D
 102.07 377.8 102.07 377.8 102.07 402.78 D
 102.07 427.75 102.07 427.75 100.65 440.24 D
 99.23 452.73 99.23 452.73 90.73 452.73 D
N
(Cleartext) 0 -270 83.12 601.74 TF
122.69 577.94 485.52 577.94 2 L
N
121.26 441.88 484.1 441.88 2 L
N
0 11 Q
(Figur) 229.19 316.64 T
(e 2: swIPe Packet Format) 255.24 316.64 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
0.56 (Other con\336gurations are also possible in which the endpoints of communication are not swIPe-equipped.) 72 496.67 P
0.35 (These con\336gurations exploit the ability to run swIPe on routers as well as end hosts, and is the reason for) 72 483.67 P
0.16 (encapsulating entire datagrams and not just the payload. Figure 4a shows the common network \336rewall as) 72 470.67 P
1.99 (implemented under swIPe. The machine outside the \336rewall,) 72 457.67 P
3 F
4.38 -0.55 (alice) 357.65 457.67 B
2 F
1.99 (, needs to communicate with the) 387.86 457.67 P
0.36 (machine inside the \336rewall,) 72 444.67 P
3 F
0.8 -0.55 (bob) 197.64 444.67 B
2 F
0.36 (. Since the \336rewall will not allow direct, unauthenticated IP connectivity) 215.77 444.67 P
0.36 (,) 537.25 444.67 P
3 F
-0.56 -0.55 (alice) 72 431.67 B
2 F
-0.25 ( uses swIPe to deliver datagrams to) 102.21 431.67 P
3 F
-0.56 -0.55 (frank) 258.2 431.67 B
2 F
-0.25 ( \050the \336rewall\051, which in turn decapsulates them and deliv-) 288.41 431.67 P
0.75 (ers them to) 72 418.67 P
3 F
1.66 -0.55 (bob) 125.83 418.67 B
2 F
0.75 (. It is important to note that no machine inside the \336rewall \050including) 143.95 418.67 P
3 F
1.66 -0.55 (bob) 459.51 418.67 B
2 F
0.75 (\051 needs to run) 477.64 418.67 P
1.01 (swIPe in order to securely communicate with outside hosts. This mode of operation can be extended to) 72 405.67 P
0.08 (securely connect two or more networks over an untrusted link. Figure 4b shows) 72 392.67 P
3 F
0.18 -0.55 (alice) 425.8 392.67 B
2 F
0.08 ( and) 456.02 392.67 P
3 F
0.18 -0.55 (bob) 477.54 392.67 B
1 F
0.08 (tunneling) 498.49 392.67 P
2 F
(their traf) 72 379.67 T
(\336c through a pair of swIPe \336rewalls,) 109.94 379.67 T
3 F
-0.55 (tina) 272.87 379.67 S
2 F
( and) 297.04 379.67 T
3 F
-0.55 (tom) 318.4 379.67 S
2 F
(.) 336.52 379.67 T
72 72 540 720 C
153.72 504 458.28 720 C
159.72 678 249.72 714 R
7 X
0 K
V
0.5 H
2 Z
0 X
N
357.72 678 447.72 714 R
7 X
V
0 X
N
6 12 Q
(alice) 190.54 691.83 T
(bob) 393.39 691.83 T
226.56 660 231.72 678 236.88 660 231.72 660 4 Y
9 X
V
370.56 660 375.72 678 380.88 660 375.72 660 4 Y
V
231.72 660 231.72 660 247.72 642 359.72 642 375.72 660 375.72 660 6 L
3 H
0 Z
N
189.93 657.81 195.72 678 201.51 657.81 195.72 657.81 4 Y
4 X
V
405.93 657.81 411.72 678 417.51 657.81 411.72 657.81 4 Y
V
195.72 657.81 195.72 642 215.36 624 392.08 624 411.72 642 411.72 657.81 6 L
N
341.91 582.21 321.72 588 341.91 593.79 341.91 588 4 Y
V
355.53 593.79 375.72 588 355.53 582.21 355.53 588 4 Y
V
341.91 588 355.53 588 2 L
N
5 F
0 X
(logical path) 384.91 584.4 T
341.91 564.21 321.72 570 341.91 575.79 341.91 570 4 Y
9 X
V
355.53 575.79 375.72 570 355.53 564.21 355.53 570 4 Y
V
341.91 570 355.53 570 2 L
N
5 9 Q
0 X
(swIPe) 385.67 566.4 T
5 12 Q
( path) 410.14 566.4 T
341.91 546.21 321.72 552 341.91 557.79 341.91 552 4 Y
V
355.53 557.79 375.72 552 355.53 546.21 355.53 552 4 Y
V
341.91 552 355.53 552 2 L
N
(clear IP path) 384.95 548.91 T
0 11 Q
(Figur) 211.39 523.64 T
(e 3: End-to-end swIPe operation) 237.44 523.64 T
72 72 540 720 C
0 0 612 792 C
72 72 540 720 C
93 81 519 357 C
99 159 297 351 R
1 H
2 Z
0 X
0 K
N
4 11 Q
(\050a\051 Secur) 113.78 180.11 T
(e external r) 156.01 180.11 T
(outer) 210.11 180.11 T
(.) 235.1 180.11 T
315 159 513 351 R
N
(\050b\051 Secur) 329.78 180.11 T
(e patching.) 372.6 180.11 T
108 252 153 288 R
7 X
V
0.5 H
0 X
N
243 252 288 288 R
7 X
V
0 X
N
5 12 Q
(outside) 111.17 270.26 T
(inside) 249.84 272.63 T
140.79 308.19 135 288 129.21 308.19 135 308.19 4 Y
4 X
V
266.79 308.19 261 288 255.21 308.19 261 308.19 4 Y
V
135 308.19 135 324 144 333 252 333 261 324 261 308.19 6 L
3 H
0 Z
N
171 252 225 288 18 RR
0.5 H
0 X
N
(frank the) 174.67 272.63 T
129.84 234 135 252 140.16 234 135 234 4 Y
9 X
V
183.84 234 189 252 194.16 234 189 234 4 Y
V
135 234 135 234 144 225 180 225 189 234 189 234 6 L
3 H
N
201.84 234 207 252 212.16 234 207 234 4 Y
0 X
V
255.84 234 261 252 266.16 234 261 234 4 Y
V
207 234 207 234 216 225 252 225 261 234 261 234 6 L
N
(alice) 118.17 261.26 T
(bob) 255.5 261.26 T
(\336rewall) 179.34 261.26 T
333 288 378 324 R
7 X
V
0.5 H
2 Z
0 X
N
450 288 495 324 R
7 X
V
0 X
N
324 225 378 261 18 RR
0 Z
N
450 225 504 261 18 RR
N
398.19 237.21 378 243 398.19 248.79 398.19 243 4 Y
9 X
V
429.81 248.79 450 243 429.81 237.21 429.81 243 4 Y
V
398.19 243 429.81 243 2 L
3 H
N
0 X
(alice) 343.17 303.36 T
(bob) 462.5 303.36 T
(tina) 341.33 240.36 T
(tom) 467 240.36 T
464.13 274.5 468 288 471.87 274.5 468 274.5 4 Y
V
471.87 274.5 468 261 464.13 274.5 468 274.5 4 Y
V
468 274.5 468 274.5 2 L
N
356.13 274.5 360 288 363.87 274.5 360 274.5 4 Y
V
363.87 274.5 360 261 356.13 274.5 360 274.5 4 Y
V
360 274.5 360 274.5 2 L
N
398.19 300.21 378 306 398.19 311.79 398.19 306 4 Y
4 X
V
429.81 311.79 450 306 429.81 300.21 429.81 306 4 Y
V
398.19 306 429.81 306 2 L
N
0 11 Q
0 X
(Figur) 210.76 124.64 T
(e 4: Alternate swIPe con\336gurations.) 236.81 124.64 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
0 11 Q
0 X
0 K
(3. Implementation under 4.3 BSD.) 72 712.67 T
2 F
0.42 (In order to investigate the feasibility of network-layer security in practical environments and to provide a) 72 693.67 P
-0.22 (testbed for experimenting with various security polices, we built a prototype implementation of swIPe. Our) 72 680.67 P
1.52 (prototype runs on several BSD-derived platforms, including SunOS 4.1.2 on Sun SparcStation-2s, and) 72 667.67 P
-0.11 (CMU\325) 72 654.67 P
-0.11 (s Mach 2.5 running on 486-class PCs. This section describes our implementation under BSD-T) 100.08 654.67 P
-0.11 (ahoe-) 515.6 654.67 P
(derived Unix systems, in particular SunOS.) 72 641.67 T
0.75 (While our description of swIPe involved three conceptual entities \050the security) 72 622.67 P
0.75 (, policy) 424.21 622.67 P
0.75 (, and key manage-) 457.2 622.67 P
(ment engines\051, our implementation blurs the boundaries for performance and practicality reasons.) 72 609.67 T
0.1 (Part of the prototype is implemented within the Unix kernel \050in particular) 72 590.67 P
0.1 (, the security and policy engines,) 395.18 590.67 P
0.04 (and the caching of session keys\051, and part is implemented at user level \050in particular) 72 577.67 P
0.04 (, most of the key man-) 440.95 577.67 P
(agement functions, as well as the policy con\336guration interface\051.) 72 564.67 T
0.09 (W) 72 545.67 P
0.09 (e have adopted a simple model of security policy) 81.49 545.67 P
0.09 (, in which each host determines on a host-by-host basis) 296.91 545.67 P
0.56 (the precise security transformations, acceptance policies, and keys to use. Future security policies should) 72 532.67 P
0.29 (allow more sophisticated policy speci\336cations, in which both coarser \050groups of hosts\051 and \336ner \050per) 72 519.67 P
0.29 (-pro-) 518.04 519.67 P
(tocol or per) 72 506.67 T
(-application\051 control is possible.) 122.43 506.67 T
-0.03 (T) 72 487.67 P
-0.03 (o simplify the implementation, we isolate all complex policy operations within easily modi\336ed user) 77.94 487.67 P
-0.03 (-level) 514.98 487.67 P
2.25 (code. At the same time, performance requirements preclude consulting a user) 72 474.67 P
2.25 (-level process for each) 434.12 474.67 P
-0.07 (packet. T) 72 461.67 P
-0.07 (o balance these competing constraints, swIPe\325) 112.04 461.67 P
-0.07 (s operational parameters are speci\336ed through user) 313.67 461.67 P
-0.07 (-) 536.34 461.67 P
-0.14 (level interfaces to policy and key tables that are maintained in kernel space. Most packets can be processed) 72 448.67 P
0.06 (entirely within the kernel simply by consulting those tables; only packets that cannot be processed accord-) 72 435.67 P
1 (ing to existing table entries cause upcalls to user) 72 422.67 P
1 (-level processing. swIPe adds four tables to the kernel.) 292.17 422.67 P
0.56 (T) 72 409.67 P
0.56 (wo tables, the) 77.94 409.67 P
1 F
0.56 (input) 143.1 409.67 P
2 F
0.56 ( and) 165.68 409.67 P
1 F
0.56 (output key tables) 188.17 409.67 P
2 F
0.56 (, contain the current session keys for a particular remote host;) 263.74 409.67 P
0.43 (they are indexed by the address of the encapsulating packet. The session key entries also have a \324) 72 396.67 P
0.43 (\324time to) 505.08 396.67 P
2.16 (live\325) 72 383.67 P
2.16 (\325 which is decremented each time they are used. The other two kernel tables, the) 91.32 383.67 P
1 F
2.16 (policy tables) 479.24 383.67 P
2 F
2.16 (,) 537.25 383.67 P
1.44 (describe how encapsulated and non-swIPe packets should be handled; they are indexed by the host IP) 72 370.67 P
-0.14 (address of the encapsulated \050non-swIPe\051 packet. The input policy table describes the kind \050if any\051 of swIPe) 72 357.67 P
1.44 (processing \050encryption, authentication, or both\051 that is expected of packets from a particular source IP) 72 344.67 P
0.84 (address, and the address allowed to encapsulate packets for it. The output policy table contains the con-) 72 331.67 P
0.25 (verse data, describing the kind of processing to perform for a given destination address and the address to) 72 318.67 P
0.56 (which the encapsulated packets should be sent for it. Having two sets of tables, one for keys and one for) 72 305.67 P
0.16 (policy) 72 292.67 P
0.16 (, indexed separately) 98.75 292.67 P
0.16 (, is the mechanism through which non-end-to-end con\336gurations as described in) 185.93 292.67 P
(the previous section are implemented.) 72 279.67 T
0.86 (The swIPe implementation includes kernel modi\336cations for processing incoming and outgoing IP data-) 72 260.67 P
0.87 (grams and processing policy table management) 72 247.67 P
3 F
1.91 -0.55 (ioctl\050\051) 288.36 247.67 B
2 F
0.87 ( calls, a user) 330.65 247.67 P
0.87 (-level) 387.34 247.67 P
1 F
0.87 (key management daemon) 415.97 247.67 P
2 F
0.87 (, a) 528.76 247.67 P
0.07 (user) 72 234.67 P
0.07 (-level) 90.08 234.67 P
1 F
0.07 (policy daemon) 117.91 234.67 P
2 F
0.07 (, and a set of tools for con\336guring swIPe policy \050by issuing the appropriate table-) 182.36 234.67 P
(management) 72 221.67 T
3 F
-0.55 (ioctl\050\051) 130.89 221.67 S
2 F
( calls\051.) 173.18 221.67 T
0.52 (The swIPe kernel code for processing outgoing datagrams is contained within a virtual network interface) 72 202.67 P
-0.15 (\050called) 72 189.67 P
3 F
-0.33 -0.55 (sw) 104.49 189.67 B
1 F
-0.15 (n) 116.57 189.67 P
2 F
-0.15 (, where) 122.07 189.67 P
1 F
-0.15 (n) 156.85 189.67 P
2 F
-0.15 ( is) 162.34 189.67 P
3 F
-0.33 -0.55 (0) 174.86 189.67 B
2 F
-0.15 (,) 180.9 189.67 P
3 F
-0.33 -0.55 (1) 186.25 189.67 B
2 F
-0.15 (, etc.\051. This virtual interface appears to the rest of the system as if it were a con-) 192.29 189.67 P
0.43 (ventional network interface; this technique is similar in spirit to the one described in [1]. Recall that con-) 72 176.67 P
1.55 (ceptually) 72 163.67 P
1.55 (, the policy engine \336lters all outgoing IP datagrams to determine whether the packet requires) 111.56 163.67 P
0.05 (processing by swIPe. Since in our prototype only the destination IP address is used to select these packets,) 72 150.67 P
0.03 (we use the existing BSD routing mechanism as our primary outgoing policy \336lter) 72 137.67 P
0.03 (. At con\336guration time, a) 429.41 137.67 P
-0.16 (route is set to) 72 124.67 P
3 F
-0.36 -0.55 (sw0) 132.99 124.67 B
2 F
-0.16 ( for all hosts and networks with which swIPe processing is desired. It is also necessary to) 151.12 124.67 P
1.08 (specify the kind of processing \050encryption, authentication, or both\051 desired for each host and where the) 72 111.67 P
0.38 (encapsulated packets should be sent. This is done through a special) 72 98.67 P
3 F
0.84 -0.55 (ioctl\050\051) 374 98.67 B
2 F
0.38 ( call that creates an entry of) 416.29 98.67 P
0.31 (the appropriate kind in the outgoing policy table. Another) 72 85.67 P
3 F
0.68 -0.55 (ioctl\050\051) 331.08 85.67 B
2 F
0.31 ( sets up session key entries in the key) 373.38 85.67 P
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
0.24 (table \050with a time-to-live of) 72 712.67 P
3 F
0.52 -0.55 (0) 197.38 712.67 B
2 F
0.24 (\051 for the encapsulating address. These) 203.42 712.67 P
3 F
0.52 -0.55 (ioctl\050\051) 373.57 712.67 B
2 F
0.24 (s are generally called by the) 415.86 712.67 P
(key and policy daemons according to user) 72 699.67 T
(-level con\336guration \336les.) 256.68 699.67 T
0.05 (When an outgoing packet is routed through) 72 680.67 P
3 F
0.12 -0.55 (sw0) 265.54 680.67 B
2 F
0.05 (, swIPe \336rst looks up the destination IP address in the out-) 283.66 680.67 P
0.24 (put policy table to \336nd the address to which the encapsulated packet should be sent. If no entry exists, the) 72 667.67 P
0.38 (packet is sent, via the upcall mechanism \050described below\051 to the policy management daemon. \050Note that) 72 654.67 P
1.06 (when no entry exists for an outgoing packet that was routed to sw0, it is because the destination host\325) 72 641.67 P
1.06 (s) 535.72 641.67 P
0.66 (address is on a network for which swIPe processing is required but to which no packets have previously) 72 628.67 P
0.41 (been sent\051. If the lookup was successful, swIPe then looks up the encapsulating address in the output key) 72 615.67 P
0.5 (table to \336nd the current session keys for the appropriate operations. If this lookup fails, or if the keys are) 72 602.67 P
1.22 (expired, the packet is sent via the upcall mechanism to the key management daemon. The packets that) 72 589.67 P
2.2 (caused this exception processing are not delivered to their corresponding higher) 72 576.67 P
2.2 (-layer protocol; their) 444.67 576.67 P
(retransmission once a key is established is handled entirely by the higher) 72 563.67 T
(-layer protocol.) 391.87 563.67 T
0.53 (Most outgoing packets have valid table entries and do not cause exceptions. These packets are encrypted) 72 544.67 P
0.03 (and/or authenticated according to the policy rules and keys in the tables, and then encapsulated as the pay-) 72 531.67 P
0.38 (load of a swIPe packet. The resulting packet is then sent to its destination \050which may not be the same as) 72 518.67 P
-0.21 (the original packet\051 via the appropriate interface according to the standard routing tables \050ignoring any) 72 505.67 P
3 F
-0.47 -0.55 (sw0) 521.87 505.67 B
2 F
1.02 (entries\051. The processing of outgoing packets in the kernel is summarized in Figure 5. Note that packets) 72 492.67 P
0.46 (from the key management daemon bypass swIPe processing, since this traf) 72 479.67 P
0.46 (\336c must usually complete as a) 405.59 479.67 P
(prerequisite to passing any swIPe-protected data.) 72 466.67 T
72 72 540 720 C
81.89 80.74 530.11 444 C
263.23 300.29 398.23 374.86 R
6 X
0 K
V
0.5 H
2 Z
0 X
N
5 12 Q
(ip_output) 288.56 360.49 T
272.23 307.74 389.23 337.57 R
5 X
V
0 X
N
(std routing code) 279.56 319.67 T
(higher-layer protocols) 254.23 428.98 T
307.95 404.89 306.55 380.94 295.04 402 301.5 403.45 4 Y
3 X
V
296.73 421.39 M
 298.93 415.52 300.35 409.51 301.59 403.47 D
4 H
0 Z
N
162.56 298.91 216.56 373.48 R
1 H
2 Z
0 X
N
(routing table) 153.56 382.86 T
171.56 358.56 207.56 358.56 2 L
4 H
3 X
N
171.56 343.65 207.56 343.65 2 L
N
171.56 328.73 207.56 328.73 2 L
N
0.5 H
0 X
90 450 1.89 1.49 223.28 349.61 A
90 450 1.89 1.49 228.96 345.14 A
90 450 1.89 1.49 234.63 340.67 A
90 450 1.89 1.49 240.3 336.19 A
90 450 1.89 1.49 245.98 333.21 A
90 450 1.89 1.49 251.65 330.23 A
90 450 1.89 1.49 257.32 327.24 A
90 450 1.89 1.49 263 324.26 A
90 450 1.89 1.49 268.67 322.77 A
261.56 239.25 333.56 269.08 14.91 RR
N
369.56 239.25 441.56 269.08 14.91 RR
N
300.74 293.54 296.56 269.91 287.58 292.17 294.16 292.86 4 Y
3 X
V
297.56 306.36 M
 295.23 302.02 294.33 297.47 294.19 292.84 D
4 H
0 Z
N
191.23 158.6 335.23 225.72 R
6 X
V
1 H
2 Z
0 X
N
264.33 246.22 189.56 224.34 2 L
0.5 H
N
328.57 243.86 333.56 224.34 2 L
N
87.89 199.2 141.89 243.95 R
1 H
N
96.89 232.76 132.89 232.76 2 L
4 H
3 X
N
96.89 221.58 132.89 221.58 2 L
N
96.89 210.39 132.89 210.39 2 L
N
0.5 H
0 X
90 450 2.02 1.42 144.08 232.03 A
90 450 2.02 1.42 150.14 227.76 A
90 450 2.02 1.42 156.19 223.49 A
90 450 2.02 1.42 162.25 219.23 A
90 450 2.02 1.42 168.31 216.38 A
90 450 2.02 1.42 174.37 213.54 A
90 450 2.02 1.42 180.43 210.69 A
90 450 2.02 1.42 186.48 207.85 A
90 450 2.02 1.42 192.54 206.43 A
87.89 147 141.89 191.75 R
1 H
N
96.89 180.56 132.89 180.56 2 L
4 H
3 X
N
96.89 169.38 132.89 169.38 2 L
N
96.89 158.19 132.89 158.19 2 L
N
0.5 H
0 X
90 450 1.99 1.94 146.55 159.16 A
90 450 1.99 1.94 152.51 164.98 A
90 450 1.99 1.94 158.47 170.8 A
90 450 1.99 1.94 164.43 176.63 A
90 450 1.99 1.94 170.39 180.51 A
90 450 1.99 1.94 176.35 184.39 A
90 450 1.99 1.94 182.32 188.27 A
90 450 1.99 1.94 188.28 192.15 A
90 450 1.99 1.94 194.24 194.09 A
392.47 289.21 405.55 269.09 383.79 279.22 388.13 284.21 4 Y
3 X
V
333.56 172.14 M
 388.24 195.38 335.92 249.01 367.92 283.02 D
 371.23 286.54 379.85 286.9 388.13 284.18 D
4 H
0 Z
N
434.48 208.73 457.38 201.56 434.16 195.5 434.32 202.11 4 Y
V
405.56 239.25 M
 402.55 221.05 415.95 206.68 434.33 202.1 D
N
0 X
(to network) 459.56 193.9 T
(sw0) 286.9 256.32 T
(virtual i/f) 275.23 244.72 T
(le0) 397.56 256.59 T
(real i/f) 389.23 244.99 T
(consult policy table) 202.39 203.01 T
(consult key table) 202.39 191.41 T
(encapsulate etc.) 202.39 179.81 T
(re-route) 202.39 168.21 T
0 11 Q
(Figur) 225.76 102 T
(e 5: swIPe output pr) 251.81 102 T
(ocessing.) 346.82 102 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
1.5 (Because no existing mechanism in 4.3BSD demultiplexes incoming packets by remote address \050as the) 72 712.67 P
0.32 (routing mechanism does for outgoing packets\051, input processing is more closely coupled to the rest of the) 72 699.67 P
0.4 (kernel network code. swIPe modi\336es the standard kernel IP input routine to add a rudimentary packet \336l-) 72 686.67 P
0.42 (tering mechanism. The \336lter examines all incoming packets, whether they are swIPe-encapsulated or not,) 72 673.67 P
-0.16 (to determine if they should be accepted and passed on to the appropriate higher) 72 660.67 P
-0.16 (-layer protocol handler) 417.83 660.67 P
-0.16 (. The) 517.58 660.67 P
0.1 (\336lter is controlled by the input policy table indexed by remote \050source\051 IP host \050or network\051 address, simi-) 72 647.67 P
(lar in structure to the output policy table.) 72 634.67 T
0.8 (Observe that there are several kinds of incoming packets that the \336lter must handle. First, consider non-) 72 615.67 P
-0.22 (swIPe packets that arrive. If they arrive from a host from which swIPe packets were expected \050according to) 72 602.67 P
0.43 (the table\051, they are dropped and a message is sent to the system log. Packets for which the table speci\336es) 72 589.67 P
0.46 (that swIPe processing was not expected are passed on to the higher) 72 576.67 P
0.46 (-layer protocol or routing mechanism.) 371.26 576.67 P
0.3 (Unencapsulated packets that arrive from a host for which no table entry exists cause an exception and are) 72 563.67 P
0.02 (sent to the policy daemon, which examines them and creates an appropriate table entry) 72 550.67 P
0.02 (. Packets sent to the) 452.95 550.67 P
0.28 (daemon are otherwise dropped. Note that packets intended for the key management engine \050with protocol) 72 537.67 P
3 F
-0.55 (IPPROTO_swIPe) 72 524.67 S
2 F
(\051 bypass these checks and are delivered directly) 150.54 524.67 T
(.) 358.81 524.67 T
-0.12 (Encapsulated swIPe packets are \336rst decapsulated and decrypted/authenticated according to the keys in the) 72 505.67 P
0.18 (input key table as indexed by the address of the encapsulating packet. If no key entry exists, or if the keys) 72 492.67 P
0.2 (do not decrypt and authenticate properly) 72 479.67 P
0.2 (, the packet is sent up to the key management daemon, which ini-) 250.16 479.67 P
0.79 (tiates a session key request with the remote host. Otherwise, the decapsulated packet\325) 72 466.67 P
0.79 (s source address is) 456.17 466.67 P
0.23 (looked up in the policy table to verify that its encapsulating packet came from the proper address and that) 72 453.67 P
1.31 (the correct kind of processing \050encryption, authentication\051 was applied. If everything is acceptable, the) 72 440.67 P
1.02 (packet is delivered to the appropriate higher) 72 427.67 P
1.02 (-layer protocol or routing mechanism. Otherwise, a console) 271.35 427.67 P
0.82 (message is printed and the packet is dropped. If no input policy entry exists for the encapsulated source) 72 414.67 P
(address, the packet is sent to the policy daemon and dropped.) 72 401.67 T
-0.07 (Conceptually) 72 382.67 P
-0.07 (, the kernel policy and key tables can be thought of as cache entries for a database maintained) 129.88 382.67 P
0.06 (by the policy and key daemons. Since the number of hosts with which a machine might exchange traf) 72 369.67 P
0.06 (\336c is) 518.88 369.67 P
0.94 (potentially very lar) 72 356.67 P
0.94 (ge, it is not practical to maintain table entries in the kernel for every potential corre-) 157.29 356.67 P
1.42 (spondent. Instead, swIPe con\336guration is speci\336ed in user) 72 343.67 P
1.42 (-level \336les read by the appropriate daemons.) 336.52 343.67 P
-0.2 (When a packet arrives at the policy daemon, the destination address is looked up in the appropriate \336le; if a) 72 330.67 P
0.1 (match is found, an) 72 317.67 P
3 F
0.22 -0.55 (ioctl\050\051) 156.3 317.67 B
2 F
0.1 ( is issued to con\336gure the policy in the kernel. This allows policy to be speci-) 198.6 317.67 P
0.33 (\336ed concisely for lar) 72 304.67 P
0.33 (ge classes of addresses; while the kernel table entries are on a host-by-host basis, the) 163.41 304.67 P
(daemon\325) 72 291.67 T
(s tables can look up policy by their network or subnet address as well.) 109.84 291.67 T
-0.27 (Key distribution uses either public or secret key techniques. In the public key version, each host\325) 72 272.67 P
-0.27 (s key man-) 492.34 272.67 P
1.25 (agement daemon maintains a list of RSA [15] public signature keys for each of the other swIPe hosts.) 72 259.67 P
0.92 (When a session key is required, a Dif) 72 246.67 P
0.92 (\336e-Hellman key exchange is initiated, with the components of the) 242.42 246.67 P
0.67 (transaction signed with each host\325) 72 233.67 P
0.67 (s private key) 223.57 233.67 P
0.67 (. Public key distribution is static and manual; this is obvi-) 280.33 233.67 P
0.32 (ously an area for much future research. This aspect of our prototype is primarily useful as a proof of con-) 72 220.67 P
-0.08 (cept. In the secret key version, each host maintains a unique, static key for each other host which is used to) 72 207.67 P
0.99 (encrypt the session keys. Again, the kernel table can be thought of as a cache of session keys, with the) 72 194.67 P
(de\336nitive keys managed by the daemon.) 72 181.67 T
-0.23 (Our implementation of swIPe can be used in a variety of ways: in its simplest form, it provides host-to-host) 72 162.67 P
0.41 (authentication and encryption. It can also be used to implement all the \324\336rewall\325 con\336gurations described) 72 149.67 P
(in the previous section.) 72 136.67 T
0.3 (The basic swIPe implementation adds less that 3000 lines of code to the kernel; the actual DES and MD5) 72 117.67 P
(code adds approximately another 3000 lines.) 72 104.67 T
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
0 11 Q
0 X
0 K
(4. Performance) 72 712.67 T
2 F
1.98 (Our swIPe prototype is implemented entirely in software; this represents a somewhat unconventional) 72 693.67 P
0.67 (approach to cryptographic protection of network traf) 72 680.67 P
0.67 (\336c. Algorithms such as DES have traditionally been) 307.07 680.67 P
0.66 (thought too slow to permit their use in high-bandwidth applications without adjunct hardware. However) 72 667.67 P
0.66 (,) 537.25 667.67 P
0.52 (several key factors make software implementations of network encryption increasingly practical: modern) 72 654.67 P
1.23 (workstations are becoming suf) 72 641.67 P
1.23 (\336ciently powerful to execute cryptographic operations at speeds equal to) 210.06 641.67 P
-0.21 (previous-generation cryptographic processors; network bandwidth is not increasing at the same rate as pro-) 72 628.67 P
1.4 (cessor speed, and \336nally) 72 615.67 P
1.4 (, distributed applications rarely use even a small fraction of available network) 182.88 615.67 P
0.06 (bandwidth. While our experience with swIPe reinforces our belief that encryption is becoming practical in) 72 602.67 P
(software, swIPe itself does not depend on any particular software or hardware architecture.) 72 589.67 T
-0.1 (W) 72 570.67 P
-0.1 (e instrumented the SunOS 4.1.2 kernel to measure the costs of the various components of our implemen-) 81.49 570.67 P
-0.01 (tation. All measurements were taken by using the internal SparcStation microsecond-resolution clock. The) 72 557.67 P
0.64 (clock was read in key locations of the code being timed, and the resulting timestamps and time intervals) 72 544.67 P
0.13 (were deposited in a kernel buf) 72 531.67 P
0.13 (fer) 205.18 531.67 P
0.13 (. A user) 216.77 531.67 P
0.13 (-level process would periodically empty the buf) 251.29 531.67 P
0.13 (fer and record the) 461.82 531.67 P
(results. The measurement error was within approximately 4 microseconds.) 72 518.67 T
0.23 (The overhead of the swIPe protocol processing itself is minimal, adding approximately 100 microseconds) 72 155.67 P
1.02 (to the total packet processing time regardless of packet size. For small datagrams, this is about half the) 72 142.67 P
0.07 (time it takes the kernel to deliver them to the hardware interface, diminishing further in signi\336cance as the) 72 129.67 P
1.15 (datagram size increases. This overhead is dwarfed by the amount of time it takes to compute a crypto-) 72 116.67 P
0.41 (graphic hash function, which in turn is dwarfed by the time it takes to perform a single pass DES in soft-) 72 103.67 P
-0.17 (ware. On a SparcStation-2 class machine, processing a 100-octet datagram adds roughly 200 microseconds) 72 90.67 P
1.31 (for computing an MD5 cryptographic checksum, and another 900 microseconds for encrypting using a) 72 77.67 P
72 72 540 720 C
119.5 171 492.5 496 C
0 17 10 378 296 361 286 125.5 204 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (S-PLUS Graphics)
%%Creator: S-PLUS
%%For: (John Ioannidis)
%%CreationDate: Sat Aug  7 22:11:40 1993
%%BoundingBox: 17 10 378 296
%%Pages: (atend)
%%DocumentData: Clean7Bit
%%DocumentNeededResources: (atend)
%%EndComments

% %%BoundingBox: 20 35 592 757
% Begin fixes to scale the bloody thing.
% 90 rotate 757 0 translate
5 310 translate -90 rotate
.5 .5 scale
%%BeginProlog
150 dict begin
/bd {bind def} def
/PVer 3100 def % version
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont
    /Colors GColors def
} bd
/IBu {} def
/B {newpath} bd
/C {currentpoint Penup {newpath} {stroke} ifelse moveto} bd
/E {stroke} bd
/F {closepath fill} bd
/M {moveto} bd
/L {lineto} bd
/Pu {load /XEQ exch def /Penup true def} bd
/Pd {/XEQ {} def /Penup false def} bd
/Px {currentdict /XEQ known {XEQ} if} bd
/h {Penup {rmoveto Px} {rlineto} ifelse} bd
/j {neg Penup {rmoveto Px} {rlineto} ifelse} bd
/k {exch neg exch Penup {rmoveto Px} {rlineto} ifelse} bd
/l {neg exch neg exch Penup {rmoveto Px} {rlineto} ifelse} bd
/m {moveto Penup {Px} if} bd
/x {0 Penup {rmoveto Px} {rlineto} ifelse} bd
/y {0 exch Penup {rmoveto Px} {rlineto} ifelse} bd
/w {neg x} bd
/z {neg y} bd
/a {B M dup y exch x neg y closepath} bd
/b {a fill} bd
/c {a stroke} bd
/A {PageBegin BackCol dup 0 gt {
    gsave Sc Page aload pop
    exch 4 -1 roll dup 5 1 roll sub 3 1 roll exch dup 4 1 roll sub 4 2 roll b
    grestore} {pop} ifelse
} bd
/Ph {gsave Pch-x Pch-y rmoveto Show grestore} bd
/Pc {Pch Ph} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd
% parameter setting commands
/saveAt {Attr begin
    /Atlinewidth currentlinewidth def
    /Atfont currentfont def
    /Atdash currentdash 2 array astore def
    /AtSc CurSc def
end} bd
/restAt {Attr begin
    Atlinewidth Atfont Atdash AtSc
    end
    Sc
    aload pop setdash
    setfont
    setlinewidth
} bd
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sp {dup 42 eq {pop IBu} {Pch exch 0 exch put SetPchSize} ifelse}bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
% other variable definitions
/Iv {
    /InPage false def
    /Clip 4 array def
    /Page 4 array def
    /Figure [0 0 1 1] def
    /Plot [0 0 1 1] def
    /ClipToPlot true def
    /Cex 1 def
    /Outline false def
    /Pch 1 string def
    /Pch-x 0 def
    /Pch-y 0 def
    /Text-y 0 def
    /LineTypes [ % in default units
	[] [1 2] [4 4] [8 4] [13 3] [16 2 2 2] [8 2 2 2] [1 13] [6 5] [12 4]
    ] def
    /Attr 5 dict def
    /CurSc 1 def
    /Penup false def
    /XEQ {} def
} bd
% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
    0 1 Array length 1 sub
    {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
    uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
    lx ly translate Landscape {90 rotate 0 Height neg translate} if
    1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
    newpath 0 0 moveto Pch false charpath flattenpath pathbbox
    exch 3 1 roll
    add 2 div neg /Pch-y exch def
    add 2 div neg /Pch-x exch def
    grestore} bd
/TextShow {
    CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse
} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
    /RotDiff exch def
    /Cos RotDiff cos abs def
    /Sin RotDiff sin abs def
    {
	( ) dup 0 4 -1 roll put
	dup stringwidth pop /CharWidth exch def
	Cos 0 eq {
	    Text-y Sin div
	} {
	    Sin 0 eq {
		CharWidth Cos div
	    } {
		Text-y Sin div dup
		CharWidth Cos div dup
		4 1 roll lt {exch pop} {pop} ifelse
	    } ifelse
	} ifelse 2 div /CharDist exch def
	CharDist 0 translate 0 0 moveto
	gsave
	    RotDiff rotate
	    CharWidth 2 div neg Text-y 2 div neg rmoveto
	    Outline {false charpath stroke} {show} ifelse
	grestore
	CharDist 0 translate 0 0 moveto
    } forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
    2 {CLW add 4 1 roll} repeat
    2 {CLW sub 4 1 roll} repeat
    % initclip
    saveAt grestore gsave restAt
    newpath 2 index exch 2 index exch dup 6 index exch
    moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {7 dict begin /A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
    Ux Lx sub A 0 get mul Lx add
    Uy Ly sub A 1 get mul Ly add
    Ux Lx sub A 2 get mul Lx add
    Uy Ly sub A 3 get mul Ly add end} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def gsave} bd
/PageEnd {grestore PageContext restore /InPage false def} bd
/SImage {
    dup /Bits exch def 8 exch idiv /PerByte exch def
    /Ht exch def /Wid exch def
    1 Wid div 1 Ht div scale
    /saveSc CurSc def /Colors IColors def
    /curstr Wid PerByte add 1 sub PerByte idiv string def
    /MaskByte 16#ff Bits 8 sub bitshift def
    1 1 Ht {
	currentfile curstr readhexstring pop pop
	/CurPos 0 def
	/Left PerByte def
	1 1 Wid {
	    Left PerByte eq {
		/CurByte curstr CurPos get def
		/MaskMove -8 Bits add def
		/CurPos CurPos 1 add def
	    } if
	    CurByte MaskMove bitshift MaskByte and
	    dup 0 gt {
		Sc
		exch dup 3 1 roll B M 1 z 1 w 1 y F
	    } {pop pop} ifelse
	    Left 1 sub dup /Left exch def 0 le
	    {/Left PerByte def}
	    {/MaskMove MaskMove Bits add def} ifelse
	} for
	pop
    } for
    /Colors GColors def saveSc Sc
} bd
/Ic {} bd
/Sc {
    dup /CurSc exch def
    dup dup 1 lt exch 0 ge and
    {1 exch sub setgray}  % explicit gray level [0,1)
    {1 sub Colors dup 3 1 roll length Rem floor get
     dup type /arraytype eq {aload pop setrgbcolor} {setgray} ifelse
    } ifelse
} bd
/If {} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd
%%EndProlog
%%BeginSetup
% fixed controlling parameters
/Landscape true def
/Region [20.88 35.0886 591.12 756.911] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/GColors [
	0
	0.6
	0.3
	0.9
	0.4
	0.7
	0.1
	0.5
	0.8
	0.2
] def
/BackCol -1 def
/IColors [
	0.933333
	0.866667
	0.8
	0.733333
	0.666667
	0.6
	0.533333
	0.466667
	0.4
	0.333333
	0.266667
	0.2
	0.133333
	0.0666667
	0
] def
/Colors GColors def
/IBu {Pch 0 8#267 put SetPchSize} def
/Bu {Pc} def

% all initialization action here
Iv I
currentdict /Ic known {Ic} if
currentdict /If known {If} if

%%EndSetup


%%Page: 1 1
%%PageOrientation: Landscape
A
1 St
1 Sw
1 Sc
0 Sr
79 Sp
1.4 Sx
0.0615 0.9685 0.0968354 0.922152 So
0 1 0 1 Sg
0 Sh
1 Sd
%%IncludeResource: font Helvetica
1 Sf
(Packet Size) 1549 81 0.5 T
90 Sr
90 Sh
(milliseconds) 36 1211 0.5 T
0 Sr
0 Sh
199 230 m
20 z
836 230 m
20 z
1473 230 m
20 z
2109 230 m
20 z
2746 230 m
20 z
E
199 230 m
2547 x
E
(0) 199 153 0.5 T
(500) 836 153 0.5 T
(1000) 1473 153 0.5 T
(1500) 2109 153 0.5 T
(2000) 2746 153 0.5 T
90 Sr
90 Sh
185 691 m
20 w
185 1155 m
20 w
185 1618 m
20 w
185 2082 m
20 w
E
185 691 m
1391 y
E
(5) 108 691 0.5 T
(10) 108 1155 0.5 T
(15) 108 1618 0.5 T
(20) 108 2082 0.5 T
0 Sr
0 Sh
0 Sd
2728 1961 185 230 c
83 Sp
1 Sx
/Pc Pu B
286 303 m
51 38 h
61 44 h
122 90 h
255 182 h
509 365 h
509 364 h
387 261 h
123 114 h
509 357 h
Pd
B
E
286 303 m
51 38 h
61 44 h
122 90 h
255 182 h
509 365 h
509 364 h
387 261 h
123 114 h
509 357 h
E
69 Sp
/Pc Pu B
286 284 m
51 38 h
61 40 h
122 80 h
255 166 h
509 332 h
509 332 h
387 236 h
123 101 h
509 325 h
Pd
B
E
286 284 m
51 38 h
61 40 h
122 80 h
255 166 h
509 332 h
509 332 h
387 236 h
123 101 h
509 325 h
E
65 Sp
/Pc Pu B
286 257 m
51 5 h
61 4 h
122 10 h
255 16 h
509 32 h
509 32 h
387 24 h
123 15 h
509 33 h
Pd
B
E
286 257 m
51 5 h
61 4 h
122 10 h
255 16 h
509 32 h
509 32 h
387 24 h
123 15 h
509 33 h
E
42 Sp
/Bu Pu B
286 237 m
51 6 h
61 x
122 x
255 x
509 x
509 x
387 2 j
123 3 h
509 x
Pd
B
E
286 237 m
51 6 h
61 x
122 x
255 x
509 x
509 x
387 2 j
123 3 h
509 x
E
0 Sc
1 Sd
973 248 378 3337060 b
1 Sc
378 3337060 m
248 y
1351 3337060 m
248 y
E
378 3337060 m
973 x
378 3337308 m
973 x
E
83 Sp
/Pc Pu B
483 3337263 m
Pd
(Authentication + Encryption) 588 3337263 0 T
E
69 Sp
/Pc Pu B
483 3337213 m
Pd
(Encryption Only) 588 3337213 0 T
E
65 Sp
/Pc Pu B
483 3337164 m
Pd
(Authentication Only) 588 3337164 0 T
E
42 Sp
/Bu Pu B
483 3337114 m
Pd
(Neither) 588 3337114 0 T
E
0 Sc
973 248 378 1648 b
1 Sc
378 1648 m
248 y
1351 1648 m
248 y
E
378 1648 m
973 x
378 1896 m
973 x
E
83 Sp
/Pc Pu B
483 1851 m
Pd
(Authentication + Encryption) 588 1851 0 T
E
69 Sp
/Pc Pu B
483 1801 m
Pd
(Encryption Only) 588 1801 0 T
E
65 Sp
/Pc Pu B
483 1752 m
Pd
(Authentication Only) 588 1752 0 T
E
42 Sp
/Bu Pu B
483 1702 m
Pd
(Neither) 588 1702 0 T
E
Z
%%Trailer
%%Pages: 1
%%DocumentNeededResources: font Helvetica
W
%%EOF

%%EndDocument
FMENDEPSF
0 11 Q
0 X
0 K
(Figur) 222.65 181 T
(e 6: swIPe pr) 248.7 181 T
(ocessing overhead) 309.82 181 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
0.27 (highly-optimized software implementation of DES. Processing a 1000-octet packet requires roughly 1000) 72 712.67 P
0.78 (microseconds for the MD5 checksum and 10,000 microseconds for the DES encryption. Figure 6 shows) 72 699.67 P
0.78 (the total time required to process a swIPe packet in the kernel as a function of the packet size. The four) 72 686.67 P
-0.24 (curves show the processing time the four possible processing combinations: no protection, only authentica-) 72 673.67 P
(tion \050MD5\051, only encryption \050DES\051, and both authentication and encryption.) 72 660.67 T
0.69 (The timing) 72 641.67 P
2 9 Q
0.56 (ICMP ECHO) 124.64 641.67 P
2 11 Q
0.69 ( packets is consistent with these numbers. Namely) 173.89 641.67 P
0.69 (, a 56-octet ping gives a round-) 398.89 641.67 P
1.19 (trip delay of 8 milliseconds, while a 1000-octet ping gives a round-trip delay of 47milliseconds. These) 72 628.67 P
0.48 (numbers include four encryption/decryptions and four authentication operations \050when the packet is sent,) 72 615.67 P
0.37 (received, returned, and received again\051. TCP throughput between two SparcStation-2s on a lightly loaded) 72 602.67 P
0.31 (Ethernet is approximately 440kbps when using DES encryption; the observed variance \050~30kbps\051 obliter-) 72 589.67 P
0.34 (ates any \336ne-grained measurement of the added ef) 72 576.67 P
0.34 (fect of authentication. When using MD5 authentication) 295.38 576.67 P
-0.24 (only) 72 563.67 P
-0.24 (, we observed TCP throughput at approximately 3400kbps. For comparison, the TCP throughput of the) 90.82 563.67 P
(unmodi\336ed machines \050without swIPe\051) 72 550.67 T
(is roughly 6000kbps.) 242.28 550.67 T
1.27 (It is important to put these numbers in perspective. Interactive traf) 72 531.67 P
1.27 (\336c consists mostly of small packets;) 375.27 531.67 P
-0.03 (hence, adding authentication and encryption between communicating hosts adds a \336xed delay of 2-3 milli-) 72 518.67 P
0.05 (seconds, which is not perceptible considering that this is usually the delay associated with going through a) 72 505.67 P
-0.25 (single router) 72 492.67 P
-0.25 (. Lar) 126.37 492.67 P
-0.25 (ge packets are usually associated with batch transfers or remote \336lesystem operations, and) 146.67 492.67 P
-0.06 (are usually already bound by disk I/O rates rather than network rates. Note that on a SparcStation-2, swIPe) 72 479.67 P
1.58 (can process datagrams at roughly one megabit per second, which, although not transparent, is at least) 72 466.67 P
-0 (within an order of magnitude of the bandwidth of a typical NFS server) 72 453.67 P
-0 (. Of course, hardware-assisted cryp-) 381.38 453.67 P
-0.13 (tographic functions can further reduce the ef) 72 440.67 P
-0.13 (fects of this bottleneck, as could the use of lower latency cryp-) 266.25 440.67 P
3.21 (tographic algorithms \050e.g., DES\325) 72 427.67 P
3.21 (s OFB mode, which can use idle processor cycles to precompute) 224.44 427.67 P
(cryptographic masks\051.) 72 414.67 T
0 F
(5. Conclusions) 72 376.67 T
2 F
-0.05 (In developing a network security protocol, it was important to keep both interoperability with existing sys-) 72 357.67 P
-0.23 (tems and a migration path in mind. T) 72 344.67 P
-0.23 (o this end, swIPe functionality does not depend on any IP-speci\336c fea-) 232.56 344.67 P
(tures, and can therefore be easily adapted to other connectionless network protocols.) 72 331.67 T
-0.14 (swIPe is not only a fully-functional network security protocol in itself, but also provides the framework for) 72 312.67 P
-0.12 (experimenting with alternative security algorithms and policies, and, more important, lar) 72 299.67 P
-0.12 (ge-scale key man-) 460.31 299.67 P
0.01 (agement strategies. It is perhaps in these areas that we will see much of the interesting research in network) 72 286.67 P
0.62 (security systems. It is our hope that researchers and developers of network and other lar) 72 273.67 P
0.62 (ge-scale security) 465.86 273.67 P
0.19 (systems will adopt swIPe as a vehicle; while the current implementation is by no means stable enough for) 72 260.67 P
(general distribution, interested parties are encouraged to discuss their plans with the authors.) 72 247.67 T
0 F
(Acknowledgments) 72 209.67 T
2 F
0.76 (This work owes its conception to many fruitful discussions, guidance, and encouragement by Phil Karn.) 72 190.67 P
0.61 (The implementation of the encryption code was aided greatly by discussions with Jack Lacy) 72 177.67 P
0.61 (. The imple-) 484.77 177.67 P
-0.04 (mentation and testing were carried out over many late evenings at the Mobile Computing Lab at Columbia) 72 164.67 P
(University) 72 151.67 T
(.) 117.67 151.67 T
0 F
(Refer) 72 113.67 T
(ences) 98.03 113.67 T
2 F
([1]) 72 94.67 T
0.61 (S. M. Bellovin. Pseudo-Network Drivers and V) 90 94.67 P
0.61 (irtual Networks \320 Extended Abstract. In) 302.02 94.67 P
1 F
0.61 (Usenix Con-) 484.16 94.67 P
(fer) 90 81.67 T
(ence Pr) 101.8 81.67 T
(oceedings) 135.25 81.67 T
2 F
(, pages 229\320244. Usenix, January 1990.) 179.19 81.67 T
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 11
612 792 0 FMBEGINPAGE
2 11 Q
0 X
0 K
([2]) 72 712.67 T
0.22 ( Matt Blaze. A cryptographic \336le system for Unix. In) 90 712.67 P
1 F
0.22 (First ACM Confer) 328.41 712.67 P
0.22 (ence on Communications and) 409.03 712.67 P
(Computing Security) 90 699.67 T
2 F
(, Fairfax, V) 176.87 699.67 T
(A, November 1993.) 226.1 699.67 T
([3]) 72 680.67 T
1.24 (W) 90 680.67 P
1.24 (. Dif) 99.36 680.67 P
1.24 (\336e and M. E. Hellman. New Directions in Cryptography) 120.54 680.67 P
1.24 (.) 377.24 680.67 P
1 F
1.24 (IEEE T) 383.98 680.67 P
1.24 (ransactions on Information) 417.27 680.67 P
(Theory) 90 667.67 T
2 F
(}, IT) 121.12 667.67 T
(-22:644\320654, 1976.) 141.25 667.67 T
([4]) 72 648.67 T
0.52 (D. P) 90 648.67 P
0.52 (. Anderson) 108.83 648.67 P
1 F
0.52 (et al.) 160.83 648.67 P
2 F
0.52 ( A Protocol for Secure Communication in Lar) 183.32 648.67 P
0.52 (ge Distributed Systems. T) 388.46 648.67 P
0.52 (echnical) 503.39 648.67 P
(Report UCB/CSD 87/342, University of California, Berkeley) 90 635.67 T
(, February 1987.) 358.44 635.67 T
([5]) 72 616.67 T
-0.19 (John Ioannidis.) 90 616.67 P
1 F
-0.19 (Pr) 159.5 616.67 P
-0.19 (otocols for Mobile Internetworking) 170.08 616.67 P
2 F
-0.19 (. Ph.D. thesis, Columbia University in the City of) 324.23 616.67 P
(New Y) 90 603.67 T
(ork, 1993.) 120.32 603.67 T
([6]) 72 584.67 T
(John Ioannidis, Matt Blaze, and Phil Karn. swIPe: The IP Security Protocol.) 90 584.67 T
1 F
(T) 427.5 584.67 T
(o appear) 432.6 584.67 T
(.) 470.74 584.67 T
2 F
([7]) 72 565.67 T
1.4 (John Ioannidis, Dan Duchamp, and Gerald Q. Maguire Jr) 90 565.67 P
1.4 (. IP-Based Protocols for Mobile Internet-) 352.34 565.67 P
(working. In) 90 552.67 T
1 F
(Pr) 144.01 552.67 T
(oceedings of SIGCOMM\32591) 154.59 552.67 T
2 F
(, pages 235\320245. ACM, September 1991.) 277.86 552.67 T
([8]) 72 533.67 T
0.37 (ISO/IEC JTC1/SC6. ISO-IEC DIS 1) 90 533.67 P
0.37 (1577 \320 Information T) 251.29 533.67 P
0.37 (echnology \320T) 346.52 533.67 P
0.37 (elecommunications and Infor-) 406.85 533.67 P
(mation Exchange Between Systems \320 Network Layer Security Protocol, November 29 1992.) 90 520.67 T
([9]) 72 501.67 T
-0.25 (X. Lai and J. Massey) 90 501.67 P
-0.25 (. A Proposal for a New Block Encryption Standard.) 181.06 501.67 P
1 F
-0.25 (Pr) 407.99 501.67 P
-0.25 (oc. EUROCR) 418.57 501.67 P
-0.25 (YPT 90) 477.32 501.67 P
2 F
-0.25 (, pages) 509.74 501.67 P
(389\320404, 1990.) 90 488.67 T
([10]) 72 469.67 T
(Mykotronx, Inc. MYK-78 Encryption/Decryption Device. Data Sheet, 1993.) 90.3 469.67 T
([1) 72 450.67 T
(1]) 80.75 450.67 T
(National Bureau of Standards.) 90 450.67 T
1 F
(FIPS Publication 46-1: Data Encryption Standar) 225.78 450.67 T
(d) 442.34 450.67 T
2 F
(, January 1988.) 447.84 450.67 T
([12]) 72 431.67 T
2.83 (National Institute of Standards and T) 90.3 431.67 P
2.83 (echnology) 266.32 431.67 P
2.83 (.) 311.37 431.67 P
1 F
2.83 ( NISTIR 90-4250: Secur) 314.12 431.67 P
2.83 (e Data Network System) 428.68 431.67 P
(\050SDNS\051 Network, T) 90 418.67 T
(ransport, and Message Security Pr) 174.54 418.67 T
(otocols) 327.62 418.67 T
2 F
(, February 1990.) 359.36 418.67 T
([13]) 72 399.67 T
0.14 (National Institute of Standards and T) 90.3 399.67 P
0.14 (echnology) 252.85 399.67 P
0.14 (.) 297.91 399.67 P
1 F
0.14 (Publication YY) 303.54 399.67 P
0.14 (: Announcement and Speci\336cations for) 369.19 399.67 P
(a Secur) 90 386.67 T
(e Hash Standar) 122.85 386.67 T
(d \050SHS\051) 190.8 386.67 T
2 F
(, January 22, 1992.) 225.27 386.67 T
([14]) 72 367.67 T
(R.L. Rivest. RFC 1321: The MD5 Message-Digest Algorithm. Internet Activities Board, April 1992.) 90.3 367.67 T
([15]) 72 348.67 T
0.61 (R.L. Rivest, A. Shamir) 90.3 348.67 P
0.61 (, and L. Adleman. A Method for Obtaining Digital Signatures and Public-key) 192.72 348.67 P
(Cryptosystems.) 90 335.67 T
1 F
(Communications of the ACM) 160.81 335.67 T
2 F
(, 21\0502\051:120\320126, February 1978.) 288.68 335.67 T
([16]) 72 316.67 T
0.27 (J. Steiner) 90.3 316.67 P
0.27 (, C. Neuman, and J. Schiller) 131.02 316.67 P
0.27 (. Kerberos: An authentication service for open network systems.) 255.33 316.67 P
1 F
(Pr) 90 303.67 T
(oc. Usenix W) 100.58 303.67 T
(inter Confer) 158.25 303.67 T
(ence) 211.86 303.67 T
2 F
(, February 1988.) 231.99 303.67 T
FMENDPAGE
%%EndPage: "11" 12
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 11 1
%%DocumentFonts: Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%+ Courier-Bold
%%+ Palatino-Roman
%%+ Helvetica
%%+ Helvetica-Bold
