%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 8 FMDOCUMENT
0 0 /Times-BoldItalic FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
3 0 /Times-Italic FMFONTDEFINE
4 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 1 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
2 18 Q
0 X
(Security Analyses of Network T) 136.53 708 T
(ime Services) 380.05 708 T
3 12 Q
(Matt Bishop) 276.51 676 T
1 F
(Department of Mathematics and Computer Science) 182.92 656 T
(Dartmouth College) 259.86 642 T
(Hanover) 257.45 628 T
(, NH 03755) 298.26 628 T
3 F
(ABSTRACT) 277.68 602 T
1 F
0.46 (In this paper we discuss the generic security requirements for a network time ser-) 108 582 P
-0.73 (vice, analyze the nature of the mechanisms necessary to provide these requirements,) 108 568 P
0.66 (and apply our analysis to an existing network time protocol. The analysis reveals) 108 554 P
(several shortcomings.) 108 540 T
2 F
(1. Intr) 72 514 T
(oduction) 104.43 514 T
1 F
0.44 (The accuracy of local clocks on most computer systems is woefully inadequate, errors of) 108 490 P
-0.38 (minutes being common and of hours, days, or even years occasional. Among the causes are impre-) 72 470 P
-0.31 (cise initialization \050due to the inaccuracy of a system administrator) 72 450 P
-0.31 (\325) 385.72 450 P
-0.31 (s watch\051, clock drift \050increasing) 389.05 450 P
-0.6 (imprecision of hardware clocks leading to inexact incrementing of the local time counter\051, or a fail-) 72 430 P
-0.6 (ure to observe local or international time conventions \050such as leap seconds or a change to Daylight) 72 410 P
(Savings T) 72 390 T
(ime\051. This imprecision can have unpleasant ef) 119.89 390 T
(fects on networked systems.) 340.51 390 T
0.2 (Many operating systems record the time at which each \336le was last modi\336ed. The time of) 108 366 P
-0.14 (the last backup is also recorded, and only those \336les which have changed since the last backup are) 72 346 P
-0.07 (backed up. Suppose backups are made daily) 72 326 P
-0.07 (, and after one backup the system clock is reset to one) 282.3 326 P
0.6 (day before the time recorded for the just-completed backup. At the next backup, no \336les will be) 72 306 P
(saved even if they had changed since the last backup.) 72 286 T
0.56 (A second example involving authentication shows how clock imprecision can af) 108 262 P
0.56 (fect sys-) 499.14 262 P
2.73 (tems using timestamps. The Kerberos authentication system [20] implements the Needham-) 72 242 P
1.27 (Schroeder protocol [15] with Denning and Sacco\325) 72 222 P
1.27 (s modi\336cation [2], which uses timestamps to) 318.14 222 P
-0.64 (solve the replay problem. The system timestamps each authentication message when it is generated) 72 202 P
0.26 (at the authentication server) 72 182 P
0.26 (, and also imposes a time limit on the validity of that credential. If the) 201.87 182 P
0.32 (authentication server) 72 162 P
0.32 (\325) 173.02 162 P
0.32 (s clock is out of sync with those of the systems which check authentication) 176.35 162 P
0.19 (credentials, the messages will either never be valid or they will be valid for longer than intended.) 72 142 P
0.52 (In the former case, the inability to authenticate would inhibit operation of the system, and in the) 72 122 P
-0.2 (latter case, the extended period of validity would increase the vulnerability of the system to replay) 72 102 P
(attacks \050for example\051.) 72 82 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 2 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.93 (The goal of a) 108 712 P
3 F
0.93 (time distribution pr) 178.32 712 P
0.93 (otocol) 273.03 712 P
1 F
0.93 (is to deliver continuous, accurate time synchro-) 306.93 712 P
0.24 (nized with reference standards even when leap seconds occur [13]. Such protocols establish a set) 72 692 P
0.84 (of primary time reference sources which are directly synchronized with external sources. These) 72 672 P
-0.5 (may communicate with secondary servers, which in turn may communicate with other \050secondary\051) 72 652 P
0.52 (servers designed to propagate time to hosts on a subnet; the servers propagate the time either by) 72 632 P
-0.62 (initiating transmission of time messages or by responding to requests from clients seeking the time.) 72 612 P
0.5 (A time distribution protocol is closely related to a) 108 588 P
3 F
0.5 (time synchr) 354.01 588 P
0.5 (onization pr) 409.68 588 P
0.5 (otocol) 468.05 588 P
1 F
0.5 (, the dif-) 498.03 588 P
-0.5 (ference being that the latter does not attempt to synchronize time with a reference standard. Rather) 72 568 P
-0.5 (,) 537 568 P
0.48 (it seeks to keep the clocks of several computers within some \050small\051 interval of one another; but) 72 548 P
0.31 (this time may be very dif) 72 528 P
0.31 (ferent than the physical time of day) 193.62 528 P
0.31 (. T) 364.61 528 P
0.31 (ime synchronization protocols, as) 377.83 528 P
-0.02 (opposed to time distribution protocols, are often used when reference to a national standard is un-) 72 508 P
0.57 (wieldy) 72 488 P
0.57 (, impossible, or unnecessary) 103.87 488 P
0.57 (. Note that a time distribution protocol may be used as a time) 240.36 488 P
(synchronization protocol once a mechanism to establish the reference time is in place.) 72 468 T
-0.04 (The goal of a) 108 444 P
3 F
-0.04 (network time service) 174.44 444 P
1 F
-0.04 ( is to allow a system to synchronize its clock with those) 273.62 444 P
0.36 (of known, accurate primary time servers. This means synchronizing time \050so the clocks agree on) 72 424 P
-0.17 (the time of day\051 and synchronizing frequency \050so the clocks appear to tick at the same rate\051. How-) 72 404 P
0.01 (ever) 72 384 P
0.01 (, the propagation of time messages over a network is hindered by transmission delays, unreli-) 92.16 384 P
1.36 (able connections, disparity of methods of clients obtaining the time, and heterogeneousness of) 72 364 P
-0.27 (computing resources. These factors should not af) 72 344 P
-0.27 (fect the synchronization of the clocks; a time ser-) 305.66 344 P
-0.27 (vice must provide accurate time even in the face of lar) 72 324 P
-0.27 (ge \050statistical\051 delays during propagation, as) 329.51 324 P
0.21 (well as being very redundant, so the loss of a single subnet or transmission path does not prevent) 72 304 P
-0.24 (other portions of the network from obtaining the correct time. Further) 72 284 P
-0.24 (, the protocol should be \337ex-) 403.27 284 P
0.14 (ible enough to work with a variety of client/server interfaces, such as having clients continuously) 72 264 P
1.02 (poll for the time, or obtain it by remote procedure calls, as well as in broadcast, multicast, and) 72 244 P
(point-to-point transmission modes.) 72 224 T
-0.74 (T) 108 200 P
-0.74 (ime distribution protocols may be decentralized or centralized. In a decentralized time dis-) 114.91 200 P
-0.35 (tribution protocol, time servers synchronize each other) 72 180 P
-0.35 (. A centralized service has one or more time) 331.35 180 P
-0.62 (servers which have the correct time, and other servers are driven from it [13]. Given that the correct) 72 160 P
-0.39 (time is a national standard, we shall assume a centralized model, with a set of) 72 140 P
3 F
-0.39 (primary time servers) 440.86 140 P
1 F
0.41 (which can provide the correct time in synchrony with national or internat o a st n a d  @00o  x) 7   2   
. 8 ( m l, b oi oi g W V or s n  tcm!c c okA\ 5 . Tee p"i ay sres snho i e  2 10 P3 F0&0  scAn -   0. 0   
02 ( r evr) 7   0 P
1 F - .   , w i h i@  u n sn hoBi e ohr scna y s r e s an   o f r$h  n i Dh  n  y tam#) 1 54  0 PFED A E
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 3 o  8)  7 .!1 3 .  
2 7   4   2   
 @
 
   
 0 5   a e s	n ho i ed. S n!h obiJa in o@c r   ln ) 7"  1   
   
 0 5   s	n h) 3 2.4  1   
!0&5  oi@a i n p t s  #3 . 5 7 2 P1 F- .5 (   o if h  e varC  n  l@e t ) 4 7(0 #1   
00  ae rpe e t d as o e  n  Cy
c`rn z t o   ahR s e g s   h   r a
gm n   f the n to k tIm) 7  9   
 .5 (Sev c \ 2 ) 7  7   
 . 5 (  ntii s m y bE e rs@n e   s a dagba h  i h e d s s es a   iks  n   r m!rI e vr@) 1 9 3 6 2 P- .4 ( s s*u0c$s  	n g n rl,    00 r!m!r  r sEcn a y01 s!r e  s c l(e$  ) 7  5   
 F
0 3   s#u") 3 22 5   
03   c ) 4 310 250 
  0 Q - .9 () 43 8 668 P
1 1   
 03    !n   h n0i0y i4  yc r -  18.  5   
 nIz s a	 2 6 2 T 3 F(#l et  00.87 622 T
1 F (  ote t a    ce#o d r Cev r i  oh a su c  n    "let ) 1 462 3   
 .$6 ( n odEr t a     ie d s r bt(o* 0r.tcl m e  ts  o l , ids d sg Mut t k (no a cut 0 0  
0 1   eemet  f ralIai i4y a d s cr(ta) 7  588 
-0.17 (. I  o e snse  h  wc Ar   h$ @a e   o   icrap in  o t(e s$r) 2 7 0  88 
 0 1   vIc   a @e m l co s o"  n neto
a, a@d t e c m ens t o   ehn	sls wild not be a l  to d s,) 70 46 P
0.4  t(n u sh Bedwee, @hfs  Ao4ies. HmwDv`r  &2 58 P 0 5 (  ce s@all focus on those disruptions or adt r tIojs t a`) 204(3   48  
(are intentional and for the express purpose of introducing error into the service \050called) 72 528 T
3 F
(attacks) 488.34 528 T 1 F (0 1 ) 50230  2  T
 . 3 (Hn w a   o l`w , w   h l   o sd r o l@ @tda kp  n0o vHn  Dh  Dr n@m s0iLn \ 5 o  Hi d`r`n@e   0 00  @
(00  od r n0m s0i n0 1 o` 0i@e m s a ep; w   h l  @su e t@aT @h  he@s@g s ldafe t`e sfu cd dn`o r`pp-   2 484 P - . 3 ( d `nD  n e t e   r iDe ad phd  a`) 7   6$ P
0 4" gDt the@ di l nlt b  @lDepe . W( "2 . 06  
 0 40  e m@kD  hHs aps m@t@on  oB 0ilp i@-( 07 . 6   
 . 9 ( t`; \3 rt o  (nFw n   h   per t n   y tm@  n`ep fh c  DhDs   epvHc s c@n r n, pi`h u  Dhhs(  2 4$4 P -0.09 ( e t@i`t`ol de w u d h v  to a a yHe a l o@e@a i g sxspe s whih m`g`t r n te s r0i e . SDcLn l ) 70  2  P
,0 4  (,(  3  24 P
 00$  a0 `c e s t  e w rs i  Ts a l   a`iDr tL Lbahn tHaL  c e@s t  Anifi u l hLs s  hD  o u  Lf a   2 404 P3 F - . 7 ( e -  2 . 5 404 P04  w r ) 7  08 @
   
0.42 ( t`m`  e vcD\ 2$) 9. 9 384 P 040 s s`cprHt  @hLuLd b` Ln t e  60.05 3 4 P 3 F04  n@tvok( 09$. 5 384 P 1 F
04 . Tipd   s n   y0t m i `oLp eeLy s cpr`,  3 .  8  @
,0.6  (t(e a a y`i@  f aly s r i`e w iBh d`d nFt invle a  s3uLp0i n a"oDt te n t r  *f t(e adtacj  en ) 7 6 
fo   &e4w&r"  o l$ "e r te 6au&u2.  62 344 T2 F(2. S c r t0  e ur  2 312 T
(ements for a Network T) 16.9 32 T ( m  evc ) 270 312 T
1 F
-0.62 (In addition to being able to provide a statistically reliability measure of time, security issues) 108 288 P
-0.05 (impact the level of trust that one may place in a network time service. Even if the time servers are) 72 268 P
1.22 (known to be accurate enough for a given application, an attacker desiring to interfere with the) 72 248 P
0.54 (smooth operation of that application may introduce undetected statistical anomalies deliberately) 72 228 P
0.54 (,) 537 228 P
-0.36 (may alter or for) 72 208 P
-0.36 (ge messages from the time servers, and otherwise hinder the smooth functioning of) 145.63 208 P
0.15 (the time service. In order to decide what security services a network time service requires, the at-) 72 188 P
(tacks that may impede the correct operation of that service must \336rst be considered.) 72 168 T
-0.74 (The ability of an attacker) 108 144 P
1 10 Q
-0.62 (2) 225.61 148.8 P
1 12 Q
-0.74 ( to) 230.61 144 P
3 F
-0.74 (masquerade) 244.45 144 P
1 F
-0.74 ( as another host suggests two possible attacks. The) 303.08 144 P
-0.19 (obvious one is for the attacker to impersonate a network time server and simply send out incorrect) 72 124 P
72 108 540 117 C
72 108 540 117 R
7 X
0 K
V
72 117 225 117 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
1 10 Q
0 X
0 K
(1.) 72 101.33 T
-0.14 (A secondary server will also be called a \322source\323 even though, in the digraph representation, it has incoming) 90 101.33 P
0.22 (as well as outgoing edges. The term is motivated by the provision of time to another; hence, the provider is) 90 89.33 P
(the client\325) 90 77.33 T
(s \322source\323 of information.) 129.7 77.33 T
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 4 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
0 X
-0.41 (time messages, thereby informing that server) 72 712 P
-0.41 (\325) 286.24 712 P
-0.41 (s clients \050and, recursively) 289.57 712 P
-0.41 (, all other clients relying on) 410.14 712 P
-0.18 (the server\051 of the incorrect time. The clients would then either accept the incorrect time as correct,) 72 692 P
-0.3 (or \050at the least\051 discard the server as a valid source. The second attack is more subtle, and ef) 72 672 P
-0.3 (fective) 507.36 672 P
-0.06 (only if the server expects messages from its clients. In that case, the attacker impersonates the cli-) 72 652 P
-0.63 (ent, and then sends erroneous messages to the server \050or simply fails to respond to the server) 72 632 P
-0.63 (\325) 506.32 632 P
-0.63 (s mes-) 509.65 632 P
0.98 (sages\051. In that case, the server might conclude the client is down and simply stop sending time) 72 612 P
0.38 (messages to it. The ef) 72 592 P
0.38 (fect would be the same as with the \336rst attack; all clients depending on the) 177.57 592 P
(impersonated client would be threatened.) 72 572 T
1.03 (If an attacker cannot impersonate a server) 108 548 P
1.03 (, he may be able to) 314.19 548 P
3 F
1.03 (modify) 413.98 548 P
1 F
1.03 ( the time messages) 446.63 548 P
-0.56 (coming from the server) 72 528 P
-0.56 (. This attack is harder to launch, especially if a statistical mechanism is used) 181.9 528 P
-0.15 (to \336lter time messages, as the attacker must modify) 72 508 P
3 F
-0.15 (all) 319.86 508 P
1 F
-0.15 ( messages within a certain interval, and can) 332.52 508 P
0.59 (do so only within limits constrained enough so as to prevent rejection by the client. However) 72 488 P
0.59 (, if) 526.09 488 P
0.08 (done appropriately) 72 468 P
0.08 (, this attack can be even more devastating than a masquerade attack, because it) 161.57 468 P
-0.39 (does not require elimination of the network connections of the real server and so is less likely to be) 72 448 P
(noticed.) 72 428 T
-0.07 (A third attack is much simpler than the \336rst two, requiring no modi\336cation to any network) 108 404 P
0.81 (information tables or to packets on the network. The attacker simply records the time messages) 72 384 P
-0.01 (from a server or a client, and at a later time) 72 364 P
3 F
-0.01 (r) 281.71 364 P
-0.01 (eplays) 285.94 364 P
1 F
-0.01 ( them. The threat is that as the time message is) 316.58 364 P
(genuine \050just late\051, the client might accept it as being current.) 72 344 T
-0.44 (This attack is distinct from one involving) 108 320 P
3 F
-0.44 (delay) 305.83 320 P
1 F
-0.44 (; in the latter) 331.8 320 P
-0.44 (, time messages are blocked for) 390.97 320 P
-0.5 (some period of time. The ef) 72 300 P
-0.5 (fect, being received by the client when the information in the time mes-) 202.54 300 P
-0.5 (sage is no longer current, is the same as for a replay attack; the dif) 72 280 P
-0.5 (ference is that replayed messages) 382.15 280 P
-0.15 (are seen \050at least\051 twice, whereas delayed messages are seen once. Both pose the same threat \320 the) 72 260 P
-0.41 (client may accept them as current, and either reset its clock to an incorrect time or use the incorrect) 72 240 P
-0.18 (time in an algorithm which statistically \322smooths\323 time from several sources, thereby skewing the) 72 220 P
(client\325) 72 200 T
(s notion of the correct time.) 101.98 200 T
-0 (A well-designed) 108 176 P
3 F
-0 (denial of service) 189.93 176 P
1 F
-0 ( attack could cause a client\325) 269.21 176 P
-0 (s notion of time to vary from) 401.43 176 P
0.47 (that of the network time service. In this attack, an attacker deletes time messages, thereby elimi-) 72 156 P
0.31 (nating a \050reliable\051 source for the client; if this can be done with all \050reliable\051 sources upon which) 72 136 P
(the client depends, its clock may drift unacceptably) 72 116 T
(.) 317.71 116 T
72 96 540 105 C
72 96 540 105 R
7 X
0 K
V
72 105 225 105 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
1 10 Q
0 X
0 K
(2.) 72 89.33 T
-0 (For simplicity) 90 89.33 P
-0 (, we shall refer to \322attackers\323 using the male pronouns. But some of the best attackers are, and) 145.71 89.33 P
(have been, female, so the pronoun should be read in the more general sense of \322entity) 90 77.33 T
(.\323) 431.58 77.33 T
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 5 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.24 (Closely related to denial of service and masquerade is an) 108 712 P
3 F
0.24 (illegal access) 386.23 712 P
1 F
0.24 ( attack, in which a) 451.42 712 P
0.09 (server exceeds its authorizations. Although there are network management protocols extant \050such) 72 692 P
-0.06 (as SNMP\051, it is quite reasonable to add to a network time service an ability to use special-purpose) 72 672 P
0.36 (commands to alter parameters within the client; this would be especially useful for debugging or) 72 652 P
0.58 (monitoring the correctness of the assumptions underlying the statistical algorithms used to com-) 72 632 P
-0.3 (pensate for network delays. However) 72 612 P
-0.3 (, if an attacker could gain authority to set the time on a client,) 249.15 612 P
0.34 (he could wreak havoc. Such an attack requires that the time service allow clients to have a set of) 72 592 P
(sources which is neither \336xed nor con\336gured at start time.) 72 572 T
-0.54 (There are other attacks which are much less relevant to this type of system, but about which) 108 548 P
-0.73 (a few comments are in order) 72 528 P
-0.73 (. Many of these attacks arise when a vendor \050or other entity\051 is char) 204.59 528 P
-0.73 (ging) 518.68 528 P
0.37 (for the use of the network time service, and must be separated from the accounting by which the) 72 508 P
0.6 (clients are char) 72 488 P
0.6 (ged. This is necessary because in many cases use of the network time service in-) 145.58 488 P
0.18 (volves mutual trust \320 the vendor trusts the client not to alter his software, and the client trusts the) 72 468 P
-0.25 (vendor to supply the correct time. This brings up issues of operating system security and trustwor-) 72 448 P
(thiness of software, and the scope of these issues is well beyond the purview of this paper) 72 428 T
(.) 501.36 428 T
-0.2 (An example of this would be when some way is provided to ensure that if a time server \050or) 108 404 P
0.1 (client\051 begins to drift due to erroneous messages from another source, the erroneous source could) 72 384 P
-0.74 (be tracked down and be unable to deny the error \050) 72 364 P
3 F
-0.74 (non-r) 303.09 364 P
-0.74 (epudiation of origin) 329.29 364 P
1 F
-0.74 (\051. In the context of main-) 423.78 364 P
0.25 (tenance, this would be a useful property) 72 344 P
0.25 (. In the context of security) 264.26 344 P
0.25 (, it is not useful. If a \050non-tem-) 390.66 344 P
0.34 (poral\051 nonce were used to order transmissions, the order could be certi\336ed and by comparing the) 72 324 P
0.87 (timestamps on these messages, erratic ticking may be revealed. But a good statistical algorithm) 72 304 P
-0.21 (would either smooth the irregularities or determine they could not be compensated for and discard) 72 284 P
-0.46 (time messages with \050statistically\051 erroneous timestamps; this could lead to discarding the source as) 72 264 P
-0.6 (a legitimate, trustworthy clock source. So the only use for non-repudiation would be in conjunction) 72 244 P
0.39 (with other services provided by the client host. In other words, the timestamps must be bound to) 72 224 P
-0.55 (the \050internal\051 service, which enlar) 72 204 P
-0.55 (ges the scope of the non-repudiation aspect beyond that of simple) 231.1 204 P
-0.25 (non-repudiation of a time message. So, for our discussion, we shall not consider repudiation of or-) 72 184 P
(igin to be an attack upon a network time service.) 72 164 T
3 F
-0.16 (T) 108 140 P
-0.16 (raf\336c \337ow analysis) 114.01 140 P
1 F
-0.16 ( is not speci\336cally related to a network time service, but applies to any) 204.31 140 P
-0.17 (network service. In that context, it simply provides a mechanism for identifying clients and sourc-) 72 120 P
-0.18 (es, which may be useful in deciding which hosts to attack. However) 72 100 P
-0.18 (, as this technique provides no) 395.65 100 P
(information about attack mechanisms, we shall not deal with it further) 72 80 T
(.) 408.11 80 T
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 6 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
3 F
0 X
0.81 (Routing contr) 108 712 P
0.81 (ol) 174.67 712 P
1 F
0.81 ( is normally under control of the network layer) 184 712 P
0.81 (, not the application layer) 414.51 712 P
-0.12 (where the time service resides. If an attacker can control the routing, then it could route time mes-) 72 692 P
-0.01 (sages along routes with long delays, congestion, or other problems. Like traf) 72 672 P
-0.01 (\336c \337ow analysis, this) 438.75 672 P
0.39 (simply enables attacks to be made; it provides no information about attack mechanisms. Further) 72 652 P
0.39 (,) 537 652 P
0.31 (because the use of routing control to reduce security depends so highly on network topology and) 72 632 P
-0.65 (levels of trust in both the network itself and the hosts on the network, it requires speci\336c knowledge) 72 612 P
0.69 (of the network and routing mechanisms in use. As our context is that of a generic network time) 72 592 P
(service only) 72 572 T
(, we shall therefore not discuss it further) 129.51 572 T
(.) 322.04 572 T
3 F
1.88 (Non-assurance of time message r) 108 548 P
1.88 (eceipt and denial of r) 274.95 548 P
1.88 (eceipt) 384.61 548 P
1 F
1.88 (deal with preventing the) 418.12 548 P
0.71 (source from being able to prove time messages reached their intended destination, and are most) 72 528 P
-0.51 (likely relevant only if a client is paying for the use of a network time service. As the client software) 72 508 P
-0.15 (would not be under the control of the or) 72 488 P
-0.15 (ganization providing the time service, but would reside on) 261.75 488 P
-0.69 (a machine under the control of the paying or) 72 468 P
-0.69 (ganization, the administrator of that client can do what-) 279.4 468 P
-0.22 (ever he or she wishes. In the absence of tamperproof and certi\336ably correct software, this problem) 72 448 P
(is at the heart of operating system security and hence we shall not deal with it here.) 72 428 T
-0.05 (In a similar vein, if a vendor is selling the use of a network time service, it would be in his) 108 404 P
-0.63 (best interest to keep those who have not paid for the use of that service from seeing those messages.) 72 384 P
-0.24 (But other than this speci\336c circumstance, there seems little danger to an attacker simply observing) 72 364 P
-0.03 (time messages, so we shall assume that) 72 344 P
3 F
-0.03 (passive wir) 262.97 344 P
-0.03 (etapping) 316.8 344 P
1 F
-0.03 (\050or) 361.74 344 P
3 F
-0.03 (eavesdr) 378.69 344 P
-0.03 (opping) 415.55 344 P
1 F
-0.03 (\051 poses no threat to) 448.87 344 P
(the correct functioning of a network time service.) 72 324 T
1 10 Q
(3) 309.15 328.8 T
1 12 Q
0.39 (Finally) 108 300 P
0.39 (,) 141.21 300 P
3 F
0.39 (changing or) 147.6 300 P
0.39 (der of transmission) 205.85 300 P
1 F
0.39 ( is equivalent to a delay attack, in which the mes-) 299.25 300 P
0.26 (sage moved elsewhere in the ordering was simply delayed. Like controlling routing, we shall not) 72 280 P
(consider this problem separately) 72 260 T
(.) 226.77 260 T
0.55 (Given these attacks, let us now consider the mechanisms that either limit or defeat them.) 108 236 P
-0.08 (W) 72 216 P
-0.08 (e shall of course only focus on those mechanisms relevant to the attacks we described as threats) 82.36 216 P
(to the network time service itself.) 72 196 T
-0.12 (A masquerade attack can be handled by requiring the party or parties involved to authenti-) 108 172 P
0.31 (cate themselves. This usually involves cryptography) 72 152 P
0.31 (, and raises issues of key distribution as well) 323.96 152 P
72 108 540 117 C
72 108 540 117 R
7 X
0 K
V
72 117 225 117 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
1 10 Q
0 X
0 K
(3.) 72 101.33 T
-0.22 (W) 90 101.33 P
-0.22 (e should note that use of the reference clocks that would synchronize a network time service\325) 98.64 101.33 P
-0.22 (s primary ser-) 466.94 101.33 P
-0.28 (vices do not require paying a fee. The only char) 90 89.33 P
-0.28 (ges are for the telephone call; and as the reference clocks also) 278.3 89.33 P
(broadcast time over radio stations, even that char) 90 77.33 T
(ge can be avoided.) 285.78 77.33 T
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 7 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
0 X
-0.35 (as performance, especially in the context of a time service, where any variable delay can adversely) 72 712 P
(af) 72 692 T
(fect the correct operation of the system.) 81.1 692 T
-0.45 (Message modi\336cation can be defeated by using a mechanism to ensure the integrity of time) 108 668 P
0.28 (messages. V) 72 648 P
0.28 (ery often this technique is combined with authentication; either the entire message is) 130.9 648 P
-0.16 (encrypted in such a way that decrypting a modi\336cation will produce clearly erroneous output, or a) 72 628 P
-0.05 (message integrity check is encrypted. Should the message be modi\336ed, the computed message in-) 72 608 P
(tegrity check will not match the transmitted one.) 72 588 T
-0.08 (Both replay attacks and delay attacks are dif) 108 564 P
-0.08 (\336cult to handle when the client has no reliable) 319.42 564 P
-0.12 (source. When a time message comes in, it must be assumed accurate in the absence of any contra-) 72 544 P
0.64 (dictory information. Hence, to defeat these attacks, the clients should have multiple sources and) 72 524 P
-0.31 (employ an algorithm which can compensate for delays and can eliminate obviously incorrect mes-) 72 504 P
-0.51 (sages. Note that special care must be taken with replayed messages; they cannot simply be discard-) 72 484 P
0.32 (ed, as the earlier message may have been in error and the source resynchronized. Also notice the) 72 464 P
0.69 (relationship here between security and reliability; a delay may simply mean the network is con-) 72 444 P
(gested, not that the time service is under attack.) 72 424 T
-0.17 (Denial of service attacks also require a redundancy of sources, the reasoning being that, so) 108 400 P
0.23 (long as one source is still available, the client need not rely on its own internal clock. W) 72 380 P
0.23 (ith many) 497.46 380 P
-0.49 (sources, an ef) 72 360 P
-0.49 (fective denial of service attack would require all sources being inaccessible to the cli-) 136.4 360 P
(ent; eliminating only some still allows the client to synchronize to external sources.) 72 340 T
-0.25 (Finally) 108 316 P
-0.25 (, attacks based on unintended access can be controlled by access controls. There are) 141.21 316 P
-0.47 (essentially three kinds of access controls,) 72 296 P
3 F
-0.47 (mandatory access contr) 270 296 P
-0.47 (ols) 383.2 296 P
1 F
-0.47 ( \050sometimes called) 397.19 296 P
3 F
-0.47 (rule-based) 488.7 296 P
0.46 (access contr) 72 276 P
0.46 (ols) 131.63 276 P
1 F
0.46 (\051,) 145.63 276 P
3 F
0.46 (discr) 156.07 276 P
0.46 (etionary access contr) 179.62 276 P
0.46 (ols) 282.67 276 P
1 F
0.46 ( \050sometimes called) 296.67 276 P
3 F
0.46 (identity-based access contr) 390.97 276 P
0.46 (ols) 522.01 276 P
1 F
0.46 (\051) 536.01 276 P
0.87 (and a third form in which the original owners of data retain control of the data as it propagates) 72 256 P
-0.29 (throughout a system) 72 236 P
1 10 Q
-0.24 (4) 168.7 240.8 P
1 12 Q
-0.29 ( \050we shall refer to this control as) 173.7 236 P
3 F
-0.29 (originator) 329.29 236 P
-0.29 (-based access contr) 378.36 236 P
-0.29 (ols) 471.94 236 P
1 F
-0.29 ( or) 485.93 236 P
3 F
-0.29 (original) 501.35 236 P
0.09 (access contr) 72 216 P
0.09 (ols) 131.27 216 P
1 F
0.09 (\051. Mandatory access controls are primarily used to protect classi\336ed or proprietary) 145.27 216 P
0.24 (data, and it is dif) 72 196 P
0.24 (\336cult to conceive of a situation in which the standard time of day would be con-) 153.02 196 P
-0.65 (sidered classi\336ed or proprietary) 72 176 P
-0.65 (. Similarly) 220.82 176 P
-0.65 (, original access controls are used when the original own-) 270.05 176 P
-0.58 (ers of data need to maintain tight controls on how the data is disseminated, and it is equally dif) 72 156 P
-0.58 (\336cult) 515.34 156 P
0.35 (to conceive of a situation in which one would desire, let alone be able to, retain tight controls on) 72 136 P
72 108 540 117 C
72 108 540 117 R
7 X
0 K
V
72 117 225 117 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
1 10 Q
0 X
0 K
(4.) 72 101.33 T
0.21 (This form is relatively new [6][10] and the precise functioning of the mechanism depends on which variant) 90 101.33 P
-0.53 (is used. However) 90 89.33 P
-0.53 (, all variants enable the original owners to retain some sort of control over the data as is prop-) 157.65 89.33 P
(agates throughout the system.) 90 77.33 T
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 8 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.22 (the current time of day or date. So these security mechanisms have little use in network time ser-) 72 487 P
(vices.) 72 467 T
1.59 (However) 108 443 P
1.59 (, discretionary access controls can be used to prevent unauthorized clients \050or) 151.48 443 P
0.46 (servers\051 from setting or obtaining the time. Three modes of access are required: a) 72 423 P
3 F
0.46 ( get time) 467.67 423 P
1 F
0.46 ( mode) 509.89 423 P
-0.1 (allows the client to request the server to send a time message; a) 72 403 P
3 F
-0.1 (set time) 377.41 403 P
1 F
-0.1 ( mode allows the server to) 414.28 403 P
-0.14 (synchronize with the source of a time message, for example if a secondary server drifts, a primary) 72 383 P
-0.22 (server would use this mode to reset the secondary server; and a) 72 363 P
3 F
-0.22 (command) 375.11 363 P
1 F
-0.22 ( mode allows commands) 421.74 363 P
0.07 (other than the above two to be executed, for example to perform maintenance or debugging func-) 72 343 P
(tions.) 72 323 T
0.41 (T) 108 299 P
0.41 (able 1 summarizes the possible threats to a network time service and the use of security) 114.49 299 P
-0.02 (services to defeat those attacks, or at least ameliorate their ef) 72 279 P
-0.02 (fectiveness. T) 363.05 279 P
-0.02 (o summarize, a reason-) 428.81 279 P
-0.58 (able set of security services would be authentication, integrity checking, identity-based access con-) 72 259 P
1.33 (trol, detection of duplicate time messages, replay detection and prevention, and redundancy of) 72 239 P
-0.02 (sources. As the \336rst two can defeat masquerade and modi\336cation attacks, they are absolutely nec-) 72 219 P
0.34 (essary) 72 199 P
0.34 (. The third is necessary to enable determination of valid sources if not all sources are to be) 101.19 199 P
0.26 (equally trusted; it also requires authentication so the identity upon which the access control deci-) 72 179 P
-0.15 (sion is based cannot be spoofed. Detection of duplicate time messages and replay attacks are basi-) 72 159 P
-0.05 (cally the same thing, and unfortunately cannot be prevented, but when detected, the messages can) 72 139 P
0.42 (be discarded and \050ultimately\051 the source\050s\051 involved can be ignored. However) 72 119 P
0.42 (, without suf) 449.09 119 P
0.42 (\336cient) 510.02 119 P
1.15 (redundancy of sources, this could result in isolation of a client, meaning that the client\325) 72 99 P
1.15 (s clock) 505.2 99 P
(would gradually drift from the correct time.) 72 79 T
72 72 540 720 C
72 495 540 720 C
72 495 540 720 R
7 X
0 K
V
81 531 531 711 R
V
3 12 Q
0 X
(possible attacks) 81 703 T
(a thr) 234 703 T
(eat to NTS) 256.55 703 T
(mechanisms for pr) 324 703 T
(evention) 412.83 703 T
1 F
(masquerade) 81 689 T
(yes) 262.01 689 T
(authentication) 342 689 T
(modi\336cation) 81 675 T
(yes) 262.01 675 T
(integrity checking) 342 675 T
(replay) 81 661 T
(yes) 262.01 661 T
(use of sequence numbers or nonces) 342 661 T
(denial of service) 81 647 T
(yes) 262.01 647 T
(redundency of sources) 342 647 T
(delay) 81 633 T
(yes) 262.01 633 T
(timestamping) 342 633 T
(unintended access) 81 619 T
(yes) 262.01 619 T
(access controls) 342 619 T
(non-con\336dentiality) 81 605 T
(no) 264 605 T
(non-assurance of receipt) 81 591 T
(no) 264 591 T
(traf) 81 577 T
(\336c \337ow analysis) 97.43 577 T
(no) 264 577 T
(routing control) 81 563 T
(yes) 262.01 563 T
(see delay) 342 563 T
(, denial of service) 385.51 563 T
(deniability of receipt) 81 549 T
(no) 264 549 T
(repudiation of origin) 81 535 T
(no) 264 535 T
81 504 531 522 R
7 X
V
0 X
(T) 137.37 514 T
(able 1. Attacks, NTS vulnerabilities, and Mechanisms for Prevention) 143.85 514 T
72 504 540 504 2 L
1 H
2 Z
N
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 9 of 28) 479.71 34.7 T
72 72 540 720 R
7 X
V
0 X
-0.36 (The ability of the above services to defeat or inhibit attacks depends greatly upon how they) 108 478 P
0.21 (are implemented. W) 72 458 P
0.21 (e now turn to an existing time distribution protocol and network time service) 169.05 458 P
0 (to demonstrate the manner in which the above framework can be used to analyze the security of a) 72 438 P
(time service.) 72 418 T
2 F
(3. Network T) 72 386 T
(ime Pr) 139.4 386 T
(otocol V) 173.49 386 T
(ersion 2) 214.69 386 T
1 F
0.47 (The Network T) 108 362 P
0.47 (ime Protocol \050or NTP\051 [1) 182.47 362 P
0.47 (1][12][13] is a protocol designed to provide net-) 305.18 362 P
-0.38 (work time service in a wide-area network. It designates several sites as) 72 342 P
3 F
-0.38 (primary time servers) 410.22 342 P
1 F
-0.38 (; these) 509.4 342 P
0.68 (communicate with) 72 322 P
3 F
0.68 (secondary time servers) 165.29 322 P
1 F
0.68 ( over) 277.22 322 P
3 F
0.68 (synchr) 305.88 322 P
0.68 (onization paths) 337.41 322 P
1 F
0.68 ( which are said to connect) 411.73 322 P
3 F
0.49 (peers) 72 302 P
1 F
0.49 (. The secondary time servers also communicate with other secondary time servers; in addi-) 97.98 302 P
-0.16 (tion, each such node serves clients on a subnet. The) 72 282 P
3 F
-0.16 (stratum number) 320.92 282 P
1 F
-0.16 ( is a measure of distance from) 397.05 282 P
0.41 (a primary time server) 72 262 P
0.41 (, speci\336cally the number of synchronization paths that must be traversed to) 175.68 262 P
0.16 (get from the primary time server to the secondary time server) 72 242 P
0.16 (. Because network failures must not) 367.34 242 P
-0.63 (af) 72 222 P
-0.63 (fect the availability of the time service, the synchronization paths are not \336xed, but may be recon-) 81.1 222 P
(\336gured as needed.) 72 202 T
1.69 (Primary time servers are synchronized by an external system \050such as radio or atomic) 108 178 P
0.23 (clocks\051 with up to 232-picosecond \0502) 72 158 P
4 F
0.23 (\264) 251.36 158 P
1 F
0.23 (10) 257.94 158 P
1 10 Q
0.19 (-10) 269.93 162.8 P
1 12 Q
0.23 ( seconds\051 resolution. Secondary time servers are syn-) 283.26 158 P
0.69 (chronized by primary time servers or other secondary time servers with lower stratum numbers.) 72 138 P
0.11 (The arrangement is hierarchical, with members of a set \050called) 72 118 P
3 F
0.11 (cohorts) 375.86 118 P
1 F
0.11 (\051 initially at stratum level) 411.84 118 P
3 F
0.11 (i) 536.66 118 P
1 F
-0.74 (serving some group at level) 72 98 P
3 F
-0.74 (i) 203.89 98 P
1 F
-0.74 (+1 \050see Figure 1\051. Members of the group at) 207.22 98 P
3 F
-0.74 (i) 410.54 98 P
1 F
-0.74 (+1 may synchronize them-) 413.87 98 P
-0.04 (selves with any time server in the set, but not with any server not in the set \050even if it is at a lower) 72 78 P
72 72 540 720 C
72 486 540 720 C
180.22 648 154.22 626.98 2 L
0.5 H
2 Z
0 X
0 K
N
7 X
90 450 40.5 18 202.72 666 G
0 Z
0 X
90 450 40.5 18 202.72 666 A
7 X
90 450 36 13.5 162.22 616.5 G
0 X
90 450 36 13.5 162.22 616.5 A
252.22 711 189.22 675 2 L
7 X
V
2 Z
0 X
N
352.22 649.01 380.16 625.97 2 L
7 X
V
0 X
N
225.22 648 252.22 625.97 2 L
7 X
V
0 X
N
1 12 Q
(top level stratum) 423.22 711 T
(level 2 stratum) 421.92 662.62 T
(level 3 stratum) 423.22 612.79 T
(A) 149.18 661.61 T
(B) 383.18 661.61 T
(C) 108.22 610.63 T
94.03 497.02 522 594 R
7 X
V
0 X
0.71 (Figure 1. The NTP hierarchy. The ellipses represent sets of cohorts, the solid lines syn-) 94.03 586 P
-0.2 (chronization paths, and the dotted lines paths along which time information is exchanged.) 94.03 572 P
-0.16 (A server in C can be synchronized by one in A but not by one in B. If the synchronization) 94.03 558 P
-0.34 (path from the primary servers to server 1 of B were to be disrupted, then that server would) 94.03 544 P
-0.3 (be synchronized by server 2 in B but not by server 2 in A \050as it is in a different cohort\051. As) 94.03 530 P
-0.19 (the shortest path between server 1 in B and the primary servers through its clock source is) 94.03 516 P
(of length 2, then server 1 of B would be at stratum 3.) 94.03 502 T
7 X
90 450 36 13.5 261.22 616.5 G
0 Z
0 X
90 450 36 13.5 261.22 616.5 A
7 X
90 450 36 13.5 378.22 616.5 G
0 X
90 450 36 13.5 378.22 616.5 A
261.22 711 216.22 675 2 L
7 X
V
2 Z
0 X
N
7 X
90 450 10.51 9.5 187.7 666.5 G
0 Z
0 X
90 450 10.51 9.5 187.7 666.5 A
(1) 184.18 662.54 T
7 X
90 450 10.51 10.01 214.7 667.01 G
0 X
90 450 10.51 10.01 214.7 667.01 A
(2) 211.18 662.98 T
7 X
90 450 40.5 18 337.72 666 G
0 X
90 450 40.5 18 337.72 666 A
7 X
90 450 10.51 9.5 322.7 666.5 G
0 X
90 450 10.51 9.5 322.7 666.5 A
(1) 319.18 662.54 T
7 X
90 450 10.51 10.01 349.7 667.01 G
0 X
90 450 10.51 10.01 349.7 667.01 A
(2) 346.18 662.98 T
279.22 711 317.16 676.01 2 L
7 X
V
2 Z
0 X
N
297.22 711 348.19 672.98 2 L
7 X
V
0 X
N
225.22 706.03 315.22 720 6.98 RR
7 X
V
0 Z
0 X
N
(primary servers) 230.18 710.86 T
333.22 666 342.22 666 2 L
7 X
V
2 Z
10 X
N
198.22 666 202.68 666 2 L
7 X
V
10 X
N
225.22 666 315.22 666 2 L
7 X
V
10 X
N
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 10 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.04 (stratum\051. Membership in a cohort is determined simply by the stratum number of the host and the) 72 712 P
(selection algorithm of the peer that can be synchronized by members of the cohort.) 72 692 T
-0.54 (When a message arrives at an NTP time server) 108 668 P
-0.54 (, it either causes an) 327.7 668 P
3 F
-0.54 (association) 419.6 668 P
1 F
-0.54 ( \050instantiation) 474.24 668 P
0.25 (of the protocol machine\051 to be created, or causes an existing association to act; what happens de-) 72 648 P
0.6 (pends on the mode of the association. The two basic functions are to synchronize another host\325) 72 628 P
0.6 (s) 535.33 628 P
(clock, or to be synchronized by another host\325) 72 608 T
(s clock.) 287.85 608 T
2 F
(3.1. Association Modes) 72 576 T
1 F
0.61 (Three operating modes are designed for use on high-speed local area networks, although) 108 552 P
0.02 (they may be used on wide area networks as well. The \336rst set allows non-server hosts to synchro-) 72 532 P
0.28 (nize themselves to NTP servers. An association operating in) 72 512 P
3 F
0.28 (client) 366.33 512 P
1 F
0.28 ( mode periodically sends mes-) 392.98 512 P
0.21 (sages to its peer; an association operating in) 72 492 P
3 F
0.21 (server) 287.53 492 P
1 F
0.21 ( mode, which is created when a message from) 317.5 492 P
-0.12 (another association operating in client mode arrives, replies with the server) 72 472 P
-0.12 (\325) 431.33 472 P
-0.12 (s idea of the time, and) 434.66 472 P
0.98 (then terminates; and an association operating in) 72 452 P
3 F
0.98 (br) 310.36 452 P
0.98 (oadcast) 320.58 452 P
1 F
0.98 ( mode sends periodic time messages.) 357.89 452 P
-0.1 (The client association may resynchronize the host\325) 72 432 P
-0.1 (s local clock, but no association in broadcast or) 313.92 432 P
(server mode will ever reset its host\325) 72 412 T
(s time.) 242.55 412 T
0.88 ( The primary and secondary time servers rely on two other modes to synchronize them-) 108 388 P
0.05 (selves, with higher) 72 368 P
0.05 (-level servers synchronizing lower) 162.12 368 P
0.05 (-level ones. An association in) 327.55 368 P
3 F
0.05 (symmetric ac-) 472.35 368 P
0.78 (tive) 72 348 P
1 F
0.78 ( mode periodically sends messages intended to synchronize other hosts. When the messages) 89.32 348 P
-0.31 (arrive at these peers, an association in) 72 328 P
3 F
-0.31 (symmetric passive) 254.34 328 P
1 F
-0.31 ( mode is created. If the source of the mes-) 341.63 328 P
-0.31 (sage is at a higher stratum than the current host, a reply is sent and the association terminates. Oth-) 72 308 P
1.52 (erwise, the source synchronizes the current host as indicated by the message; the current host) 72 288 P
-0.61 (responds with a time message of its own. Normally) 72 268 P
-0.61 (, the servers at the highest strata will run in sym-) 312.55 268 P
-0.22 (metric active mode, with servers at lower strata in both symmetric active and passive modes. Note) 72 248 P
-0.18 (that a host may acquire peers either through receipt of messages or through initialization data read) 72 228 P
(at con\336guration.) 72 208 T
-0.45 (In addition to synchronization messages, NTP allows several types of control messages de-) 108 184 P
0.3 (signed to handle exceptional conditions. These messages do not normally cause synchronization,) 72 164 P
0.03 (but instead communicate \050or set\051 information related to the current association, or indicate excep-) 72 144 P
0.91 (tional events. They are designed for use when no other network management facilities \050such as) 72 124 P
0.16 (SNMP [1]\051 are available, and these commands may be sent by other than NTP peers. Further) 72 104 P
0.16 (, the) 519.19 104 P
(NTP speci\336cation does not require implementations to be able to process these control messages.) 72 84 T
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 11
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 11 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
2 F
0 X
(3.2. Selection of Sour) 72 577 T
(ce Peer and Smoothing of Data) 179.39 577 T
1 F
-0.34 ( NTP uses various algorithms to \336lter \322bad\323 timestamps from \322good,\323 the discriminator in-) 108 553 P
(cluding \050among other things\051 how much the newer timestamp is at variance with previous ones.) 72 533 T
2.82 (The \336rst algorithm attempts to improve the accuracy of estimated clock of) 108 509 P
2.82 (fsets and) 494.88 509 P
-0.33 (roundtrip delays by eliminating bad data. From each NTP message the roundtrip delay) 72 489 P
3 F
-0.33 (d) 485.38 489 P
1 F
-0.33 ( and clock) 491.38 489 P
-0.73 (of) 72 469 P
-0.73 (fset) 81.78 469 P
3 F
-0.73 (c) 101.36 469 P
1 F
-0.73 ( are computed \050see Figure 2\051. The values computed from the last eight messages are retained) 106.68 469 P
0.29 (and constitute the) 72 449 P
3 F
0.29 (sample) 160.47 449 P
1 F
0.29 (. The \336rst algorithm simply chooses from among these the one with the) 194.45 449 P
0.36 (lowest delay and uses its associated of) 72 429 P
0.36 (fset as the estimated clock of) 257.82 429 P
0.36 (fset. It also computes an esti-) 398.3 429 P
(mate of the sample dispersion based on clock of) 72 409 T
(fsets in the sample) 302.29 409 T
-0.36 (The second algorithm uses this estimate to determine which peer should be allowed to syn-) 108 385 P
-0.67 (chronize the clock. It \336rst sorts all possible clock sources by stratum number and then by dispersion) 72 365 P
0.95 (from the root of the synchronization subnet \050that is, up to the primary server synchronizing the) 72 345 P
0.1 (node\051. The list is pruned using various sanity checks and other criteria described in [12]. The ele-) 72 325 P
-0.24 (ments of this list then are scanned repeatedly) 72 305 P
-0.24 (, and during each scan the clock dispersion relative to) 285.04 305 P
0.49 (each peer is computed, and that peer with the highest dispersion is eliminated. This repeats until) 72 285 P
(there is only one element in the list; that is the required source.) 72 265 T
2 F
(3.3. Receive and Packet Pr) 72 233 T
(ocedur) 207.68 233 T
(es) 242.77 233 T
1 F
-0.22 (Whenever a packet is received, either an error or a packet procedure is called. If the modes) 108 209 P
-0.19 (of the host and the peer are incompatible \050for example, both are symmetric passive\051, the error pro-) 72 189 P
(cedure is called, the packet discarded, and the association deleted \050unless it is precon\336gured\051.) 72 169 T
-0.26 (Otherwise, the packet procedure checks that the packet is reasonable and if so, resets inter-) 108 145 P
0.1 (nal variables, adjusts the local clock if necessary) 72 125 P
0.1 (, and possibly select a new peer to be used as the) 305.07 125 P
0.09 (clock source. Figure 3 summarizes the procedure; note that the association\325) 72 105 P
0.09 (s variables will be up-) 433.69 105 P
(dated even if the packet is not used to compute delay or of) 72 85 T
(fset with respect to the peer) 351.58 85 T
(.) 483.15 85 T
72 72 540 720 C
72 585 540 720 C
174.31 711 174.31 630 2 L
0.5 H
2 Z
0 X
0 K
N
426.31 711 426.31 630 2 L
N
414.78 696.31 426.31 693 414.78 689.69 414.78 693 4 Y
V
174.31 693 414.78 693 2 L
N
185.85 644.69 174.31 648 185.85 651.31 185.85 648 4 Y
V
185.85 648 426.31 648 2 L
N
1 12 Q
(Local Server) 103.68 666.79 T
(Remote Server) 436.68 666.79 T
3 F
(t) 435.31 693 T
3 10 Q
(i) 438.65 690 T
1 F
(-2) 441.42 690 T
3 12 Q
(t) 435.31 644.18 T
3 10 Q
(i) 438.65 641.18 T
1 F
(-1) 441.42 641.18 T
3 12 Q
(t) 156.31 689.18 T
3 10 Q
(i) 159.65 686.18 T
1 F
(-3) 162.43 686.18 T
3 12 Q
(t) 156.31 644.18 T
3 10 Q
(i) 159.65 641.18 T
85.46 585 526.46 621 R
7 X
V
1 12 Q
0 X
(clock offset) 85.46 613 T
3 F
(c) 144.75 613 T
3 10 Q
(i) 150.07 610 T
1 12 Q
(= \050\050) 155.85 613 T
3 F
(t) 173.6 613 T
3 10 Q
(i) 176.93 610 T
1 F
(-2) 179.71 610 T
1 12 Q
( -) 188.04 613 T
3 F
(t) 198.03 613 T
3 10 Q
(i) 201.36 610 T
1 F
(-3) 204.14 610 T
1 12 Q
(\051+\050) 212.47 613 T
3 F
(t) 227.22 613 T
3 10 Q
(i) 230.55 610 T
1 F
(-1) 233.33 610 T
1 12 Q
( -) 241.66 613 T
3 F
(t) 251.65 613 T
3 10 Q
(i) 254.98 610 T
1 12 Q
(\051) 257.76 613 T
(\051/2 and roundtrip delay) 261.75 613 T
3 F
(d) 375.01 613 T
3 10 Q
(i) 381 610 T
1 12 Q
(= \050) 386.78 613 T
3 F
(t) 400.54 613 T
3 10 Q
(i) 403.87 610 T
1 12 Q
( -) 406.65 613 T
3 F
(t) 416.64 613 T
3 10 Q
(i) 419.97 610 T
1 F
(-3) 422.75 610 T
1 12 Q
(\051+\050) 431.08 613 T
3 F
(t) 445.83 613 T
3 10 Q
(i) 449.16 610 T
1 F
(-1) 451.94 610 T
1 12 Q
( -) 460.27 613 T
3 F
(t) 470.26 613 T
3 10 Q
(i) 473.59 610 T
1 F
(-2) 476.37 610 T
1 12 Q
(\051.) 484.7 613 T
(Figure 2. Computation of clock offset and roundtrip delay.) 165.39 596 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "11" 12
%%Page: "12" 12
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 12 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
-0.53 (Once the packet procedure is \336nished, the receive procedure resumes. If the peer is in client) 108 712 P
-0.3 (mode, or the local host is in server or broadcast mode, the peer must be sent the local time, so after) 72 692 P
0.67 (the frequency of polling by the peer is updated, a reply is transmitted and the receive procedure) 72 672 P
-0.44 (ends. Otherwise, if the sanity check is not set, or the peer is in symmetric active mode and the local) 72 652 P
-0.39 (host in symmetric passive mode, the peer is marked as reachable. In any case the packet is discard-) 72 632 P
(ed and the receive procedure terminates.) 72 612 T
2 F
(3.4.  T) 72 580 T
(ransmit Pr) 103.1 580 T
(ocedur) 158.51 580 T
(e) 193.6 580 T
1 F
0.14 (Associated with each peer is a peer timer which decrements periodically) 108 556 P
0.14 (. When that timer) 455.65 556 P
-0.35 (is 0, an NTP message is generated and sent to the peer) 72 536 P
-0.35 (. The transmit timestamp is saved to validate) 327.93 536 P
-0.67 (the reply) 72 516 P
-0.67 (. Next, if the packet procedure has not obtained valid roundtrip delay and clock of) 112.86 516 P
-0.67 (fset mea-) 496.37 516 P
-0.57 (surements from the peer with in the last two time-out intervals, it updates a sample set of \050roundtrip) 72 496 P
-0.19 (delay) 72 476 P
-0.19 (, clock of) 97.2 476 P
-0.19 (fset\051 pairs with \0500,0\051 to skew the estimated dispersion, and then determines if a new) 141.57 476 P
0.23 (time source should be used. The peer timer is reset to the shorter of the peer) 72 456 P
0.23 (-host polling interval) 438.93 456 P
-0.08 (and the host-peer polling interval, but not to less than 64 or more than 1024 seconds. This ensures) 72 436 P
(the polling frequency varies only within a speci\336c interval.) 72 416 T
-0.16 (Finally) 108 392 P
-0.16 (, the host-peer polling interval is decreased if the estimated dispersion is lar) 141.21 392 P
-0.16 (ger than) 501.19 392 P
0.31 (0.5, or increased if it is smaller than 0.5, to balance the need for low dispersion with that for low) 72 372 P
(NTP-related network traf) 72 352 T
(\336c.) 193.01 352 T
2 F
(3.5. Security Mechanisms) 72 320 T
1 F
0.32 (For reasons discussed earlier) 108 296 P
0.32 (, we shall consider only those issues raised by relying on the) 246.7 296 P
0.61 (information transmitted over the network. Each NTP message \050also called) 72 276 P
3 F
0.61 (packet) 436.19 276 P
1 F
0.61 (\051 contains time) 467.49 276 P
72 72 540 720 C
72 72 540 270 C
1 12 Q
0 X
0 K
(if \050) 90 253 T
3 F
(packet sent when last received packet sent) 104.32 253 T
1 F
(\051 or) 306.83 253 T
(\050) 126 239 T
3 F
(last packet peer received sent at time other than time last packet sent) 129.99 239 T
1 F
(\051 then) 461.1 239 T
(sanitycheck :=) 157.54 225 T
(true) 230.25 225 T
(;) 248.9 225 T
3 F
(update association variables to reflect information in packet) 90 211 T
1 F
(if \050) 90 197 T
3 F
(peer clock not synchronized or not updated for 1 day) 104.32 197 T
1 F
(\051 or) 358.48 197 T
(\050) 126 183 T
3 F
(peer not authenticated correctly) 129.99 183 T
1 F
(\051 or) 284.22 183 T
(\050) 162 169 T
3 F
(peer not preconfigured and at a higher stratum) 165.99 169 T
1 F
(\051 or \050sanitycheck\051 then) 392.86 169 T
3 F
(discard message and exit) 202.54 155 T
1 F
(if \050) 90 141 T
3 F
(packet originate timestamp) 104.32 141 T
1 F
( = 0\051 or \050) 234.9 141 T
3 F
(time last message received by peer) 277.64 141 T
1 F
( = 0\051 then) 444.5 141 T
3 F
(exit) 126 127 T
1 F
(\050*) 146.32 127 T
0 F
(note) 159.31 127 T
1 F
(sanitycheck) 183.63 127 T
0 F
(is not set) 243.25 127 T
1 F
( *\051) 286.57 127 T
3 F
(compute delay, offset, corrections, update local clock) 90 113 T
1 F
(Figure 3. Summary of the packet procedure.) 195.58 95 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "12" 13
%%Page: "13" 13
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 13 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
1.15 (and association-related information. Three NTP-provided mechanisms access these for security) 72 712 P
(reasons.) 72 692 T
2 F
(3.5.1. Delay Compensation Mechanisms) 72 660 T
1 F
0.94 (The most basic mechanism is one to compensate for network delays; it is used to of) 108 636 P
0.94 (fset) 522.68 636 P
-0.06 (problems from statistical irregularities or problems in network connectivity and congestion which) 72 616 P
0.63 (might be maliciously created or natural. The precise function used is detailed in [1) 72 596 P
0.63 (1]; the aspect) 474.79 596 P
0.57 (relevant to this discussion is that the algorithm calculates both the roundtrip delay and the clock) 72 576 P
-0.6 (of) 72 556 P
-0.6 (fset relative to the peer) 81.78 556 P
-0.6 (, and from these applies a statistical procedure to determine estimates used) 188.82 556 P
-0.08 (to update the local clock. W) 72 536 P
-0.08 (e shall assume that given accurate data, the source selection and delay) 205.19 536 P
(compensation mechanisms work as intended.) 72 516 T
2 F
(3.5.2. Access Contr) 72 484 T
(ol Mechanism) 169.37 484 T
1 F
-0.23 (This feature requires that the set of all hosts be partitioned into three subsets: those that are) 108 460 P
0.59 (trusted, those that are friendly) 72 440 P
0.59 (, and all others. T) 217.15 440 P
0.59 (rusted hosts are allowed to synchronize the local) 303.03 440 P
0.52 (clock; friendly hosts are sent NTP messages and timestamps as appropriate, but may not change) 72 420 P
-0.11 (the local clock; and messages from hosts in the third subset are ignored. The set of trusted hosts is) 72 400 P
-0.74 (either precon\336gured \050at initialization\051 or con\336gured based upon a trusted ticket service such as Ker-) 72 380 P
0.14 (beros [20]. The peer) 72 360 P
0.14 (\325) 170.09 360 P
0.14 (s IP address as recorded in the NTP packet is to be used as the address upon) 173.43 360 P
-0.49 (which access control is based. The implementation of this feature is not speci\336ed, although two are) 72 340 P
0.69 (suggested \050the \336rst, treating all peers con\336gured in symmetric or client modes as trusted and all) 72 320 P
0.04 (others as friendly; the second, masking the internet address and looking up the result and the peer) 72 300 P
-0.22 (mode in a table to obtain the subset to which the peer belongs\051. This feature need not be supported) 72 280 P
(for an implementation to conform to the NTP speci\336cation.) 72 260 T
2 F
(3.5.3. Authentication Mechanism) 72 228 T
1 F
-0.29 (A third feature, allowed but not required by the speci\336cation, is integral to the packets, and) 108 204 P
0.17 (is designed to provide both origin authentication and packet integrity: a cryptographic checksum.) 72 184 P
0.51 (A major requirement for this integrity check is that the computation time be predictable, since it) 72 164 P
0.47 (must be done after timestamping, and the timestamping must re\337ect the time needed to compute) 72 144 P
0.56 (the checksum. The authentication mechanism described in [1) 72 124 P
0.56 (1] meets these requirements, and is) 368.63 124 P
0.19 (intended for use only until more general, network-wide, authentication and integrity facilities be-) 72 104 P
-0.39 (come available. It uses a cryptographically-based message integrity check; all algorithms and keys) 72 84 P
FMENDPAGE
%%EndPage: "13" 14
%%Page: "14" 14
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 14 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
-0.2 (are distributed by a mechanism other than NTP) 72 712 P
-0.2 (, and the keys and algorithms are referenced within) 296.12 712 P
(the packet by indices.) 72 692 T
0.28 (When a packet is transmitted in authenticated mode, the entire NTP packet except for the) 108 668 P
-0.29 (authenticator and additional information is checksummed using the active peer) 72 648 P
-0.29 (\325) 447.93 648 P
-0.29 (s key \050if available\051) 451.27 648 P
0.39 (or the default key 0 \050if not\051. Note that if the association is symmetric active, client, or broadcast,) 72 628 P
-0.1 (the key used is that of the local host, whereas if the association is symmetric passive or server) 72 608 P
-0.1 (, the) 519.45 608 P
(key used is that of the remote host \050or the default key\051.) 72 588 T
0.51 (When a packet is received, the authentication routine is invoked. If the message contains) 108 564 P
-0.51 (no authentication information, the authentication and integrity check fails; further) 72 544 P
-0.51 (, if the peer is not) 458.63 544 P
0.31 (precon\336gured \050at initialization\051, authentication for that peer is disabled. In either case the routine) 72 524 P
0.52 (exits. However) 72 504 P
0.52 (, if the message does contain authentication information, the index number of the) 144.65 504 P
-0.5 (peer) 72 484 P
-0.5 (\325) 93.08 484 P
-0.5 (s key is reset to that in the packet, and the checksum is recomputed and compared to the trans-) 96.42 484 P
-0.62 (mitted checksum. If the key is not the default one, and the checksums match, the authentication and) 72 464 P
(integrity check succeeds; otherwise, it fails.) 72 444 T
1.17 ( The authentication and integrity mechanism in [1) 108 420 P
1.17 (1] uses the Data Encryption Standard) 355.27 420 P
-0.14 (based DEA-1 algorithm \050that is, DES in CBC mode\051 [3] to compute the checksum. The checksum) 72 400 P
-0.15 (is 64 bits long, and the key index is 32 bits; these 96 bits are appended to the original NTP packet,) 72 380 P
0.15 (and their presence is indicated by the length of the packet. \050The choice of algorithm is not part of) 72 360 P
(the NTP speci\336cation of the authentication and integrity mechanism.\051) 72 340 T
-0.72 (W) 108 316 P
-0.72 (e should note that for control messages, if the received message is authenticated, the reply) 118.36 316 P
-0.48 (is too. If the received message\325) 72 296 P
-0.48 (s checksum is correct, the reply is authenticated using the same key;) 218.16 296 P
(if not, the reply is authenticated using the default key) 72 276 T
(.) 326.38 276 T
2 F
(4. Analysis of NTP Security Mechanisms) 72 244 T
1 F
0.2 ( V) 108 220 P
0.2 (ersion 2 of NTP provides two basic security mechanisms: an access control mechanism) 118.53 220 P
0.72 (and an authentication mechanism. Because they are intended to hinder attacks, we discuss them) 72 200 P
(before turning to the speci\336c attacks that may be launched against an NTP host.) 72 180 T
2 F
(4.1. Access Contr) 72 148 T
(ol Mechanism) 160.38 148 T
1 F
-0.1 (The access control mechanism conditions access on the internet address in the source \336eld) 108 124 P
1.14 (of the packet. If the attacker can generate or modify an NTP packet, the attacker can choose a) 72 104 P
0.38 (source address that allows synchronization of the victim. Hence the access control mechanism is) 72 84 P
FMENDPAGE
%%EndPage: "14" 15
%%Page: "15" 15
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 15 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.14 (redundant from the point of view of network security; the protection it provides is against a com-) 72 712 P
-0.48 (promised time source, which can simply be denied access \050or at least, the ability to synchronize the) 72 692 P
(host\051.) 72 672 T
-0.29 (The problem with the recommended access control mechanism is that, in the absence of an) 108 648 P
0.58 (integrity checking mechanism, it relies completely on the unauthenticated source address. As an) 72 628 P
0.7 (additional measure, access control can be conditioned on a routing basis; that is, a list of all the) 72 608 P
-0.18 (intermediate nodes the message passes through is built using the IP record route option [5] \050which) 72 588 P
-0.21 (causes intermediate nodes to insert their address into the IP datagram\051 and determine access based) 72 568 P
-0.26 (on that list. This allows an NTP packet from a trusted source to be rejected if it passed through un-) 72 548 P
(trusted hosts.) 72 528 T
0.2 (Of course, as the added routing information is not checksummed cryptographically) 108 504 P
0.2 (, it can) 507.29 504 P
-0.61 (be altered in transit without detection, just as the source address can. For this reason, such a method) 72 484 P
0.02 (should be avoided unless the route lies on a trusted network, and gateways to the network will re-) 72 464 P
0.43 (ject packets entering the network with source addresses of hosts on that network. Access control) 72 444 P
(may then be based on that information.) 72 424 T
2 F
(4.2. Authentication Mechanism) 72 392 T
1 F
0.17 (First, it should be noted that the authentication mechanism is also an integrity mechanism) 108 368 P
0.19 (because it guards against the altering of messages while in transit. The authentication provided is) 72 348 P
0.09 (simply that of only two parties \050the peer and the host\051 sharing a common key) 72 328 P
0.09 (. In particular) 441.54 328 P
0.09 (, if any) 506.18 328 P
3 F
-0.59 (n) 72 308 P
1 F
-0.59 ( hosts have the same key) 78 308 P
-0.59 (, then it will not be possible to determine which of them sent the message.) 193.17 308 P
0.42 (Secondly) 108 284 P
0.42 (, note that the authenticator is excluded from the integrity checking. This means) 151.86 284 P
0.67 (that the key index associated with the generated cryptographic checksum can be altered without) 72 264 P
0.55 (detection. In general, this will cause the checksum to be invalidated and the packet to fail to au-) 72 244 P
0.19 (thenticate correctly; however) 72 224 P
0.19 (, if a less robust cryptosystem were used to generate checksums, the) 211.79 224 P
(authentication mechanism might not prevent undetectable modi\336cation of NTP messages.) 72 204 T
0.73 (The integrity checking algorithm suggested in [1) 108 180 P
0.73 (1] is subject to various cryptanalytic at-) 345.77 180 P
0.12 (tacks which have been discussed in the literature [7] because the check is only 64 bits long; how-) 72 160 P
0.37 (ever) 72 140 P
0.37 (, as these attacks are probabilistic in nature, changing the keys periodically will defeat them.) 92.16 140 P
(However) 72 120 T
(, no key distribution mechanism is de\336ned.) 115.48 120 T
-0.38 (Although we are assuming no system is penetrated, it is worth noting that the keys are used) 108 96 P
-0.09 (on a per) 72 76 P
-0.09 (-host basis, not a per) 110.21 76 P
-0.09 (-path basis, so compromise of one host\325) 208.54 76 P
-0.09 (s key can lead to compromise) 398.22 76 P
FMENDPAGE
%%EndPage: "15" 16
%%Page: "16" 16
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 16 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
(of all the hosts it synchronizes.) 72 712 T
0.46 (W) 108 688 P
0.46 (e should note that the use of a default key is) 118.36 688 P
3 F
0.46 (not) 336.93 688 P
1 F
0.46 ( a weakness, contrary to what it would) 352.26 688 P
0.86 (seem. If the checksum is computed using the default key) 72 668 P
0.86 (, the \337ag indicating whether or not the) 350.77 668 P
-0.5 (packet is authentic is set to 0 \050meaning the packet\325) 72 648 P
-0.5 (s integrity or origin are suspect\051. Hence anything) 309 648 P
(authenticated with the default key will be treated as bogus by the other end.) 72 628 T
(In what follows we shall assume the authentication mechanism is not compromised.) 108 604 T
2 F
(5. Analysis of NTP with Respect to Attacks) 72 572 T
1 F
0.33 (This section describes the attacks that might be launched against an NTP server or client,) 108 548 P
(and how NTP handles them.) 72 528 T
2 F
(5.1. Masquerade) 72 496 T
1 F
0.12 (The goal of a masquerade attack is to persuade a timekeeper that the attacker is a peer au-) 108 472 P
-0.33 (thorized to synchronize the timekeeper) 72 452 P
-0.33 (. Note this includes NTP client processes as well as second-) 256.53 452 P
0.02 (ary servers. Such an attack involves an attacker sending packets to the victim with source address) 72 432 P
0.33 (of the time server to be imitated. As both source) 72 412 P
3 F
0.33 (and destination) 309.5 412 P
1 F
0.33 ( Internet addresses and ports are) 384.14 412 P
0.41 (matched to \336nd the correct peer) 72 392 P
0.41 (, an equivalent attack is simply to change the destination address) 225.78 392 P
(within the NTP message.) 72 372 T
-0.06 ( If the host being impersonated is known to the victim and allowed to synchronize the vic-) 108 348 P
0.27 (tim, in the absence of access control and authentication, the masquerade may be ignored \050but not) 72 328 P
1.01 (detected\051 by the sample processing and selection operations. However) 72 308 P
1.01 (, if the attacker alters the) 416.37 308 P
0.25 (timestamps to change the clock of) 72 288 P
0.25 (fsets and roundtrip delays gradually) 236.61 288 P
0.25 (, those algorithms will pro-) 408.72 288 P
(vide no protection and the victim\325) 72 268 T
(s clock will drift from that of the time source.) 234.24 268 T
0.13 (If the host being impersonated is not known to the victim, and the default is to allow non-) 108 244 P
0.47 (precon\336gured peers to become the clock source, sending messages in such a way that the victim) 72 224 P
0.83 (receives at least 8 messages uninterrupted by any other time source could compromise the time) 72 204 P
-0.31 (server; since the clock \336ltering mechanisms use the last 8 messages as the sample upon which out-) 72 184 P
-0.63 (liers are discarded, the attacker needs to ensure it controls the elements of the sample. An even sim-) 72 164 P
1.43 (pler method would be to send messages claiming a very low stratum number) 72 144 P
1.43 (, as the selection) 456.43 144 P
-0.27 (algorithm would tend to make such a host the synchronization source. For this reason, no non-pre-) 72 124 P
(con\336gured peer should be allowed to become the clock source.) 72 104 T
0.21 (Note that although the timestamps are precise to 80 nanoseconds \050and hence it is unlikely) 108 80 P
FMENDPAGE
%%EndPage: "16" 17
%%Page: "17" 17
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 17 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.65 (the attacker can predict the value of the next time stamp\051, if the attacker can see the transmitted) 72 712 P
0.27 (time of any packet sent from the host to the peer and transmit a \050bogus\051 packet to the host) 72 692 P
3 F
0.27 (befor) 509.8 692 P
0.27 (e) 534.67 692 P
1 F
0.06 (the peer does so, the masquerade will not be detected; but if the host replies, and the reply arrives) 72 672 P
-0.61 (after the true peer sends another message, the true peer) 72 652 P
-0.61 (\325) 330.08 652 P
-0.61 (s message will be rejected as bogus because) 333.42 652 P
0.04 (the) 72 632 P
3 F
0.04 (pkt.or) 89.69 632 P
0.04 (g) 117.56 632 P
1 F
0.04 ( \336eld in that packet will not match the time the host sent its last message to the peer) 123.56 632 P
0.04 (. In) 523.98 632 P
(this way) 72 612 T
(, the attacker could successfully spoof the peer) 111.53 612 T
(.) 334.69 612 T
0.52 (The use of authentication would preclude this attack. The use of access control does not;) 108 588 P
0.54 (however) 72 568 P
0.54 (, it does allow one to \322turn of) 112.81 568 P
0.54 (f\323 permission for a suspect server to synchronize the local) 256.98 568 P
-0.45 (clock. If access control is used, all non-precon\336gured peers should be considered \322friendly\323 at best) 72 548 P
(\050using the language of \2443.5.2.\051) 72 528 T
2 F
(5.2.  NTP Message Modi\336cation) 72 496 T
1 F
-0.55 (The goal of a message modi\336cation attack is to cause the recipient to incorrectly resynchro-) 108 472 P
-0.75 (nize itself, or to disable an active association, by altering a message from one timekeeper to another) 72 452 P
3 F
-0.75 (.) 537 452 P
1 F
-0.15 (By examining the packet procedure, it is clear that several variables related to the association may) 72 432 P
0.01 (be changed to re\337ect information in a packet altered in transit) 72 412 P
3 F
0.01 (befor) 370.2 412 P
0.01 (e) 395.08 412 P
1 F
0.01 ( the packet alteration is acted) 400.4 412 P
(upon. How would such alteration af) 72 392 T
(fect the integrity of the recipient\325) 243.66 392 T
(s clock?) 401.88 392 T
-0.04 (First, if any of the sanity checks discussed in \2443.3. fail, the packet is discarded, the associ-) 108 368 P
0.18 (ation deactivated \050if the message is from a peer that has not been precon\336gured\051, and the clock is) 72 348 P
0.17 (not updated. If all the sanity checks are passed, then the clock may be reset \050if the strata numbers) 72 328 P
1.02 (are correctly related and any access control mechanism indicates the peer is trusted\051. If not, no) 72 308 P
0.08 (harm is done. If the clock is reset, then the \336elds that the attacker can alter af) 72 288 P
0.08 (fecting the new time) 441.49 288 P
0.34 (are the timestamp of when the packet left the sender \050transmit timestamp\051, when the peer last re-) 72 268 P
-0.33 (ceived a packet from the local host \050receive timestamp\051, when the peer last sent a packet \050originate) 72 248 P
0 (timestamp\051 and the precision of the peer) 72 228 P
0 (\325) 265.65 228 P
0 (s clock. However) 268.99 228 P
0 (, for the sanity checks to pass, the orig-) 352.11 228 P
-0.25 (inate timestamp) 72 208 P
-0.25 (must match the time the last packet was transmitted, which is stored in the receiv-) 150.79 208 P
1.14 (ing host, so altering that \336eld will cause the packet to be dropped. Hence only the receive and) 72 188 P
-0.35 (transmit timestamps, or the precision, could successfully be altered in an attack to change the local) 72 168 P
(system\325) 72 148 T
(s time.) 108.65 148 T
0.49 (Altering the precision may result in changes to the roundtrip delay for the packet on sys-) 108 124 P
0.37 (tems involving high-speed local area networks. In these cases, a \322fudge factor\323) 72 104 P
4 F
0.37 (d) 458.11 104 P
1 F
0.37 ( =) 464.03 104 P
3 F
0.37 (O) 477.53 104 P
1 F
0.37 (\0502) 486.19 104 P
3 10 Q
0.31 (pr) 496.18 108.8 P
0.31 (ecision) 504.69 108.8 P
1 12 Q
0.37 (\051,) 533.01 104 P
0.09 (computed using a system-dependent constant and the precision, is added to the roundtrip delay to) 72 84 P
FMENDPAGE
%%EndPage: "17" 18
%%Page: "18" 18
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 18 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.83 (account for possible discrepancies between the host and peer clocks. Clearly) 72 613 P
0.83 (, by modifying this) 446.22 613 P
0.22 (\336eld appropriately the roundtrip delay can be made \050almost arbitrarily\051 lar) 72 593 P
0.22 (ge. It can also be made) 429.01 593 P
-0.45 (quite small by choosing a value so that) 72 573 P
4 F
-0.45 (d) 257.59 573 P
1 F
-0.45 ( is approximately 0; this has as an advantage that the clock) 263.52 573 P
(source selection algorithm bases its choice of peer in part upon) 72 553 T
4 F
(d) 376.78 553 T
1 F
(.) 382.7 553 T
0.43 (W) 108 529 P
0.43 (e should note that the roundtrip delay and clock of) 118.36 529 P
0.43 (fset are used to compute both an ad-) 363.48 529 P
0.73 (justment to the frequency with which messages are sent to the peer on the local host\325) 72 509 P
0.73 (s initiative) 488.96 509 P
0.49 (\050that is, not in response to a peer) 72 489 P
0.49 (\325) 231.79 489 P
0.49 (s message\051 and to determine which of the set of possible clock) 235.12 489 P
-0.05 (sources should be used as the source. Both these computations involve a statistical \050weighted\051 av-) 72 469 P
-0.34 (erage of the peer clock of) 72 449 P
-0.34 (fsets as well as estimates of the roundtrip delays and clock of) 192.28 449 P
-0.34 (fsets. Hence) 481.73 449 P
-0.49 (altering receive and transmit timestamps, or the precision can also af) 72 429 P
-0.49 (fect the choice of clock source) 396.27 429 P
(and the frequency of initiating contact with other time servers.) 72 409 T
0.55 (If the purpose of the attack is something other than incorrectly altering the victim\325) 108 385 P
0.55 (s local) 508.48 385 P
0.12 (clock, a variety of other mechanisms may be used. For example a denial of service attack may be) 72 365 P
(launched in a number of ways:) 72 345 T
(\245) 72 321 T
-0.74 (The attacker could alter the version \336eld to re\337ect an earlier version of NTP will cause) 90 321 P
-0.74 (the pack-) 496.45 321 P
-0.44 (et to be discarded unless speci\336c exception has been made. If such exceptions have been made,) 90 301 P
(the result of the attack would depend upon the actions they dictate.) 90 281 T
(\245) 72 257 T
0.69 (If the attacker alters the mode \336eld, and the association is not precon\336gured, the association) 90 257 P
-0.4 (may be disconnected if the mode \336eld and the mode of the victim so dictate \050see T) 90 237 P
-0.4 (able 2\051. Note) 478.51 237 P
-0.68 (that under no circumstances can a change of packet mode force a clock update unless the packet) 90 217 P
(would have caused one anyway) 90 197 T
(. Thus, altering the mode can only cause a denial of service.) 241.09 197 T
(\245) 72 173 T
-0.52 (Altering the reference timestamp \336eld \050which holds the time when the peer) 90 173 P
-0.52 (\325) 444.81 173 P
-0.52 (s clock was last up-) 448.14 173 P
-0.51 (dated\051 can cause the association to be discontinued. If it is over one day dif) 90 153 P
-0.51 (ferent than the pack-) 442.64 153 P
2.57 (et\325) 90 133 P
2.57 (s transmit timestamp \336eld, the packet will be discarded and \050if the association is not) 101.99 133 P
-0.31 (precon\336gured\051 it will be discontinued. In any case, the state variables associated with the asso-) 90 113 P
(ciation are updated to those of the packet.) 90 93 T
72 72 540 720 C
72 621 540 720 C
3 12 Q
0 X
0 K
(victim\325s mode) 137.53 712 T
(altered mode) 274.52 712 T
1 F
(symmetric passive) 126 698 T
(symmetric passive, server, broadcast) 252 698 T
(client) 126 684 T
(client) 252 684 T
(server) 126 670 T
(symmetric passive, server, broadcast) 252 670 T
(broadcast) 126 656 T
(symmetric passive, server, broadcast) 252 656 T
(T) 130.38 638 T
(able 2. Mode combinations deactivating non-precon\336gured associations) 136.86 638 T
72 72 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "18" 19
%%Page: "19" 19
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 19 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
(In summary) 72 712 T
(, denial of service attacks are simple to launch and are very ef) 128.85 712 T
(fective.) 424.71 712 T
-0.44 (Related to denial of service attacks are attacks which increase the network traf) 108 688 P
-0.44 (\336c; these can) 478.25 688 P
-0.55 (be used to increase delay time. The frequency of polling clock sources can be af) 72 668 P
-0.55 (fected in two ways:) 448.06 668 P
(\245) 72 644 T
-0.29 (The attacker can modify the peer poll interval \336eld of the packet, which contains the minimum) 90 644 P
-0.67 (interval between messages sent by the peer) 90 624 P
-0.67 (. The victim then resets the time to initiate a message) 291.84 624 P
0.77 (to the peer to a function of the smaller of its polling interval and the peer) 90 604 P
0.77 (\325) 450.83 604 P
0.77 (s polling interval.) 454.16 604 P
-0.53 (However) 90 584 P
-0.53 (, if the value falls outside a con\336guration-de\336ned interval, the value of the appropriate) 133.48 584 P
0.61 (bound is used. Hence one can af) 90 564 P
0.61 (fect the polling interval, but only within speci\336ed limits. So) 248.32 564 P
(one cannot arbitrarily increase the network traf) 90 544 T
(\336c using this attack.) 314.92 544 T
(\245) 72 520 T
-0.14 (Altering the synchronizing distance \336eld alters the victim\325) 90 520 P
-0.14 (s perception of the estimated round-) 367.83 520 P
0.13 (trip delay) 90 500 P
0.13 (, which af) 134.99 500 P
0.13 (fects the frequency of polling the peer) 182.66 500 P
0.13 (. Again, changing this can only alter) 365.32 500 P
(the polling frequency within speci\336c bounds.) 90 480 T
(Thus the threat of \337ooding a network with time messages is minimal.) 72 456 T
-0.51 (A more subtle attack would involve forcing the victim to use an unreliable, or attacker) 108 432 P
-0.51 (-con-) 514.69 432 P
0.35 (trolled, system as a clock source. The selection of clock source can be in\337uenced in a number of) 72 412 P
(ways:) 72 392 T
(\245) 72 368 T
-0.22 (If the attacker changes the packet\325) 90 368 P
-0.22 (s stratum \336eld from a value greater than the victim\325) 252.41 368 P
-0.22 (s stratum) 496.58 368 P
-0.43 (number to a value less than the victim\325) 90 348 P
-0.43 (s stratum number) 272.55 348 P
-0.43 (, the altered value will replace the orig-) 354.49 348 P
-0.36 (inal value in the victim\325) 90 328 P
-0.36 (s table of peer associations; this peer then becomes eligible to be added) 202.51 328 P
0.42 (to the list of clock sources. Note that access control mechanisms may prevent this if the peer) 90 308 P
(whose packets are being modi\336ed is not trusted, or the list of clock sources is precon\336gured.) 90 288 T
(\245) 72 264 T
-0.03 (Altering either the synchronizing distance or dispersion \336elds alters the victim\325) 90 264 P
-0.03 (s perception of) 468.78 264 P
0.25 (the estimated round-trip delay and dispersion of the peer to the primary source, which af) 90 244 P
0.25 (fects) 517.36 244 P
0.56 (the selection of a clock source. Similarly) 90 224 P
0.56 (, altering the packet time reference source alters the) 288.09 224 P
-0.54 (victim\325) 90 204 P
-0.54 (s perception of the source of its peer; this does not af) 123.99 204 P
-0.54 (fect the time service, but may af) 371.28 204 P
-0.54 (fect) 522.02 204 P
(operator actions.) 90 184 T
0.05 (It is not possible to prevent message modi\336cation from af) 108 160 P
0.05 (fecting the local host time as the) 384.44 160 P
0.5 (distance and dispersion \336elds of packets from legitimate clock sources can be modi\336ed. Further) 72 140 P
0.5 (,) 537 140 P
-0.52 (given that association variables are reset even if the packet is determined to be corrupt or otherwise) 72 120 P
-0.69 (unusable, the message modi\336cation attack allows all aspects of the association to be tampered with.) 72 100 P
-0.67 (Denial of service attacks are also possible, as is increasing the amount of traf) 72 80 P
-0.67 (\336c between peers. For-) 432.11 80 P
FMENDPAGE
%%EndPage: "19" 20
%%Page: "20" 20
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 20 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
1.01 (tunately) 72 712 P
1.01 (, the NTP protocol provides an authentication and integrity-checking mechanism which) 109.86 712 P
0.51 (will detect modi\336cations to messages assuming the keys associated with the message are known) 72 692 P
(only to authorized parties.) 72 672 T
2 F
(5.3. Replay) 72 640 T
1 F
0.49 (The goal of a replay attack is to intercept NTP messages from one timekeeper to another) 108 616 P
-0.55 (and retransmit them to cause the recipient to incorrectly resynchronize itself, or to disable an active) 72 596 P
(association.) 72 576 T
-0.03 (First, note that the sanity checks will detect replay attacks if the victim sends any message) 108 552 P
-0.06 (to the originator of the packet, because one of the sanity checks compares the time the victim sent) 72 532 P
-0.44 (a last message to the peer with the time the peer last received a message from the victim. Hence for) 72 512 P
0.35 (a replay to be ef) 72 492 P
0.35 (fective, either the packet being replayed must arrive at the victim before it sends) 150.44 492 P
0.06 (the peer anything, or the packet must be altered to contain this time. The latter essentially implies) 72 472 P
0.48 (a passive wiretapping to monitor packets from the victim to the peer \050given the resolution of the) 72 452 P
(timestamp and the unlikelihood of the attacker) 72 432 T
(\325) 295.63 432 T
(s predicting it exactly\051.) 298.96 432 T
-0.12 (In the former case, it is not possible to \337ood the victim in order to force all elements of the) 108 408 P
-0.33 (sample to re\337ect the replayed time, because the \336rst step of the packet procedure determines if this) 72 388 P
0.59 (packet is the same as the one received previously from the peer) 72 368 P
0.59 (. If so, it is discarded. Hence the) 381.3 368 P
0.67 (replayed data will mingle with valid \050new\051 data, and the clock \336ltering and selection algorithms) 72 348 P
-0.26 (will cause that data to be ignored if the other packets from the peer are accurate. This suggests one) 72 328 P
-0.56 (possible attack: record two packets from the peer \050being careful that nothing is sent from the victim) 72 308 P
0.29 (to the peer in that interval\051, and then rapidly replay the packets, alternating them. This will make) 72 288 P
-0.28 (four sample elements be the \336rst packet and the other four the second. However) 72 268 P
-0.28 (, as the packets are) 450.88 268 P
1.43 (received, the clock of) 72 248 P
1.43 (fsets and delays computed from the timestamps will become greater and) 179.31 248 P
-0.07 (greater) 72 228 P
-0.07 (, resulting in the peer) 104.81 228 P
-0.07 (\325) 206.56 228 P
-0.07 (s estimated dispersion and delay increasing; the clock selection algo-) 209.89 228 P
(rithm will simply drop the peer as a valid source \050if there are multiple clock sources, the peer will) 72 208 T
-0.31 (be an outlier; if the peer is the only source, it will at some point have too lar) 72 188 P
-0.31 (ge an estimated delay\051.) 430.34 188 P
-0.21 (Hence replay will either have a negligible ef) 72 168 P
-0.21 (fect, or isolate the victim, and therefore is a denial-of-) 283.12 168 P
(service attack.) 72 148 T
-0.06 ( If the delay is greater than the polling interval or no other message has been sent from the) 108 124 P
0.01 (peer to the tar) 72 104 P
0.01 (get, the sanity checks in the receive procedure will detect the replay; but as noted in) 138.1 104 P
-0.12 (the previous section, this can still cause various association parameters to be reset. In particular) 72 84 P
-0.12 (, if) 526.8 84 P
FMENDPAGE
%%EndPage: "20" 21
%%Page: "21" 21
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 21 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.22 (the synchronization paths have been recon\336gured so the peer) 72 712 P
0.22 (\325) 366.67 712 P
0.22 (s stratum number has dropped \050and) 370 712 P
-0.38 (hence the tar) 72 692 P
-0.38 (get\325) 132.29 692 P
-0.38 (s stratum number has dropped\051, the peer could become a source. Otherwise the ef-) 150.29 692 P
(fects are the same as for message modi\336cation.) 72 672 T
-0.69 (A major ef) 108 648 P
-0.69 (fect of a replay attack will be to reset the recipient\325) 158.36 648 P
-0.69 (s clock backwards; as the mes-) 395.24 648 P
0.67 (sage is valid but for an earlier time, if the replay is not caught and the victim resynchronizes its) 72 628 P
(clock to the \050replayed\051 time in the packet, the local time will be reset to an earlier time.) 72 608 T
0.89 (Decreasing the bounds of the polling interval will decrease the window of vulnerability) 108 584 P
0.89 (.) 537 584 P
0.67 (Another way) 72 564 P
0.67 (, involving some protocol redesign, is to change the \336rst sanity check in the packet) 134.18 564 P
0.69 (procedure to reject any message with a transmit timestamp older than the last one received, and) 72 544 P
0.6 (create a special resynchronize message to be sent when a clock is changed backwards. Then the) 72 524 P
(window of vulnerability exists only when a resynchronization packet is sent.) 72 504 T
-0.08 (If authentication is used, a less suitable alternative is to employ route-based access control) 108 480 P
-0.57 (as described in \2444.1. If a packet comes over an untrusted portion of the network and contains a time) 72 460 P
0.57 (that is earlier than the current time, it is rejected as a possible replay attempt. It should be noted) 72 440 P
-0.72 (that the recorded IP routing information is not cryptographically checksummed, so it is not reliable;) 72 420 P
-0.25 (but if the \336nal portion of the route is over a trusted portion of the network and gateways to the net-) 72 400 P
-0.16 (work will reject packets entering the network with source addresses of hosts on that network, then) 72 380 P
0.16 (it may be possible to determine that the packet entered that part of the network from an untrusted) 72 360 P
(part.) 72 340 T
2 F
(5.4. Delay) 72 308 T
1 F
0.28 (An alternate way for an attacker to cause a timekeeper to incorrectly resynchronize itself,) 108 284 P
0.78 (or to disable an active association, is to delay NTP messages from a clock source. As the delay) 72 264 P
-0.05 (compensation and source selection algorithms are statistical in nature, they would seem to be vul-) 72 244 P
0.65 (nerable to this attack. In fact, delaying NTP messages does increase the estimate of delay to the) 72 224 P
0.3 (peer; if more than 8 packets are so delayed \050so the estimate of the delay is more than 8 seconds\051,) 72 204 P
0.07 (the peer whose packets are being delayed cannot be a source. This may result in the tar) 72 184 P
0.07 (get having) 489.63 184 P
(no source, resulting in a denial of service attack.) 72 164 T
0.41 (The only way to prevent this is to provide several clock sources, so that if one is deemed) 108 140 P
(unreliable, another source will be used. NTP currently provides this capability) 72 120 T
(.) 446.29 120 T
FMENDPAGE
%%EndPage: "21" 22
%%Page: "22" 22
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 22 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
2 F
0 X
(5.5. Denial of Service) 72 712 T
1 F
0.67 (Y) 108 688 P
0.67 (et another way to prevent a tar) 115.46 688 P
0.67 (get from obtaining the correct time is to prevent another) 265.15 688 P
-0.73 (timekeeper) 72 668 P
-0.73 (\325) 125.73 668 P
-0.73 (s NTP messages from arriving at the tar) 129.07 668 P
-0.73 (get of the attack. This could af) 314.58 668 P
-0.73 (fect the reliability) 456.19 668 P
0.31 (of the time, especially if all sources are blocked; in that case, the site must rely on its local clock) 72 648 P
(and possibly get far out of synchronization with the rest of the Internet.) 72 628 T
-0.54 (Like so many denial of service attacks, this one can only be prevented by redundancy of the) 108 604 P
-0.37 (threatened resource. If a site has several clock sources, one or more of which is deemed unreliable,) 72 584 P
-0.4 (the clock source selection algorithm will still be able to choose a reliable source for the timekeeper) 72 564 P
(to synchronize with. NTP currently provides this capability) 72 544 T
(.) 355.7 544 T
2 F
(5.6. Combined Attacks) 72 512 T
1 F
0.5 (A combination of the above actions can also prove quite ef) 108 488 P
0.5 (fective during an attack on an) 395.27 488 P
0.28 (NTP server) 72 468 P
0.28 (, especially any other attack combined with a denial of service or a delay attack; such) 126.76 468 P
-0.21 (combinations attempt to eliminate or hinder communications between a server and members of its) 72 448 P
0.42 (cohort not under the attacker) 72 428 P
0.42 (\325) 212.02 428 P
0.42 (s control. For example, denying service to a secondary server from) 215.36 428 P
0.04 (all but one source, and delaying packets from that source, can cause the victim to drift. So can re-) 72 408 P
-0.65 (playing an alternating pair of packets to a server with but one source; the server) 72 388 P
-0.65 (\325) 445 388 P
-0.65 (s time will oscillate) 448.34 388 P
0.36 (between the two values, and the server will report incorrect times. Such attacks can be best dealt) 72 368 P
(with by dealing with each of the component attacks separately) 72 348 T
(.) 370 348 T
2 F
(6. Countermeasur) 72 316 T
(es) 164.38 316 T
1 F
-0.4 (There are two ways for security mechanisms in NTP to evolve. The \336rst is external to NTP) 108 292 P
-0.4 (,) 537 292 P
-0.18 (the second internal. External mechanisms are provided by the network protocols upon which NTP) 72 272 P
-0.11 (is built; internal protocols assume no underlying security mechanism and implement all such con-) 72 252 P
0.58 (siderations within the NTP protocol. As we shall discuss external measures later) 72 232 P
0.58 (, let us consider) 462.98 232 P
(the internal measures \336rst.) 72 212 T
0.27 (Authentication is a security service basic to the integrity of the timekeeper) 108 188 P
0.27 (, and so should) 467.23 188 P
-0.44 (always be used; moreover) 72 168 P
-0.44 (, the computation of the integrity checksum should include the key index) 195.09 168 P
-0.11 (\050otherwise the integrity of the authenticator is itself suspect\051. T) 72 148 P
-0.11 (o be most ef) 371.98 148 P
-0.11 (fective, keys should be) 430.4 148 P
0.24 (issued on a per) 72 128 P
0.24 (-path, not a per) 144.08 128 P
0.24 (-host, basis. Although the complexity of assigning a distinct key to) 217.15 128 P
0.19 (every peer path used by a server would be high, such a key assignment system adds a \336re wall in) 72 108 P
-0.03 (that if the key for one peer path is compromised, no other peer paths are af) 72 88 P
-0.03 (fected. Further) 429 88 P
-0.03 (, the dif-) 499.1 88 P
FMENDPAGE
%%EndPage: "22" 23
%%Page: "23" 23
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 23 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
-0.07 (ferent keys do not af) 72 712 P
-0.07 (fect the time needed for authentication, but merely the time needed to admin-) 170.1 712 P
-0.08 (istrate the key distribution. As key distribution is out of the scope of the NTP protocol, we merely) 72 692 P
-0.53 (note that a certi\336cate-based mechanism as used in [8] could be used to distribute keys on a per) 72 672 P
-0.53 (-peer) 515.36 672 P
-0.19 (path basis. There would be a considerable lag involved in validating the keys, but as noted in [1) 72 652 P
-0.19 (1],) 527.01 652 P
0.13 (\322the nature of NTP is quite tolerant to such disruptions [as inconsistent key information while re-) 72 632 P
(keying is in progress], so no particular provisions are needed to deal with them.\323) 72 612 T
-0.65 (Note that the protocol used to distribute keys must not rely on NTP for determining the time) 108 588 P
0.54 (during which those keys will be valid, because then if the relevant NTP server were tricked into) 72 568 P
0.02 (incorrectly setting its clock, all keys would have invalid periods attached, enabling the attacker to) 72 548 P
-0.02 (force NTP servers to use current keys \050thereby disabling periodic key changes, or the changing of) 72 528 P
0.04 (compromised keys\051. The Kerberos protocol suf) 72 508 P
0.04 (fers from this problem, as key validity \050or the life-) 298.48 508 P
-0.42 (time of the relevant ticket\051 is determined by a timestamp obtained from the Kerberos server which,) 72 488 P
0.37 (presumably) 72 468 P
0.37 (, would be set using an NTP server [20]. The certi\336cate-based mechanism mentioned) 127.18 468 P
-0.41 (above may have its interval of validity set either automatically or manually) 72 448 P
-0.41 (, and in any case will be) 426.85 448 P
-0.01 (examined by the human responsible for the NTP server when it is issued. Hence it does not suf) 72 428 P
-0.01 (fer) 526.69 428 P
(from this problem.) 72 408 T
0.67 (The IP record route option can be used as an additional source of information for access) 108 384 P
-0.46 (control; if the route shows the packet travelled through an untrusted network, one can reject it even) 72 364 P
-0.07 (if the source is trusted \050on the theory that if it really came from the source, it would not have trav-) 72 344 P
0.02 (elled that route\051. Of course this does not prevent altering the route while the datagram is in transit) 72 324 P
(or at an intermediate node, but it is another detail an attacker will have to worry about.) 72 304 T
1.12 (Note that the authenticator itself is a message integrity checksum. T) 108 280 P
1.12 (o prevent corrupted) 443.83 280 P
1.26 (packets from af) 72 260 P
1.26 (fecting the integrity of the timekeeper) 148.9 260 P
1.26 (, the peer association variables should be) 336.25 260 P
1.72 (changed only) 72 240 P
3 F
1.72 (after) 142.72 240 P
1 F
1.72 ( the packet has passed all sanity checks, especially after the authentication) 165.38 240 P
-0.58 (check. Otherwise there is a chance the packet is bogus or corrupt, and in either case the information) 72 220 P
(in it is not reliable and should not be used.) 72 200 T
0.27 (In high-speed LANS, the clock precision \336eld is used to modify the roundtrip delay) 108 176 P
0.27 (. Cur-) 511.75 176 P
0.24 (rently this value may range from -127 to 127 inclusive; but it is unlikely that any clock will have) 72 156 P
0.85 (precision as coarse as 2) 72 136 P
1 10 Q
0.71 (127) 187.97 140.8 P
1 12 Q
0.85 ( seconds \050roughly 5) 202.96 136 P
4 F
0.85 (\264) 299.78 136 P
1 F
0.85 (10) 306.37 136 P
1 10 Q
0.71 (31) 318.36 140.8 P
1 12 Q
0.85 ( years\051 or as \336ne as 2) 328.36 136 P
1 10 Q
0.71 (-127) 434.71 140.8 P
1 12 Q
0.85 ( seconds \050roughly) 453.02 136 P
-0.11 (6) 72 116 P
4 F
-0.11 (\264) 78 116 P
1 F
-0.11 (10) 84.58 116 P
1 10 Q
-0.09 (-39) 96.57 120.8 P
1 12 Q
-0.11 ( seconds\051 in the immediate future. T) 109.9 116 P
-0.11 (o prevent problems from packets in which authentica-) 281.95 116 P
-0.08 (tion \050and hence integrity checking\051 is not done, the legal values of this \336eld should be constrained) 72 96 P
(more tightly) 72 76 T
(.) 130.19 76 T
FMENDPAGE
%%EndPage: "23" 24
%%Page: "24" 24
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 24 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.4 (Currently) 108 712 P
0.4 (, eight data points are sampled to estimate the dispersion of the clock of) 153.19 712 P
0.4 (fset and) 501.96 712 P
-0.12 (the roundtrip delay) 72 692 P
-0.12 (. Because this is a statistical calculation, an attacker can corrupt the integrity of) 162.24 692 P
0.58 (such estimates by \337ooding the victim with bogus packets. If the sample size can be increased to) 72 672 P
-0.28 (require more data points, this danger can be diminished. Unfortunately) 72 652 P
-0.28 (, more than eight points can) 408.14 652 P
-0.65 (diminish the stability of the local clock and so diminish the ef) 72 632 P
-0.65 (fectiveness of the algorithm [14]. Per-) 360.75 632 P
-0.68 (haps allowing some maximum number of packets per polling interval would have the desired ef) 72 612 P
-0.68 (fect) 522.02 612 P
(without af) 72 592 T
(fecting the statistics adversely) 120.75 592 T
(.) 264.21 592 T
-0.37 (The danger of replay arises from the possibility of a system\325) 108 568 P
-0.37 (s clock being set) 392.74 568 P
3 F
-0.37 (backwar) 473.86 568 P
-0.37 (ds) 514.72 568 P
1 F
-0.37 ( by) 525.38 568 P
-0.16 (a packet from another host. One way to prevent this is to require a special packet be sent when the) 72 548 P
0.28 (clock is to be moved back, and provide a nonce to ensure the packet cannot be replayed. \050Note it) 72 528 P
-0.24 (is not suf) 72 508 P
-0.24 (\336cient to reject any packet with a timestamp no newer than the last one received, because) 115.28 508 P
0.08 (a clock may run fast and need to be set back; it must then propagate its change to those for which) 72 488 P
0.15 (it is the source.\051 An alternative is to adjust the frequency of the erroneous system clock to slow it) 72 468 P
0.25 (down until it shows the correct time; this eliminates the need to reset the clock backwards. How-) 72 448 P
0.03 (ever) 72 428 P
0.03 (, care must be taken to keep the frequency from being set too low or too high, and any clients) 92.16 428 P
(of that system must accept the incorrect time until the drift is corrected.) 72 408 T
0.73 (The threat of a denial of service attack can be ameliorated by building into each client a) 108 384 P
-0.52 (long-term bias that can be used to correct the hardware clock. So, for example, if a client is running) 72 364 P
0.34 (for several days and is then isolated, it can use the bias to correct for inaccuracies it has detected) 72 344 P
(in the hardware clock.) 72 324 T
-0.36 (Finally) 108 300 P
-0.36 (, redundancy must be ensured; in particular) 141.21 300 P
-0.36 (, no server should have as its source only) 346.05 300 P
-0.37 (one other server) 72 280 P
-0.37 (. NTP does this to a lar) 147.87 280 P
-0.37 (ge extent already) 255.72 280 P
-0.37 (, but it is imperative that the sets at the var-) 336.13 280 P
-0.14 (ious strata contain more than one element. This will limit the ef) 72 260 P
-0.14 (fectiveness of delay and denial-of-) 374.71 260 P
(service attacks.) 72 240 T
2 F
(7. Applicability of External Mechanisms) 72 208 T
1 F
-0.05 (Rather than require the time service to supply its own security mechanisms, a tempting al-) 108 184 P
-0.71 (ternative is to use security protocols provided by the underlying network, and ignore security issues) 72 164 P
(at the higher applications \050time service\051 layer) 72 144 T
(.) 288.51 144 T
-0.17 (There are two problems with such a design. The \336rst is that none of the major security-ori-) 108 120 P
0.62 (ented protocols allow broadcast, because broadcasting unfor) 72 100 P
0.62 (geable, authenticated packets would) 364.94 100 P
-0.16 (imply the use of a public-key checksumming scheme, and no such scheme runs quickly enough to) 72 80 P
FMENDPAGE
%%EndPage: "24" 25
%%Page: "25" 25
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 25 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
0.41 (be used in that context \050the best-studied, RSA, runs at 1) 72 712 P
0.41 (150 bits/second on a Sun 3/60 [9]; given) 342.87 712 P
0.01 (that the checksum should be on the order of 512 bits, this would mean that at most only 2 packets) 72 692 P
(could be processed per second\051.) 72 672 T
1 10 Q
(5) 224.87 676.8 T
1 12 Q
( The second is that few such protocols are in widespread use.) 229.87 672 T
-0.23 (The lack of broadcast is not serious between primary and secondary) 108 648 P
-0.23 (, or secondary and sec-) 430.68 648 P
0.07 (ondary) 72 628 P
0.07 (, servers, as these are not expected to use broadcast mode; however) 104.53 628 P
0.07 (, for a secondary server) 427.51 628 P
-0.4 (providing time service to other hosts on a LAN, the broadcast mode is used. One alternative would) 72 608 P
0.37 (simply be to eliminate that mode of operation, and require workstations on such a LAN to query) 72 588 P
0.69 (the secondary server directly \050the address being con\336gured at boot time\051. A second would be to) 72 568 P
(allow broadcast but require con\336rmation by the host being resynchronized.) 72 548 T
1.82 (Unfortunately) 108 524 P
1.82 (, the unavailability of such network-level and transport-level protocols is) 174.5 524 P
0.33 (more serious. The current UDP protocol [16] provides for no security beyond that available with) 72 504 P
(IP) 72 484 T
(. The IP options include two relevant here: security and strict source routing.) 81.33 484 T
1.5 (Strict source routing forces packets to be routed through speci\336c intermediate hosts. If) 108 460 P
-0.53 (those hosts and the links connecting them are trusted, then packets sent by the time service can also) 72 440 P
-0.12 (be trusted. However) 72 420 P
-0.12 (, in a wide-area environment, such assurances are rare; and the source route is) 168.2 420 P
-0.17 (speci\336ed as a set of \336elds within the IP datagram itself. Those \336elds have no associated manipula-) 72 400 P
-0.32 (tion detection code. Hence if any link is vulnerable to an active wiretapper) 72 380 P
-0.32 (, the source route can be) 425.05 380 P
(altered and the packet made to go along any route.) 72 360 T
0.31 (The IP security option [17] is designed for the protection of information falling under the) 108 336 P
0.32 (U.S. classi\336cation scheme \050) 72 316 P
3 F
0.32 (i) 205.87 316 P
1 F
0.32 (.) 209.2 316 P
3 F
0.32 (e) 212.2 316 P
1 F
0.32 (., T) 217.53 316 P
0.32 (op Secret, Secret, Con\336dential, and Unclassi\336ed\051 and is not ap-) 233.33 316 P
(propriate for use here.) 72 296 T
0.44 (So, at this point we must conclude that IP does not provide suf) 108 272 P
0.44 (\336cient underlying security) 413.2 272 P
-0.58 (to enable its use as an external security mechanism even if broadcasting is eliminated or designated) 72 252 P
(\322not trustworthy) 72 232 T
(.\323) 150.17 232 T
-0.41 (Other protocols not currently in widespread use may prove more suitable. For example, the) 108 208 P
-0.41 (SDNS Security Protocols SP/3  [18] and SP/4 [19] provide integrity and authentication; this would) 72 188 P
-0.46 (require time services to detect only replay or delaying attacks. Depending on the design of the time) 72 168 P
-0.15 (service, though, these may be fundamental to the nature of the time service protocol \050for example,) 72 148 P
-0.21 (as NTP uses a connectionless protocol, it cannot rely on the lower network layers to detect replay\051) 72 128 P
72 96 540 105 C
72 96 540 105 R
7 X
0 K
V
72 105 225 105 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
1 10 Q
0 X
0 K
(5.) 72 89.33 T
0.09 (Note that this is not a barrier to NTP) 90 89.33 P
0.09 (, since polling is done no more frequently than on the order of a minute) 235.64 89.33 P
([12].) 90 77.33 T
FMENDPAGE
%%EndPage: "25" 26
%%Page: "26" 26
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 26 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
(and so most likely cannot be prevented by the underlying protocol.) 72 712 T
2 F
(8. Conclusion) 72 680 T
1 F
-0.31 (W) 108 656 P
-0.31 (e have presented a simple model for analyzing the security of network time services, and) 118.36 656 P
0.23 (used it to study the level of security provided by the Internet time service NTP) 72 636 P
0.23 (, version 2. Unfor-) 450.36 636 P
0.56 (tunately) 72 616 P
0.56 (, other network time protocols were not designed with security in mind; hence, there are) 109.86 616 P
0.73 (very few protocols against which this model can be tested. It has highlighted the weaknesses of) 72 596 P
-0.69 (NTP very well, and the list of required \050and recommended\051 security services also suggest remedies.) 72 576 P
-0.37 (It is a credit to the designer of NTP that the most crucial threats, those of violation of integ-) 108 552 P
0.69 (rity and failure to authenticate origin of messages, can be countered by conscientious use of the) 72 532 P
-0.66 (authentication mechanism designed into NTP) 72 512 P
-0.66 (. W) 286.57 512 P
-0.66 (ith one minor modi\336cation \050authenticating the key) 302.75 512 P
0.47 (index as part of the message\051, this reduces the threats to attacks against the statistical algorithms) 72 492 P
0.39 (used to derive the correct time. As there is little if anything that can be done about these attacks,) 72 472 P
0.38 (short of providing a multiplicity of clock sources, careful analysis of the algorithms provides the) 72 452 P
(best insight into the ef) 72 432 T
(fectiveness of these attacks. Such studies have been done [13].) 178.39 432 T
-0.46 (This last comment points out the interrelationship of security and reliability) 108 408 P
-0.46 (. In some sense,) 465.1 408 P
-0.59 (this paper has been a study of the reliability of the non-statistical components of NTP) 72 388 P
-0.59 (. In fact, many) 472.16 388 P
-0.12 (of the attacks described in this paper can be \322launched\323 by unreliable network components failing) 72 368 P
-0.19 (intermittently) 72 348 P
-0.19 (. Failure can cause either a paucity of information \050if links break or sources crash\051 or) 136.52 348 P
0.2 (incorrect information \050because a noisy link corrupts the packets sent over it\051. Either of these may) 72 328 P
(be caused by an attacker as well.) 72 308 T
0.77 (An analysis similar to the preceding one can be done for time synchronization protocols) 108 284 P
-0.41 (such as TEMPO [4]. Although they a assume that no clock on the network has the correct time \050for) 72 264 P
-0.24 (example, the master clock of TEMPO simply computes the average of all non-faulty clocks on the) 72 244 P
-0.13 (network, and then updates them and itself\051, they do synchronize clocks by changing them to some) 72 224 P
-0.57 (common time. This common time serves as the \322reference standard\323 for these clocks \050although this) 72 204 P
0.67 (\322reference time\323 may bear little to no relationship to the real time, and may even be completely) 72 184 P
(inconsistent from one computation to the next\051.) 72 164 T
-0.31 (Security considerations will dictate certain aspects of the design and implementation of fu-) 108 140 P
-0.67 (ture time services. The model presented in section 2 provides a framework for analysis of such time) 72 120 P
0.44 (services, and enable designers to anticipate problems and place mechanisms in their protocols to) 72 100 P
(counter these threats.) 72 80 T
FMENDPAGE
%%EndPage: "26" 27
%%Page: "27" 27
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 27 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 F
0 X
0.33 (Acknowledgments.) 108 712 P
1 F
0.33 (The research leading to the analysis of NTP version 2 was performed) 204.29 712 P
0.35 (at the request of the author of that protocol, Dave Mills, and in conjunction with the Privacy and) 72 692 P
-0.07 (Security Research Group; as that group has not yet formally reviewed the results, the author takes) 72 672 P
-0.17 (full credit or blame for it. The framework for analysis presented in section 2 was inspired by work) 72 652 P
0.69 (currently being done by the PSRG. Thanks to David Balenson, Stephen Kent, John Linn, Ralph) 72 632 P
0.35 (Merkle, Dan Nessett, Mike Padlipsky) 72 612 P
0.35 (, Michael Roe, Ken Rossen, Rob Shirey) 253.16 612 P
0.35 (, Miles Smid, Dave) 446.01 612 P
-0.33 (Solo, and Steve W) 72 592 P
-0.33 (ilbur) 159.82 592 P
-0.33 (. Special thanks to Dave Mills for his patient explanations of NTP\325) 181.82 592 P
-0.33 (s intrica-) 498.02 592 P
-0.23 (cies, his willingness to listen to my comments, questions, and analyses, and his unfailing good hu-) 72 572 P
(mor) 72 552 T
(.) 90.66 552 T
2 F
(Refer) 72 520 T
(ences) 100.41 520 T
1 F
([1]) 72 496 T
0.95 (J. Case, M. Fedor) 108 496 P
0.95 (, M. Schof) 194.98 496 P
0.95 (fstall, and C. Davin,) 247.3 496 P
3 F
0.95 (Simple Network Management Pr) 350.71 496 P
0.95 (otocol) 510.02 496 P
(\050SNMP\051) 108 480 T
1 F
(, RFC 1) 147.3 480 T
(157 \050May 1990\051.) 184.52 480 T
([2]) 72 460 T
0.31 (D. Denning and G. Sacco, \322T) 108 460 P
0.31 (imestamps in Key Distribution Protocols,\323) 250.34 460 P
3 F
0.31 (CACM) 459.1 460 P
2 F
0.31 (24) 495.72 460 P
1 F
0.31 (\0508\051 pp.) 507.72 460 P
(533-536 \050Aug. 1981\051.) 108 444 T
([3]) 72 424 T
0.1 (Federal Information Processing Standards Publication 81,) 108 424 P
3 F
0.1 (DES Modes of Operation) 388.73 424 P
1 F
0.1 ( \050Dec.) 510.6 424 P
(1980\051.) 108 408 T
([4]) 72 388 T
0.16 (R. Gusella and S. Zatti, \322TEMPO: A Network T) 108 388 P
0.16 (ime Controller for a Distributed Berkeley) 340.35 388 P
(UNIX System,\323) 108 372 T
3 F
(Pr) 187.61 372 T
(oceedings of the Summer USENIX Confer) 199.16 372 T
(ence) 399.58 372 T
1 F
(pp. 78-85 \050June 1984\051.) 424.55 372 T
([5]) 72 352 T
(Information Sciences Institute,) 108 352 T
3 F
(Internet Pr) 258.57 352 T
(otocol) 311.08 352 T
1 F
(, RFC 791 \050Sep. 1981\051.) 341.07 352 T
([6]) 72 332 T
-0.59 (R. Graubart, \322On the Need for a Third Form of Access Control,\323) 108 332 P
3 F
-0.59 (Pr) 414.38 332 P
-0.59 (oceedings of the T) 425.93 332 P
-0.59 (ewlfth) 510.68 332 P
(National Computer Security Confer) 108 316 T
(ence) 279.13 316 T
1 F
( pp. 296-303 \050Oct. 1989\051.) 301.11 316 T
([7]) 72 296 T
-0.31 (B. Kaliski, Jr) 108 296 P
-0.31 (., R. Rivest, and A. Sherman, \322Is the Data Encryption Standard a Group? \050Re-) 170.01 296 P
(sults of Cycling Experiments on DES\051,\323) 108 280 T
3 F
( Journal of Cryptography) 300.55 280 T
2 F
(1) 426.48 280 T
1 F
(\0501\051 pp. 3-36 \0501988\051.) 432.48 280 T
([8]) 72 260 T
0.41 (S. Kent and J. Linn,) 108 260 P
3 F
0.41 (Privacy Enhancement for Internet Electr) 208.66 260 P
0.41 (onic Mail: Part II \320 Certi\336-) 405.7 260 P
(cate-Based Key Management) 108 244 T
1 F
(, RFC 1) 248.55 244 T
(1) 285.77 244 T
(14 \050Aug. 1989\051.) 291.32 244 T
([9]) 72 224 T
-0.63 (D. Laurichesse,) 108 224 P
3 F
-0.63 (Mise En \316uvr) 184.67 224 P
-0.63 (e Optimisee du Chiffr) 252.9 224 P
-0.63 (e RSA) 354.17 224 P
1 F
-0.63 (, T) 382.52 224 P
-0.63 (echnical Report LAAS-90052,) 394.37 224 P
(Laboratoire d\325Automatique et d\325Analyse des Systemes \050Mar) 108 208 T
(. 1990\051) 397.12 208 T
([10]) 72 188 T
0.7 (C. McCollum, J. Messing, and L. Notar) 108 188 P
0.7 (giacomo, \322Beyond the Pale of MAC and DAC \320) 302.21 188 P
-0.54 (De\336ning New Forms of Access Control,\323) 108 172 P
3 F
-0.54 (Pr) 306.96 172 P
-0.54 (oceedings of the 1990 Symposium on Resear) 318.51 172 P
-0.54 (ch) 528.68 172 P
(in Security and Privacy) 108 156 T
1 F
(pp. 190-200 \050May 1990\051.) 223.92 156 T
([1) 72 136 T
(1]) 81.55 136 T
-0.04 (D. Mills,) 108 136 P
3 F
-0.04 (Network T) 153.9 136 P
-0.04 (ime Pr) 203.52 136 P
-0.04 (otocol \050V) 235.34 136 P
-0.04 (ersion 2\051 Speci\336cation and Implementation) 278.28 136 P
1 F
-0.04 (, RFC 1) 485.32 136 P
-0.04 (1) 522.45 136 P
-0.04 (19) 528.01 136 P
(\050Sep. 1989\051.) 108 120 T
([12]) 72 100 T
2.05 (D. Mills,) 108 100 P
3 F
2.05 (Internet T) 158.08 100 P
2.05 (ime Synchr) 207.11 100 P
2.05 (onization: the Network T) 262.34 100 P
2.05 (ime Pr) 387.44 100 P
2.05 (otocol) 421.35 100 P
1 F
2.05 (, RFC 1) 451.34 100 P
2.05 (129 \050Oct.) 492.65 100 P
(1989\051.) 108 84 T
FMENDPAGE
%%EndPage: "27" 28
%%Page: "28" 28
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(DRAFT) 72 748 T
(DRAFT) 500.01 748 T
72 32.69 540 42.7 R
7 X
V
1 F
0 X
(Version 1.1 Dated April 7, 1992) 72 34.7 T
(Page 28 of 28) 473.71 34.7 T
72 72 540 720 R
7 X
V
0 X
([13]) 72 712 T
0.9 (D. Mills, \322On the Accuracy and Stability of Clocks Synchronized by the Network T) 108 712 P
0.9 (ime) 522.01 712 P
(Protocol in the Internet System,\323) 108 696 T
3 F
(ACM Computer Communications Review) 268.57 696 T
1 F
( \050Jan. 1990\051) 466.78 696 T
3 F
(.) 523.74 696 T
1 F
([14]) 72 676 T
(D. Mills,) 108 676 T
3 F
(personal communication) 153.98 676 T
1 F
( \050July 1990\051.) 272.91 676 T
([15]) 72 656 T
0.33 (R. Needham and M. Schroeder) 108 656 P
0.33 (, \322Using Encryption for Authentication in Lar) 257.41 656 P
0.33 (ge Networks) 478.71 656 P
(of Computers,\323) 108 640 T
3 F
(CACM) 184.95 640 T
2 F
(21) 221.27 640 T
1 F
(\05012\051 pp. 993-999 \050Dec. 1978\051.) 233.26 640 T
([16]) 72 620 T
(J. Postel,) 108 620 T
3 F
(User Datagram Pr) 153.98 620 T
(otocol) 244.15 620 T
1 F
(, RFC 768 \050Aug. 1980\051.) 274.13 620 T
([17]) 72 600 T
(M. St. Johns,) 108 600 T
3 F
(Draft Revised IP Security Option) 173.98 600 T
1 F
(, RFC 1038 \050Jan. 1988\051.) 333.2 600 T
([18]) 72 580 T
1.03 (SDNS Protocol and Signaling W) 108 580 P
1.03 (orking Group,) 269.07 580 P
3 F
1.03 (Security Pr) 342.08 580 P
1.03 (otocol 3 \050SP3\051) 396.96 580 P
1 F
1.03 (, Revision 1.5,) 468.31 580 P
(SDN.301 \050May 1989\051.) 108 564 T
([19]) 72 544 T
1.03 (SDNS Protocol and Signaling W) 108 544 P
1.03 (orking Group,) 269.07 544 P
3 F
1.03 (Security Pr) 342.08 544 P
1.03 (otocol 4 \050SP) 396.96 544 P
1 F
1.03 (4\051, Revision 1.3,) 458.32 544 P
(SDN.401 \050May 1989\051.) 108 528 T
([20]) 72 508 T
-0.49 (J. Steiner) 108 508 P
-0.49 (, C. Neuman, and J. Schiller) 151.67 508 P
-0.49 (, \322Kerberos: An Authentication Service for Open Net-) 283.65 508 P
(work Systems,\323) 108 492 T
3 F
(USENIX Pr) 186.95 492 T
(oceedings) 242.81 492 T
1 F
(, pp. 191-202 \050W) 290.77 492 T
(inter 1988\051.) 372.56 492 T
FMENDPAGE
%%EndPage: "28" 29
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 28 1
%%DocumentFonts: Times-BoldItalic
%%+ Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Symbol
