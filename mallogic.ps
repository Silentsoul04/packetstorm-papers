%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 2.0, for use with FrameMaker 2.0
% Copyright (c) 1986,87,89 by Frame Technology, Inc.  All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (2.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
%%EndProlog
%%BeginSetup
(2.0) FMVERSION
1 1 612 792 0 1 9 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
%%EndSetup
0 12 /Times-Roman FMDEFINEFONT
1 18 /Times-Bold FMDEFINEFONT
2 12 /Times-Italic FMDEFINEFONT
3 12 /Times-Bold FMDEFINEFONT
4 10 /Times-Roman FMDEFINEFONT
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 1 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
1 F
0 X
(An Overview of Computer V) 118.88 708 T
(iruses in a Resear) 340.05 708 T
(ch ) 475.13 708 T
(Envir) 255.19 684 T
(onment) 298.85 684 T
2 F
(Matt Bishop) 276.51 652 T
0 F
(Department of Mathematics and Computer Science) 182.92 632 T
(Dartmouth College) 259.86 618 T
(Hanover) 257.45 604 T
(, NH 03755) 298.26 604 T
2 F
(ABSTRACT) 277.68 578 T
0 F
0.68 (The threat of attack by computer viruses is in reality a very small part of a much) 108 558 P
1.86 (more general threat, speci\336cally attacks aimed at subverting computer security) 108 544 P
1.86 (.) 501 544 P
0.41 (This paper examines computer viruses as malicious logic in a research and devel-) 108 530 P
0.31 (opment environment, relates them to various models of security and integrity) 108 516 P
0.31 (, and) 480.38 516 P
-0.67 (examines current research techniques aimed at controlling the threats viruses in par-) 108 502 P
-0.68 (ticular) 108 488 P
-0.68 (, and malicious logic in general, pose to computer systems. Finally) 138.16 488 P
-0.68 (, a brief ex-) 450.75 488 P
-0.71 (amination of the vulnerabilities of research and development systems that malicious) 108 474 P
(logic and computer viruses may exploit is undertaken.) 108 460 T
3 F
(1. Intr) 72 434 T
(oduction) 104.43 434 T
0 F
-0.45 (A ) 108 410 P
2 F
-0.45 (computer virus) 119.21 410 P
0 F
-0.45 ( is a sequence of instructions that copies itself into other programs in such) 191.05 410 P
-0.62 (a way that executing the program also executes that sequence of instructions. Rarely has something) 72 390 P
-0.38 (seemingly so esoteric captured the imagination of so many people; magazines from ) 72 370 P
2 F
-0.38 (Business W) 470.54 370 P
-0.38 (eek) 524.02 370 P
0 F
0.26 (to the ) 72 350 P
2 F
0.26 (New England Journal of Medicine) 102.51 350 P
0 F
0.26 ( [39][48][60][72][135], books [20][22][31][40][50][67]-) 268.79 350 P
1.69 ([83][90][108][124], and newspaper articles [85][91][92][94][1) 72 330 P
1.69 (14][128] have discussed viruses,) 378.38 330 P
(applying the name to various types of malicious programs.) 72 310 T
-0.36 (As a result, the term \322computer virus\323 is often misunderstood. W) 108 286 P
-0.36 (orse, many who do under-) 415.88 286 P
-0.49 (stand it do not understand protection in computer systems, for example believing that conventional) 72 266 P
-0.61 (security mechanisms can prevent virus infections, or are \337awed because they cannot. But computer) 72 246 P
-0.22 (viruses use a number of well-known techniques in an unusual order; they do not employ previous-) 72 226 P
-0.55 (ly-unknown methods. So, although existing computer security mechanisms were not designed spe-) 72 206 P
1.92 (ci\336cally to counter computer viruses, many of those mechanisms were designed to deal with) 72 186 P
0.33 (techniques used by computer viruses. While security mechanisms cannot prevent computer virus) 72 166 P
0.45 (infections any more than they can prevent all attacks, they can impede a virus\325 spread as well as) 72 146 P
0.54 (make the introduction of a computer virus dif) 72 126 P
0.54 (\336cult, just as they can limit the damage done in an) 293.75 126 P
72 72 540 720 C
72 72 540 108 C
72 72 540 108 R
7 X
0 K
V
72 72 540 99 R
V
4 F
0 X
-0.17 (This work was supported by grants NAG2-328 and NAG2-628 from the National Aeronautics and Space Administra-) 72 92.33 P
(tion to Dartmouth College.) 72 80.33 T
72 72 540 720 C
0 0 612 792 C
72 108 225 108 2 L
7 X
0 K
V
0.5 H
2 Z
0 X
N
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 2 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
0.79 (attack, or make a successful attack very dif) 72 712 P
0.79 (\336cult. This paper tries to show the precise impact of) 283.77 712 P
1.03 (many conventional security mechanisms on computer viruses by analyzing viruses in a general) 72 692 P
(framework.) 72 672 T
-0.36 (Because the probability of encountering a computer virus and the controls available to deal) 108 648 P
0.71 (with it vary widely among dif) 72 628 P
0.71 (ferent environments, this paper con\336nes itself to that environment) 218.23 628 P
0.45 (consisting of computers running operating systems designed for research and development, such) 72 608 P
-0.27 (as the UNIX) 72 588 P
4 F
-0.23 (1) 132.07 592.8 P
0 F
-0.27 ( operating system, the V) 137.06 588 P
-0.27 (AX/VMS) 251.34 588 P
4 F
-0.23 (2) 297.99 592.8 P
0 F
-0.27 ( operating system, and so forth. There is already a) 302.98 588 P
0.8 (wealth of literature on computer viruses within the personal computing world \050for example, see) 72 568 P
0.23 ([34][62][65][124]\051, and a simple risk analysis \050upon which we shall later elaborate\051 suggests that) 72 548 P
0.42 (systems designed for accounting, inventory control, and other primarily business oriented opera-) 72 528 P
-0.75 (tions are less likely to be attacked by using computer viruses than by other methods. So, while some) 72 508 P
0.35 (of the following discussion may be fruitfully applied to computer systems in those environments) 72 488 P
0.36 (\050for example, see [1]\051, many of the underlying assumptions of system management and adminis-) 72 468 P
(tration simply do not apply to those environments.) 72 448 T
0.52 (First, we shall review what a computer virus is, and analyze the properties that make it a) 108 424 P
-0.26 (threat to computer security) 72 404 P
-0.26 (. Next, we present a very brief history of computer viruses and consider) 199.35 404 P
-0.15 (whether their threat is relevant to research and development systems, and if so, how) 72 384 P
-0.15 (. After explor-) 471.35 384 P
-0.29 (ing some of the research in secure systems that show promise for coping with viruses, we examine) 72 364 P
-0.56 (several speci\336c areas of vulnerability in research-oriented systems. W) 72 344 P
-0.56 (e conclude with a quick sum-) 401.92 344 P
(mary) 72 324 T
(.) 95.87 324 T
3 F
(2. What is a Computer V) 72 292 T
(irus?) 199.48 292 T
0 F
-0.05 (Computer viruses do not appear spontaneously [25]; an ) 108 268 P
2 F
-0.05 (attacker) 376.05 268 P
0 F
-0.05 ( must introduce one to the) 415.35 268 P
-0.15 (tar) 72 248 P
-0.15 (geted computer system, usually by persuading, or tricking, someone with legitimate access into) 84.44 248 P
0.38 (placing the virus on the system. This can readily be done using a ) 72 228 P
2 F
0.38 (T) 390.02 228 P
0.38 (r) 396.03 228 P
0.38 (ojan horse) 400.26 228 P
0 F
0.38 (, a program which) 451.61 228 P
1.04 (performs a stated function while performing another) 72 208 P
1.04 (, unstated and usually undesirable one \050see) 328.91 208 P
-0.1 (sidebar 1\051.) 72 188 P
4 F
-0.08 (3) 122.53 192.8 P
0 F
-0.1 ( For example, suppose a \336le used to boot a microcomputer contains a T) 127.52 188 P
-0.1 (rojan horse de-) 468.26 188 P
1.16 (signed to erase a disk. When the microcomputer boots, it will execute the T) 72 168 P
1.16 (rojan horse, which) 448.75 168 P
0.73 (would erase the disk. Here, the overt function is to provide a basic operating system; the covert) 72 148 P
(function is to erase the disk.) 72 128 T
72 108 540 117 C
72 108 540 117 R
7 X
0 K
V
72 117 225 117 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 F
0 X
0 K
(1. ) 72 101.33 T
(UNIX is a registered rrademark of A) 90 101.33 T
(T&T Bell Laboratories.) 235.98 101.33 T
(2. ) 72 89.33 T
(V) 90 89.33 T
(AX and VMS are registered trademarks of Digital Equipment Corporation.) 95.93 89.33 T
(3. ) 72 77.33 T
(D. Edwards \336rst referred to this type of program as a \322T) 90 77.33 T
(rojan horse\323 in [4]) 313.92 77.33 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 3 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
0.59 (Many studies have shown the ef) 108 712 P
0.59 (fectiveness of the T) 264.95 712 P
0.59 (rojan horse attack \050see [99][101], for) 360.55 712 P
0.78 (example\051, and one such study [74] described a T) 72 692 P
0.78 (rojan horse that reproduces itself \050a ) 310.61 692 P
2 F
0.78 (r) 487.8 692 P
0.78 (eplicating) 492.03 692 P
0.32 (T) 72 672 P
0.32 (r) 78.01 672 P
0.32 (ojan horse) 82.23 672 P
0 F
0.32 (\051. If such a program ) 133.52 672 P
2 F
0.32 (infects) 233.03 672 P
0 F
0.32 ( another by inserting a copy of itself into the other \336le or) 264.35 672 P
-0.15 (process, it is a ) 72 652 P
2 F
-0.15 (computer virus) 142.37 652 P
0 F
-0.15 (. \050See sidebar 2; Leonard Adelman \336rst called programs with the in-) 214.51 652 P
(fection property \322viruses\323 in a computer security seminar in 1983 [25].\051 ) 72 632 T
0.12 (A computer virus infects other entities during its ) 108 608 P
2 F
0.12 (infection phase) 344.85 608 P
0 F
0.12 (, and then performs some) 417.92 608 P
-0.48 (additional \050possibly null\051 actions during its ) 72 588 P
2 F
-0.48 (execution phase) 278.36 588 P
0 F
-0.48 (. Many view the infection phase as part) 354.82 588 P
0.54 (of the \322covert\323 action of a T) 72 568 P
0.54 (rojan horse, and consequently consider the virus to be a form of the) 210.05 568 P
-0.44 (T) 72 548 P
-0.44 (rojan horse [44][69]. Others treat the infection phase as \322overt\323 and distinguish between the virus) 78.91 548 P
-0.17 (and the T) 72 528 P
-0.17 (rojan horse, since a virus may infect and perform no covert action [25][97]. But all agree) 116.54 528 P
(that a virus may perform covert actions during the execution phase. ) 72 508 T
-0.73 (Like T) 108 484 P
-0.73 (rojan horses [39], computer viruses are instances of ) 139.16 484 P
2 F
-0.73 (malicious logic) 383.45 484 P
0 F
-0.73 ( or ) 456.35 484 P
2 F
-0.73 (malicious pr) 470.88 484 P
-0.73 (o-) 530.01 484 P
0.64 (grams) 72 464 P
0 F
0.64 (. Other programs which may be malicious but are not computer viruses are ) 101.98 464 P
2 F
0.64 (worms) 472.06 464 P
0 F
0.64 (, which) 504.05 464 P
-0.53 (copy themselves from computer to computer) 72 444 P
4 F
-0.44 (4) 284.21 448.8 P
0 F
-0.53 (; ) 289.21 444 P
2 F
-0.53 (bacteria) 295.02 444 P
0 F
-0.53 (, which replicate until all available resourc-) 334.99 444 P
0.71 (es of the host computer are absorbed; and ) 72 424 P
2 F
0.71 (logic bombs) 280.2 424 P
0 F
0.71 (, which are run when speci\336c conditions,) 339.21 424 P
(such as the date being Friday the 13th, hold.) 72 404 T
1.45 (Malicious logic uses the user) 108 380 P
1.45 (\325) 253.48 380 P
1.45 (s rights to perform their functions; a computer virus will) 256.81 380 P
-0.41 (spread only as the user) 72 360 P
-0.41 (\325) 180.05 360 P
-0.41 (s rights will allow it, and can only take those actions that the user may take,) 183.39 360 P
-0.61 (since operating systems cannot distinguish between intentional and unintended actions. As the pro-) 72 340 P
0.49 (grams containing viruses are shared among users, the viruses spread among those users [25][97]) 72 320 P
(until all programs writable by any infected program are themselves infected [56].) 72 300 T
3 F
(3. Malicious Logic, Computer V) 72 268 T
(iruses, and Computer Security) 235.46 268 T
0 F
-0.67 (A site\325) 108 244 P
-0.67 (s ) 138.98 244 P
2 F
-0.67 (security policy) 145.98 244 P
0 F
-0.67 ( describes how users may access the computer system or information) 215.59 244 P
0.03 (on it, and the policy\325) 72 224 P
0.03 (s nature depends lar) 171.06 224 P
0.03 (gely on how the system is to be used. ) 266.52 224 P
2 F
0.03 (Military system se-) 448.67 224 P
-0.47 (curity policies) 72 204 P
0 F
-0.47 ( deal primarily with disclosure of information, whereas ) 139.82 204 P
2 F
-0.47 (commer) 403.49 204 P
-0.47 (cial security policies) 441.68 204 P
0 F
(deal primarily with the integrity of data on a system.) 72 184 T
1.54 (Security ) 108 160 P
2 F
1.54 (mechanisms) 152.51 160 P
0 F
1.54 ( that enforce policies partition the system into ) 211.13 160 P
2 F
1.54 (pr) 445.96 160 P
1.54 (otection domains) 456.18 160 P
0 F
-0.16 (which de\336ne the set of objects that processes may access. ) 72 140 P
2 F
-0.16 (Mandatory access contr) 349.21 140 P
-0.16 (ols) 464.37 140 P
0 F
-0.16 ( prevent pro-) 478.37 140 P
0.35 (cesses from crossing protection domain boundaries. ) 72 120 P
2 F
0.35 (Discr) 325.62 120 P
0.35 (etionary access contr) 351.82 120 P
0.35 (ols) 454.68 120 P
0 F
0.35 ( condition per-) 468.67 120 P
-0.62 (mission to cross domain boundaries upon both the process identity and information associated with) 72 100 P
72 84 540 93 C
72 84 540 93 R
7 X
0 K
V
72 93 225 93 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 F
0 X
0 K
(4. ) 72 77.33 T
-0.19 (Originally) 90 77.33 P
-0.19 (, a worm was simply a distributed computation [1) 130.44 77.33 P
-0.19 (15]; it is now most often used in the above sense.) 327.06 77.33 P
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 4 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
(the object to be accessed.) 72 712 T
0.15 ( Policies using mandatory access controls to prevent disclosure de\336ne a linear ordering of) 108 688 P
(security levels, and a set of classes into which information is placed. Each entity\325) 72 668 T
(s security classi-) 460.72 668 T
0.25 (\336cation is de\336ned by the pair \050) 72 648 P
2 F
0.25 (security level) 220.06 648 P
0 F
0.25 (, ) 283.92 648 P
2 F
0.25 (set of classes) 290.17 648 P
0 F
0.25 (\051; the security classi\336cation of entity ) 353.3 648 P
2 F
0.25 (A) 532.67 648 P
-0.16 (dominates ) 72 628 P
0 F
-0.16 (that of entity ) 124.14 628 P
2 F
-0.16 (B) 187.96 628 P
0 F
-0.16 ( if ) 195.29 628 P
2 F
-0.16 (A) 208.29 628 P
0 F
-0.16 (\325) 214.29 628 P
-0.16 (s security level is at least that of ) 217.62 628 P
2 F
-0.16 (B) 372.9 628 P
0 F
-0.16 ( and ) 380.23 628 P
2 F
-0.16 (A) 403.22 628 P
0 F
-0.16 (\325) 409.22 628 P
-0.16 (s set of classes contains all) 412.55 628 P
-0.47 (elements of ) 72 608 P
2 F
-0.47 (B) 129.69 608 P
0 F
-0.47 (\325) 137.02 608 P
-0.47 (s set of classes. Then the controls usually enforce some variant of the ) 140.35 608 P
2 F
-0.47 (Bell-LaPadula) 469.37 608 P
0.13 (model) 72 588 P
0 F
0.13 ( [9]: a subject may read an object only if the subject\325) 101.31 588 P
0.13 (s security classi\336cation dominates that) 354.92 588 P
-0.17 (of the object \050the ) 72 568 P
2 F
-0.17 (simple security pr) 155.92 568 P
-0.17 (operty) 241.08 568 P
0 F
-0.17 (\051 and a subject may modify an object only if the object\325) 271.72 568 P
-0.17 (s) 535.34 568 P
0.46 (security classi\336cation dominates that of the subject \050the ) 72 548 P
2 F
0.46 (*-pr) 344.85 548 P
0.46 (operty) 365.06 548 P
0 F
0.46 ( or the ) 395.7 548 P
2 F
0.46 (con\336nement pr) 430.73 548 P
0.46 (operty) 502.36 548 P
0 F
0.46 (\051.) 533.01 548 P
-0.72 (Hence subjects may obtain information only from entities with \322lower\323 security classi\336cations, and) 72 528 P
1 (may disclose information only to entities with a \322higher\323 security classi\336cation. These controls) 72 508 P
0.41 (limit malicious logic designed to disclose information to the relevant protection domain; they do) 72 488 P
(not limit malicious logic designed to corrupt information in \322higher\323 security classi\336cations.) 72 468 T
-0.36 ( Policies using discretionary access controls to limit disclosure assume that all processes of) 108 444 P
0.39 (a given identity act with the authorization of that identity) 72 424 P
0.39 (. When a program containing malicious) 348.2 424 P
-0.19 (logic is executed, the malicious logic executes with the same identity as that user) 72 404 P
-0.19 (\325) 458.42 404 P
-0.19 (s legitimate pro-) 461.76 404 P
0.69 (cesses. The protection mechanism has no way to distinguish between acts done for the user and) 72 384 P
(acts done for the attacker by the malicious logic.) 72 364 T
0.11 (Policies using mandatory access controls to limit modi\336cation of entities often implement) 108 340 P
-0.22 (the mathematical dual of the multilevel security model described above. Multilevel integrity mod-) 72 320 P
0.78 (els de\336ne integrity levels and classes analogous to those of the multilevel security models; then) 72 300 P
0.32 (controls may enforce the ) 72 280 P
2 F
0.32 (Biba integrity model) 195.18 280 P
0 F
0.32 ( [1) 294.42 280 P
0.32 (1], which allows a subject to read an entity only) 307.29 280 P
0.31 (if the entity\325) 72 260 P
0.31 (s integrity classi\336cation dominates that of the subject \050the ) 131.26 260 P
2 F
0.31 (simple integrity pr) 413.56 260 P
0.31 (operty) 502.36 260 P
0 F
0.31 (\051,) 533.01 260 P
0.02 (and a subject to modify an entity only if the subject\325) 72 240 P
0.02 (s integrity classi\336cation dominates that of the) 322.02 240 P
0.57 (entity \050the ) 72 220 P
2 F
0.57 (integrity con\336nement pr) 125.11 220 P
0.57 (operty) 241.07 220 P
0 F
0.57 (\051. This prevents a subject from modifying data or other) 271.71 220 P
-0.55 (programs at a higher integrity level, and a subject from relying on data or other programs at a lower) 72 200 P
-0.41 (integrity level. Hence, malicious logic can only damage those entities with lower or equal integrity) 72 180 P
(classi\336cations.) 72 160 T
0.42 (Lipner has proposed using the multilevel disclosure model to enforce multilevel integrity) 108 136 P
-0.66 (by assigning classi\336cations and levels to appropriate user communities [87]; however) 72 116 P
-0.66 (, he notes that) 475.35 116 P
0.67 (malicious logic could \322write up\323 and thereby infect programs or alter production data and code.) 72 96 P
-0.01 (Clark and W) 72 76 P
-0.01 (ilson have proposed an alternate model [24] in which data and programs are manipu-) 132.79 76 P
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 5 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
0.4 (lated by well-de\336ned \322transformation procedures,\323 these procedures having been certi\336ed by the) 72 712 P
0.25 (system security of) 72 692 P
0.25 (\336cer as complying with the site integrity policy) 159.57 692 P
0.25 (. Hence computer viruses could) 387.43 692 P
0.64 (only propagate among production programs if a transformation procedure which contains one is) 72 672 P
(itself certi\336ed to conform to the integrity policy) 72 652 T
(.) 300.08 652 T
-0.2 (Policies using discretionary access controls to limit modi\336cation of entities make the same) 108 628 P
(assumptions as security policies using discretionary access controls, with similar results.) 72 608 T
0.09 (Systems implementing multilevel security and integrity policies usually allow some small) 108 584 P
0.52 (set of trusted entities to violate the stated policy when necessary for the smooth operation of the) 72 564 P
-0.08 (computer system. The usefulness of whatever security model the system implements depends to a) 72 544 P
0.08 (very great extent on these exceptions; for should a trusted entity attempt to abuse its power to de-) 72 524 P
-0.17 (viate from the strict policy) 72 504 P
-0.17 (, little can be done. The statements describing the ef) 197.8 504 P
-0.17 (fects of the controls) 445.57 504 P
0.33 (on malicious logic above apply only to the model, and must be suitably modi\336ed for those situa-) 72 484 P
(tions in which a security policy allows \050trusted\051 entities to violate the policy) 72 464 T
(.) 435.66 464 T
-0.54 (The two phases of a computer virus\325 execution illustrate this. Infecting \050altering\051 a program) 108 440 P
0.51 (may be possible due to an allowed exception to the site\325) 72 420 P
0.51 (s integrity model. Executing a computer) 344.91 420 P
0.15 (virus to disclose some information across protection domain boundaries may also be possible be-) 72 400 P
-0.21 (cause of an allowed exception to the site\325) 72 380 P
-0.21 (s disclosure model. So the virus may spread more widely) 268.06 380 P
(because of the allowed exceptions.) 72 360 T
-0.4 (An alternate view of malicious logic is that it causes the altered program to deviate from its) 108 336 P
-0.48 (speci\336cation. If this is considered an \322error\323 as well as a breach of security) 72 316 P
-0.48 (, fault-tolerant computer) 424.04 316 P
-0.22 (systems, which are designed to continue reliable operation when errors occur) 72 296 P
-0.22 (, could constrain ma-) 439.39 296 P
0.33 (licious logic. Designers of reliable systems place emphasis on both recovery and preventing fail-) 72 276 P
-0.66 (ures [106]; however) 72 256 P
-0.66 (, if malicious logic discloses information or gives away rights, or controls other) 166.79 256 P
0.15 (critical systems \050such as life support systems\051, recovery may not be possible. So the areas of reli-) 72 236 P
0.29 (ability and fault-tolerance are relevant to the study of malicious logic, but those areas of fault re-) 72 216 P
(covery are less so.) 72 196 T
2.08 (In the most general case, whether a given program will infect another is undecidable) 108 172 P
1.15 ([2][25], so programs that look for virus infections must check characteristics of known viruses) 72 152 P
0.73 (rather than rely on a general infection detection scheme. Further) 72 132 P
0.73 (, viruses can be programmed to) 385.81 132 P
0.51 (mutate, and hence be able to evade those agents, which in turn can be programmed to detect the) 72 112 P
0.58 (mutations; and in the general case, whether or not one virus mutated to produce another virus is) 72 92 P
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 6 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
(also undecidable [30].) 72 712 T
3 F
(4. A Brief History of Computer V) 72 680 T
(iruses and Related Pr) 243.1 680 T
(ograms) 353.15 680 T
0 F
0.38 ( One of the earliest documented replicating T) 108 656 P
0.38 (rojan horses was a version of the game pro-) 327.77 656 P
0.42 (gram ) 72 636 P
2 F
0.42 (animal) 100.07 636 P
0 F
0.42 ( which when played created another copy of itself. A later version deleted one copy) 133.39 636 P
0.48 (of the \336rst version, and then created ) 72 616 P
2 F
0.48 (two) 250.55 616 P
0 F
0.48 ( additional copies of itself. Because it spread even more) 267.89 616 P
0.74 (rapidly than the \336rst version, this later program supplanted the \336rst entirely) 72 596 P
0.74 (. After a preset date,) 439.8 596 P
(whenever anyone played the second version, it deleted itself after the game ended [41].) 72 576 T
0.16 ( Ken Thompson created a far more subtle replicating T) 108 552 P
0.16 (rojan horse when he rigged a com-) 372.5 552 P
0.02 (piler to break login security [107][127]. When the compiler compiled the login program, it would) 72 532 P
-0.24 (secretly insert instructions to cause the resulting executable program to accept a \336xed, secret pass-) 72 512 P
-0.47 (word as well as a user) 72 492 P
-0.47 (\325) 175.67 492 P
-0.47 (s real password. Also, when compiling the compiler) 179 492 P
-0.47 (, the T) 424.72 492 P
-0.47 (rojan horse would) 454.34 492 P
0 (insert commands to modify the login command into the resulting executable compiler) 72 472 P
0 (. Thompson) 482.7 472 P
-0.48 (then compiled the compiler) 72 452 P
-0.48 (, deleted the new source, and reinstalled the old source. Since it showed) 201.66 452 P
0.12 (no traces of being doctored, anyone examining the source would conclude the compiler was safe.) 72 432 P
0.22 (Fortunately) 72 412 P
0.22 (, Thompson took some pains to ensure that it did not spread further) 126.52 412 P
0.22 (, and it was \336nally) 450.83 412 P
-0.02 (deleted when someone copied another version of the executable compiler over the sabotaged one.) 72 392 P
1.02 (Thompson\325) 72 372 P
1.02 (s point was that \322no amount of source-level veri\336cation or scrutiny will protect you) 126.64 372 P
-0.66 (from using untrusted code\323 \050[127], p. 763\051, which bears remembering, especially given the reliance) 72 352 P
(of many security techniques relying on humans certifying programs to be free of malicious logic.) 72 332 T
-0.57 (In 1983, Fred Cohen designed a computer virus to acquire privileges on a V) 108 308 P
-0.57 (AX-1) 463.41 308 P
-0.57 (1/750 run-) 490.27 308 P
-0.57 (ning UNIX; he obtained all system rights within half an hour on the average, the longest time being) 72 288 P
-0.01 (an hour) 72 268 P
-0.01 (, and the least being under 5 minutes. Because the virus did not degrade response time no-) 107.81 268 P
0.41 (ticeably) 72 248 P
0.41 (, most users never knew the system was under attack. In 1984 an experiment involving a) 109.19 248 P
1 (UNIV) 72 228 P
1 (AC 1) 100.42 228 P
1 (108 showed that viruses could spread throughout that system too. V) 126.64 228 P
1 (iruses were also) 461.39 228 P
0.15 (written for other systems \050T) 72 208 P
0.15 (OPS-20) 206.29 208 P
4 F
0.12 (5) 244.27 212.8 P
0 F
0.15 (, V) 249.27 208 P
0.15 (AX/VMS, and a VM/370) 262.53 208 P
4 F
0.12 (6) 384.91 212.8 P
0 F
0.15 ( system\051 but testing their ef) 389.9 208 P
0.15 (fec-) 521.36 208 P
-0.11 (tiveness was forbidden. Cohen\325) 72 188 P
-0.11 (s experiments indicated that the security mechanisms of those sys-) 222.23 188 P
(tems did little if anything to inhibit computer virus propagation [25][26].) 72 168 T
-0.58 (In 1987, T) 108 144 P
-0.58 (om Duf) 156.31 144 P
-0.58 (f experimented on UNIX systems with a small virus that copied itself into) 192.49 144 P
0.99 (executable \336les. The virus was not particularly virulent, but when Duf) 72 124 P
0.99 (f placed 48 infected pro-) 418.14 124 P
72 96 540 105 C
72 96 540 105 R
7 X
0 K
V
72 105 225 105 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 F
0 X
0 K
(5. ) 72 89.33 T
(T) 90 89.33 T
(OPS-20 is a registered trademark of Digital Equipment Corporation.) 95.93 89.33 T
(6. ) 72 77.33 T
(VM/370 is a registered trademark of IBM.) 90 77.33 T
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 7 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
0.21 (grams on the most heavily used machine in the computing center) 72 712 P
0.21 (, the virus spread to 46 dif) 385.41 712 P
0.21 (ferent) 512.03 712 P
0.59 (systems and infected 466 \336les, including at least one system program on each computer system,) 72 692 P
0.72 (within eight days. Duf) 72 672 P
0.72 (f did not violate the security mechanisms in any way when he seeded the) 181.21 672 P
0.16 (original 48 programs [45]. By writing another virus in a language used by a command interpreter) 72 652 P
0.71 (common to most UNIX systems, he disproved a common fallacy [50] that computer viruses are) 72 632 P
(intrinsically machine dependent, and cannot spread to systems of varying architectures.) 72 612 T
-0.55 (On November 2, 1988, a program combining elements of a computer worm and a computer) 108 588 P
-0.21 (virus tar) 72 568 P
-0.21 (geting Berkeley and Sun UNIX-based computers entered the Internet; within hours, it had) 111.21 568 P
0.71 (rendered several thousand computers unusable [46][47][109][1) 72 548 P
0.71 (17][1) 377.86 548 P
0.71 (18][122][123][125]. Among) 403.39 548 P
-0.1 (other techniques, this program used a virus-like attack to spread: it inserted some instructions into) 72 528 P
0.03 (a running process on the tar) 72 508 P
0.03 (get machine and arranged for those instructions to be executed. T) 204.82 508 P
0.03 (o re-) 517.66 508 P
-0.25 (cover) 72 488 P
-0.25 (, these machines had to be disconnected from the network, rebooted, and several critical pro-) 98.16 488 P
0.9 (grams changed and recompiled to prevent re-infection. W) 72 468 P
0.9 (orse, the only way to determine if the) 354.47 468 P
-0.43 (program had other malicious side ef) 72 448 P
-0.43 (fects \050such as deleting \336les\051 was to disassemble it. Fortunately) 242.51 448 P
-0.43 (,) 537 448 P
-0.06 (its only purpose turned out to be to propagate. Infected sites were extremely lucky that the worm) 72 428 P
4 F
-0.05 (7) 535 432.8 P
0 F
-0.04 (did not infect a system program with a virus designed to delete \336les, or did not attempt to damage) 72 408 P
(attacked systems. Since then, there have been several incidents involving worms [59][66][125].) 72 388 T
-0.71 (In general, though, computer viruses and replicating T) 108 364 P
-0.71 (rojan horses have been laboratory ex-) 363.39 364 P
0.11 (periments rather than attacks from malicious or careless users. This raises a question of risk anal-) 72 344 P
-0.03 (ysis: do the bene\336ts gained in defending against computer viruses of) 72 324 P
-0.03 (fset the costs of recovery and) 399.93 324 P
(the likelihood of being attacked?) 72 304 T
-0.67 (As worded, the above question implies that the mechanisms defending against computer vi-) 108 280 P
-0.17 (ruses are useful ) 72 260 P
2 F
-0.17 (only) 149.1 260 P
0 F
-0.17 ( against computer viruses. However) 169.75 260 P
-0.17 (, computer viruses use techniques that are) 340.81 260 P
0.22 (also used in other methods of attack, such as scavenging) 72 240 P
4 F
0.18 (8) 344.41 244.8 P
0 F
0.22 (, as well as by other forms of malicious) 349.41 240 P
0.12 (logic. Defenses which strengthen access controls to prevent illicit access, or which prevent or de-) 72 220 P
-0.3 (tect the alteration of other \336les, also limit, prevent, or detect these other attacks as well. So, a more) 72 200 P
0 (appropriate question is whether the bene\336ts gained in defending against all such attacks of) 72 180 P
0 (fset the) 505.04 180 P
(costs of recovery and the likelihood of being attacked.) 72 160 T
72 132 540 141 C
72 132 540 141 R
7 X
0 K
V
72 141 225 141 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 F
0 X
0 K
(7. ) 72 125.33 T
-0.33 (W) 90 125.33 P
-0.33 (e use the conventional terminology of calling this program a \322computer worm\323 because its dominant meth-) 98.64 125.33 P
0.68 (od of propagation was from computer system to computer system. Others, notably [46], have labelled it a) 90 113.33 P
(\322computer virus\323 using a taxonomy more \336rmly grounded in biology than the conventional one.) 90 101.33 T
(8. ) 72 89.33 T
-0.33 (Reading private \336les to obtain information \050such as user names and passwords\051 that can then be used to break) 90 89.33 P
(into other systems, or other parts of the system on which the information is found.) 90 77.33 T
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 8 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
0.14 (Because this paper focuses primarily on computer viruses, we shall not delve into the his-) 108 712 P
0.6 (tory of computer security or malicious logic in general. Suf) 72 692 P
0.6 (\336ce it to say that the vulnerability of) 361.61 692 P
0.81 (computer systems to such attacks is well known, and attacks on computer systems are common) 72 672 P
0.15 (enough \050see both [99] and [101] for descriptions of such incidents\051 that the use of mechanisms to) 72 652 P
(inhibit them is generally agreed to be worthwhile.) 72 632 T
3 F
(5. Curr) 72 600 T
(ent Resear) 109.75 600 T
(ch in Malicious Logic and Computer V) 163.82 600 T
(iruses) 362.61 600 T
0 F
0.21 (The ef) 108 576 P
0.21 (fectiveness of any security mechanism depends upon the security of the underlying) 138.96 576 P
-0.24 (base on which the mechanism is implemented, and the correctness of the necessary checking done) 72 556 P
0.17 (at each step. If the trust in the base or in the checking is misplaced the mechanism will not be se-) 72 536 P
-0.69 (cure. Thus \322secure\323 is a relative notion, as is \322trust,\323 and mechanisms to enhance computer security) 72 516 P
0.35 (attempt to balance the cost of the mechanism with the level of security desired and the degree of) 72 496 P
-0.24 (trust in the base that the site accepts as reasonable. Research dealing with malicious logic assumes) 72 476 P
-0.19 (the interface, software, and/or hardware used to implement the proposed scheme performs exactly) 72 456 P
-0.69 (as desired, meaning the trust is in the underlying computing base, the implementation, and \050if done\051) 72 436 P
(the veri\336cation.) 72 416 T
0.67 (Current research uses speci\336c properties of computer viruses to detect and limit their ef-) 108 392 P
1.28 (fects. Because of the fundamental nature of these properties, these defenses work equally well) 72 372 P
(against most other forms of malicious logic.) 72 352 T
3 F
(5.1. Computer V) 72 320 T
(iruses Acting as Both Data and Instructions) 156.83 320 T
0 F
0.09 (T) 108 296 P
0.09 (echniques exploiting this property treat all programs as type \322data\323 until some certifying) 114.49 296 P
1.66 (authority changes the type to \322executable\323 \050instructions\051. Both new systems designed to meet) 72 276 P
(strong security policies and enhancements to existing systems use this method. ) 72 256 T
0.1 (Boebert and Kain [18] have proposed labelling subjects and objects in the Logical Copro-) 108 232 P
-0.43 (cessor Kernel or LOCK \050formerly the Secure Ada T) 72 212 P
-0.43 (ar) 317.52 212 P
-0.43 (get or SA) 326.63 212 P
-0.43 (T\051 [17][61][1) 370.41 212 P
-0.43 (12][1) 433.81 212 P
-0.43 (13], a system de-) 459.34 212 P
0.56 (signed to meet the highest level of security under the Department of Defense criteria [43]. Once) 72 192 P
-0.24 (compiled, programs have the label \322data,\323 and cannot be executed until a sequence of speci\336c, au-) 72 172 P
0 (ditable events changes the label to \322executable.\323 After that, the program cannot be modi\336ed. This) 72 152 P
-0.58 (scheme recognizes that viruses treat programs as data \050when they infect them by changing the \336le\325) 72 132 P
-0.58 (s) 535.33 132 P
-0.09 (contents\051 and as instructions \050when the program executes and spreads the virus\051, and rigidly sepa-) 72 112 P
(rates the two. The Ar) 72 92 T
(gus Security Model [3] uses the same principle.) 173.37 92 T
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 9 of 32) 479.71 36 T
72 72 540 720 R
7 X
V
0 X
-0.11 (Duf) 108 712 P
-0.11 (f [45] has suggested a variant for UNIX-based systems. Noting that users with execute) 126.43 712 P
-0.25 (permission for a \336le usually also have read permission, he proposes that \336les with execute permis-) 72 692 P
0.5 (sion be of type \322executable,\323 and those without it be of type \322data.\323 Unlike the LOCK, \322execut-) 72 672 P
1.83 (able\323 \336les could be modi\336ed but doing so would change the type to \322data.\323 If the certifying) 72 652 P
0.31 (authority were the omnipotent user) 72 632 P
0.31 (, the virus could spread only if run as that user) 240.65 632 P
0.31 (. T) 465.29 632 P
0.31 (o prevent in-) 478.09 632 P
-0.44 (fection from non-executable \336les, libraries and other system components of programs must also be) 72 612 P
(certi\336ed before use.) 72 592 T
-0.19 (Both the LOCK scheme and Duf) 108 568 P
-0.19 (f) 264.39 568 P
-0.19 (\325) 269.04 568 P
-0.19 (s proposal trust that the administrators will never certify) 272.37 568 P
-0.38 (a program containing malicious logic \050either by accident or deliberately\051, and that the tools used in) 72 548 P
(the certi\336cation process are not themselves corrupt.) 72 528 T
3 F
(5.2. V) 72 496 T
(iruses Assuming the Identity of a User) 101.2 496 T
0 F
0.54 (Among the many enhancements to discretionary access controls are suggestions to allow) 108 472 P
0.26 (the user to reduce the associated protection domain [29][72][121][134]; to base access to \336les on) 72 452 P
-0.64 (some characteristic of the command or program [27][81], possibly including subject authorizations) 72 432 P
-0.35 (as well [25]; and to use a knowledge-based subsystem to determine if a program makes reasonable) 72 412 P
-0.09 (\336le accesses [73]. Allowing users to specify semantics for \336le accesses [10][36] may prove useful) 72 392 P
(in some contexts, for example protecting a limited set of \336les. ) 72 372 T
-0.36 (All such mechanisms trust the users to take explicit action to limit their protection domains) 108 348 P
0.39 (suf) 72 328 P
0.39 (\336ciently; or trust tables to describe the programs\325 expected actions suf) 86.44 328 P
0.39 (\336ciently for the mecha-) 426.58 328 P
0.12 (nism to apply those descriptions, and the mechanism to handle commands with no corresponding) 72 308 P
0.48 (table entries ef) 72 288 P
0.48 (fectively; or they trust speci\336c programs and the kernel, when those would be the) 143.35 288 P
(\336rst programs a virus would attack. ) 72 268 T
3 F
(5.3. V) 72 236 T
(iruses Cr) 101.2 236 T
(ossing Pr) 147.95 236 T
(otection Domain Boundaries by Sharing. ) 194.72 236 T
0 F
0.04 (Inhibiting users in dif) 108 212 P
0.04 (ferent protection domains from sharing programs or data will inhibit) 211.52 212 P
1.67 (viruses from spreading among those domains. For example, when users share procedures, the) 72 192 P
0.2 (LOCK keeps only one copy of the procedure in memory) 72 172 P
0.2 (. A master directory) 343.84 172 P
0.2 (, accessible only to a) 439.6 172 P
0.29 (trusted hardware controller) 72 152 P
0.29 (, associates with each procedure a unique owner) 201.98 152 P
0.29 (, and with each user a) 434.65 152 P
-0.67 (list of others whom that user trusts. Before executing any procedure, the dynamic linker checks that) 72 132 P
0.19 (the user executing the procedure trusts the procedure\325) 72 112 P
0.19 (s owner [16]. This scheme assumes that us-) 330.14 112 P
(ers\325 trust in one another is always well-placed.) 72 92 T
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 10 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
-0.55 (A more general proposal [137] suggests placing programs to be protected at the lowest pos-) 108 712 P
0.34 (sible level of an implementation of a multilevel security policy) 72 692 P
0.34 (. Since the mandatory access con-) 375.76 692 P
-0.04 (trols will prevent those processes from writing to objects at lower levels, any process can read the) 72 672 P
0.73 (programs but no process can write to them. Such a scheme would have to be combined with an) 72 652 P
-0.39 (integrity model to provide protection against viruses to prevent both disclosure and \336le corruption.) 72 632 P
-0.28 (Carrying this idea to its extreme would result in isolation of each domain; since sharing is not pos-) 72 612 P
(sible, no viruses can propagate. Unfortunately) 72 592 T
(, the usefulness of such systems would be minimal.) 292.05 592 T
3 F
(5.4. V) 72 560 T
(iruses Altering Files) 101.2 560 T
0 F
0.25 (Mechanisms using ) 108 536 P
2 F
0.25 (manipulation) 201.1 536 P
0 F
0.25 ( ) 265.08 536 P
2 F
0.25 (detection codes) 268.32 536 P
0 F
0.25 ( \050or ) 342.84 536 P
2 F
0.25 (MDC) 363.31 536 P
0 F
0.25 (s\051 apply some function to a \336le) 389.96 536 P
0.14 (to obtain a set of bits called the ) 72 516 P
2 F
0.14 (signatur) 225.72 516 P
0.14 (e block) 265.26 516 P
0 F
0.14 ( and then encrypt that block. If, after recomputing) 299.7 516 P
0.46 (the signature block and reencrypting it, the result dif) 72 496 P
0.46 (fers from the stored signature block, the \336le) 326.94 496 P
(has changed [86][95], possibly due to infection or some other cause not related to viruses.) 72 476 T
-0.38 (An assumption is that the signed \336le does not contain a virus before it is signed. Page [100]) 108 452 P
0 (has suggested expanding the model in [17] to include the software development process \050in ef) 72 432 P
0 (fect) 522.02 432 P
-0.12 (limiting execution domains for each development tool and user\051 to ensure software is not contam-) 72 412 P
0.03 (inated during development. Pozzo and Grey [104][105] have implemented Biba\325) 72 392 P
0.03 (s integrity model) 458.65 392 P
0.06 (on the distributed operating system LOCUS [103] to make the level of trust in the above assump-) 72 372 P
-0.7 (tion explicit. They have dif) 72 352 P
-0.7 (ferent classes of signed executable programs. ) 199.25 352 P
2 F
-0.7 (Cr) 415.22 352 P
-0.7 (edibility ratings) 427.44 352 P
0 F
-0.7 ( \050Biba\325) 503.05 352 P
-0.7 (s) 535.33 352 P
-0.02 (\322integrity levels\323\051 assign a measure of trustworthiness on a scale of 0 \050unsigned\051 to ) 72 332 P
2 F
-0.02 (N) 473.42 332 P
0 F
-0.02 ( \050signed and) 481.42 332 P
-0.42 (formally veri\336ed\051, based on the origin of the software. T) 72 312 P
-0.42 (rusted \336le systems contain only signed ex-) 338.63 312 P
-0.37 (ecutable \336les with the same credibility level. Associated with each user \050subject\051 is a ) 72 292 P
2 F
-0.37 (risk level) 476.13 292 P
0 F
-0.37 ( that) 519.39 292 P
0.71 (starts out as the highest credibility level. Users may execute programs with credibility levels no) 72 272 P
0.22 (less than their risk level; when the credibility level is lower than the risk level, a special \322run-un-) 72 252 P
(trusted\323 command must be used.) 72 232 T
-0.64 (All integrity-based schemes rely on software which if infected may fail to report tampering.) 108 208 P
0.64 (Performance will be af) 72 188 P
0.64 (fected as encrypting the \336le or computing the signature block may take a) 183.27 188 P
-0.02 (signi\336cant amount of time. The encrypting key must also be secret, for if not then malicious logic) 72 168 P
(can easily alter a signed \336le without the change being detected. ) 72 148 T
-0.24 (Network implementations of MDC-based mechanisms require that public keys be certi\336ed) 108 124 P
-0.37 (by a trusted authority and distributed in a trusted fashion \050see for example [15][75]\051. If the key dis-) 72 104 P
-0.61 (tribution mechanism used the same paths as the data transmission and the public keys were not ver-) 72 84 P
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 11
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 11 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
-0.19 (i\336able using an out-of-bands method, a malicious site \050or set of cooperating malicious sites\051 could) 72 712 P
-0.49 (alter the data or program being sent, recompute the signature block and sign it with its own \050bogus\051) 72 692 P
0.03 (private key) 72 672 P
0.03 (, and then transmit the data; when the public key were requested, it would simply send) 124.87 672 P
-0.22 (the one corresponding to the \050bogus\051 private key) 72 652 P
-0.22 (. The more general \050non-network\051 software distri-) 302.51 652 P
(bution problem has similar requirements [35].) 72 632 T
0.44 (Anti-virus agents check \336les for speci\336c viruses and if present either warn the user or at-) 108 608 P
0.02 (tempt to \322cure\323 the infection by removing the virus. Many such agents exist for personal comput-) 72 588 P
-0.47 (ers, but since each must look for a particular virus or set of viruses, they are very speci\336c tools and,) 72 568 P
(because of the undecidability results stated earlier) 72 548 T
(, cannot deal with viruses not yet analyzed.) 310.67 548 T
3 F
(5.5. V) 72 516 T
(iruses Performing Actions Beyond Speci\336cation) 101.2 516 T
0 F
0.96 (Fault-tolerant techniques keep systems functioning correctly when the software or hard-) 108 492 P
-0.21 (ware fails to perform to speci\336cation. Joseph and) 72 472 P
-0.21 (\371) 328.34 472 P
-0.21 (A) 310.34 472 P
-0.21 (vizienis have suggested treating a virus\325 infec-) 318.11 472 P
2.9 (tion and execution phases as errors. The \336rst such proposal [70][71] breaks programs into) 72 452 P
0.14 (sequences of non-branching instructions, and checksums each sequence, storing the results in en-) 72 432 P
-0.16 (crypted form. When the program is run, the processor recomputes checksums, and at each branch,) 72 412 P
-0.04 (a co-processor compares the computed checksum to the encrypted checksum; if they dif) 72 392 P
-0.04 (fer) 493.62 392 P
-0.04 (, an er-) 506.45 392 P
0.03 (ror \050which may be an infection\051 has occurred. Later proposals advocate checking each instruction) 72 372 P
-0.35 ([35]. These schemes raise issues of key management and protection, as well as how much the soft-) 72 352 P
-0.63 (ware managing keys, transmitting the control \337ow graph to the co-processor) 72 332 P
-0.63 (, and implementing the) 431.29 332 P
(recovery mechanism, may be trusted.) 72 312 T
0.36 (A proposal based on ) 108 288 P
2 F
0.36 (N-V) 210.71 288 P
0.36 (ersion Pr) 228.7 288 P
0.36 (ogramming) 273.6 288 P
0 F
0.36 ( [5] requires implementing several dif) 328.9 288 P
0.36 (ferent) 512.03 288 P
-0.64 (versions of an algorithm, running them concurrently and periodically checking intermediate results) 72 268 P
-0.02 (against each other) 72 248 P
-0.02 (. If they disagree, the value assumed correct is the intermediate value that a ma-) 157.9 248 P
0.3 (jority of the programs have obtained, and the programs with a dif) 72 228 P
0.3 (ferent value are malfunctioning) 388.22 228 P
0.06 (\050possibly due to malicious logic\051. This requires a majority of the programs not to be infected, and) 72 208 P
-0.38 (the underlying operating system to be secure. Also, the issue of the ef) 72 188 P
-0.38 (\336cacy of N-version program-) 400.94 188 P
0.12 (ming is highly questionable [77]. Despite claims that the method is feasible [6][23], detecting the) 72 168 P
0.12 (spread of a virus would require voting upon each \336le system access; to achieve this level of com-) 72 148 P
-0.17 (parison, the programs would all have to implement the same algorithm, which defeats the purpose) 72 128 P
(of using N-version programming [78].) 72 108 T
FMENDPAGE
%%EndPage: "11" 12
%%Page: "12" 12
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 12 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
3 F
0 X
(5.6. V) 72 712 T
(iruses Altering Statistical Characteristics) 101.2 712 T
0 F
-0.36 (Proposals to examine the appearance of programs for identical sequences of instructions or) 108 688 P
-0.31 (byte patterns [69][137] require a high number of comparisons and would need to take into account) 72 668 P
-0.61 (the reuse of common library routines or of code [76]. Malicious logic might be present if a program) 72 648 P
-0.41 (appears to have more programmers than were known to have worked on it, or if one particular pro-) 72 628 P
-0.1 (grammer appears to have worked on many dif) 72 608 P
-0.1 (ferent and unrelated programs [137]; but several as-) 291.91 608 P
0.84 (sumptions must \336rst be validated, namely that programmers have their own individual styles of) 72 588 P
-0.56 (writing programs, that the executable programs generated by the compilers will re\337ect these styles,) 72 568 P
-0.29 (and that a ) 72 548 P
2 F
-0.29 (coding style analyzer) 120.75 548 P
0 F
-0.29 ( can distinguish these styles from one another) 222.09 548 P
-0.29 (. If an object \336le con-) 438.22 548 P
-0.35 (tains conditionals not corresponding to any in the source, the object may be infected [54]. A fourth) 72 528 P
-0.45 (proposal suggests designing a \336lter to detect, analyze, and classify all modi\336cations that a program) 72 508 P
(will make as ordinary or suspicious [32].) 72 488 T
0.22 (Finally) 108 464 P
0.22 (, Dorothy Denning has suggested using an intrusion-detection expert system to de-) 141.21 464 P
-0.26 (tect viruses by looking for increases in the size of \336les, increases in the frequency of writing to ex-) 72 444 P
-0.33 (ecutable \336les, or alterations in the frequency of executing a speci\336c program in ways not matching) 72 424 P
1.36 (the pro\336le of users spreading the infection [38]. Several such systems have been implemented) 72 404 P
-0.3 ([8][88][126] and have detected many anomalies without noticeably degrading the monitored com-) 72 384 P
(puter) 72 364 T
(. These experiments did not attempt to validate claims about detecting viruses.) 95.99 364 T
0 (Those research proposals that are being implemented are either tar) 108 340 P
0 (geted for speci\336c archi-) 426.46 340 P
0.82 (tectures or are in the very early stages of development. This state of af) 72 320 P
0.82 (fairs is unsettling for the) 419.47 320 P
-0.29 (managers and administrators of existing systems, who need to take some action to protect their us-) 72 300 P
(ers and systems.) 72 280 T
3 F
(6. V) 72 248 T
(ulnerabilities of Existing Resear) 91.55 248 T
(ch-Oriented Systems) 254.91 248 T
0 F
0.35 (The vulnerabilities exploited by a computer virus can also be exploited by other forms of) 108 224 P
-0.04 (malicious logic, and unless the purpose of the attack is to cause mischief, the other forms of mali-) 72 204 P
-0.61 (cious logic are much easier to create. Rather than describe appropriate countermeasures, we simply) 72 184 P
0.15 (note that these will dif) 72 164 P
0.15 (fer from environment to environment, and no such list \050or even set of lists\051) 179.65 164 P
-0.18 (can accurately re\337ect the idiosyncracies of all the dif) 72 144 P
-0.18 (ferent research and development systems and) 323.43 144 P
(environments; in short, providing such a generic list could give a very false sense of security) 72 124 T
(.) 515.58 124 T
1.19 (This section discusses the areas of vulnerability) 108 100 P
1.19 (. While we emphasize computer viruses) 342.87 100 P
0.26 (throughout, these same vulnerabilities can be exploited by T) 72 80 P
0.26 (rojan horses, computer worms, other) 363.1 80 P
FMENDPAGE
%%EndPage: "12" 13
%%Page: "13" 13
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 13 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
0.38 (forms of malicious logic, and, more generally) 72 712 P
0.38 (, other types of attacks. W) 292.67 712 P
0.38 (e leave it to the reader to) 419.17 712 P
-0.26 (formulate appropriate techniques to detect or hinder attacks exploiting each area. \050Sidebar 3 of) 72 692 P
-0.26 (fers) 522.02 692 P
(a starting point for UNIX-based systems.\051) 72 672 T
3 F
(6.1. Computing Base) 72 640 T
0 F
0.38 (Users assume that the computer system provides a set of trustworthy tools for compiling,) 108 616 P
0.52 (linking and loading, and running programs. In most systems, the \322trust\323 is the user) 72 596 P
0.52 (\325) 474.99 596 P
0.52 (s estimate of) 478.33 596 P
0.05 (the quality of the tools available [28] and the working environment. If the estimates are incorrect,) 72 576 P
(the system may be subverted.) 72 556 T
0.22 (Even systems with security enhancements are vulnerable. One version of the UNIX oper-) 108 532 P
-0.17 (ating system with security enhancements was breached when a user created a version of the direc-) 72 512 P
-0.52 (tory lister) 72 492 P
-0.52 (, with a T) 117.31 492 P
-0.52 (rojan horse, in his home directory) 161.3 492 P
-0.52 (. He then requested assistance from the system) 319.81 492 P
0.34 (operator) 72 472 P
0.34 (, who changed to the user) 111.48 472 P
0.34 (\325) 236.2 472 P
0.34 (s home directory) 239.54 472 P
0.34 (, and listed the names of the \336les in it. As the) 320.05 472 P
0.07 (command interpreter checked for commands in the current working directory and ) 72 452 P
2 F
0.07 (then) 466.82 452 P
0 F
0.07 ( in the sys-) 487.48 452 P
(tem directories, the user) 72 432 T
(\325) 187.69 432 T
(s doctored lister) 191.02 432 T
(, not the system lister) 267.16 432 T
(, was executed [120].) 368.96 432 T
0.18 (In the above, the system administrator trusted the command interpreter to look for system) 108 408 P
-0.39 (programs before executing programs in users\325 directories. Other examples include trusting that the) 72 388 P
0.9 (login banner being presented is actually from the login program and not from a user) 72 368 P
0.9 (\325) 487.46 368 P
0.9 (s program) 490.8 368 P
-0.43 (which will record passwords [58], or that page faults cannot be detected while checking passwords) 72 348 P
(one character at a time [82].) 72 328 T
3 F
(6.2. Sharing Hardwar) 72 296 T
(e and Softwar) 183.73 296 T
(e) 254.8 296 T
0 F
1.18 (Intimately bound with the notion of trust is the ability to share. When many computers) 108 272 P
-0.41 (share a copy of an infected program, every \336le accessible from every one of those machines can be) 72 252 P
-0.69 (infected. Methods of sharing include making and distributing copies of software, accessing bulletin) 72 232 P
-0.22 (board systems, public \336le servers, and obtaining source \336les from remote hosts using a network or) 72 212 P
(electronic mail.) 72 192 T
-0.31 (The probability of any new program containing malicious logic depends on the integrity of) 108 168 P
-0.27 (the author \050or authors\051, the security and integrity of the computer on which they worked, on which) 72 148 P
-0.21 (the distribution was prepared, and on the method of distribution. Programs sent through electronic) 72 128 P
-0.63 (mail or posted to bulletin boards may be altered in transit, either by someone modifying them while) 72 108 P
1.03 (they sit on an intermediate node, or while they are crossing networks [133]. Further) 72 88 P
1.03 (, electronic) 485.68 88 P
FMENDPAGE
%%EndPage: "13" 14
%%Page: "14" 14
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 14 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
-0.28 (messages can easily be for) 72 712 P
-0.28 (ged [1) 197.91 712 P
-0.28 (16][132], so it is unwise to rely on such a program\325) 227.5 712 P
-0.28 (s stated origin.) 470.26 712 P
0.17 (In the early 1980s a program posted to the USENET news network contained a command) 108 688 P
-0.14 (to delete all \336les on the system in which it was run. Some system administrators executed the pro-) 72 668 P
-0.5 (gram with unlimited privileges, thereby damaging their systems. In another case, although vendors) 72 648 P
0.57 (usually take care that their software contains no malicious logic, a company selling software for) 72 628 P
-0.64 (the Macintosh) 72 608 P
4 F
-0.54 (9) 139.65 612.8 P
0 F
-0.64 ( unwittingly delivered copies of programs infected by a computer virus which print-) 144.65 608 P
(ed a message asking for universal peace [51].) 72 588 T
3 F
(6.3. Integrity of Pr) 72 556 T
(ograms) 166.71 556 T
0 F
-0.44 (The infection phase of a virus\325 actions require writing to \336les; for reasons discussed earlier) 108 532 P
-0.44 (,) 537 532 P
0.34 (discretionary access controls provide little protection. T) 72 512 P
0.34 (ypically some form of auditing is used to) 340.7 512 P
0.62 (detect changes [14][19]; however) 72 492 P
0.62 (, auditing schemes cannot prevent damage, but only attempt to) 234.25 492 P
0.25 (provide a record of it and \050possibly\051 indicate the culprit. The best auditing methods use a mecha-) 72 472 P
0.49 (nism that records changes to \336les or their characteristics. Such schemes require kernel modi\336ca-) 72 452 P
-0.22 (tions [102] and should be designed into new systems [57][79][96]; if a site has only object code, it) 72 432 P
0.21 (cannot add these mechanisms and so must scan the \336le system [13]. Audit logs must also be pro-) 72 412 P
(tected from illicit modi\336cation; again, an element of trust in the underlying subsystem is needed.) 72 392 T
0.4 (A computer virus can defeat any auditing scheme by infecting a \336le and then altering the) 108 368 P
-0.23 (\336le\325) 72 348 P
-0.23 (s contents or characteristics during the audit, for example by restoring the uncorrupted version) 90.66 348 P
(temporarily) 72 328 T
(. An example of such a ) 127.18 328 T
2 F
(stealth virus) 240.76 328 T
0 F
( is the 4096 \050personal computer\051 virus [89].) 299.73 328 T
0.22 (No program can determine if an arbitrary virus has infected a \336le because of the undecid-) 108 304 P
-0.58 (ability results cited earlier; however) 72 284 P
-0.58 (, ) 241.72 284 P
2 F
-0.58 (virus detectors) 247.13 284 P
0 F
-0.58 ( or ) 317.5 284 P
2 F
-0.58 (anti-virus agents) 332.32 284 P
0 F
-0.58 ( can check \336les for speci\336c) 412.7 284 P
0.16 (virus. If a virus detector reports that no infection is present, the \336le may contain a virus unknown) 72 264 P
-0.17 (to the detector) 72 244 P
-0.17 (, or the detector may be corrupt. In February 1989, at Dartmouth College, a user ran) 139.8 244 P
1.36 (an infected version of the virus detection program Interferon, infecting \336les on his disk. More) 72 224 P
0.61 (widely known is the T) 72 204 P
0.61 (rojan horse in a doctored copy of the anti-virus program FLUSHOT [64];) 181.27 204 P
(later versions are called FSP+ to avoid confusion with the tampered version [7].) 72 184 T
3 F
(6.4. Backups and Recovery) 72 152 T
0 F
-0.41 (Using backups to replace infected \336les, or \336les which contain malicious logic, may remove) 108 128 P
-0.42 (such programs from the system. As most systems make backup copies of \336les which have changed) 72 108 P
72 84 540 93 C
72 84 540 93 R
7 X
0 K
V
72 93 225 93 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 F
0 X
0 K
(9. ) 72 77.33 T
(Macintosh is a Registered T) 90 77.33 T
(rademark of Apple Computer) 201.8 77.33 T
FMENDPAGE
%%EndPage: "14" 15
%%Page: "15" 15
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 15 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
-0.22 (since the time the previous backup was made, it is quite likely that several backups will need to be) 72 712 P
-0.17 (examined to \336nd an uncontaminated version of the infected program. Further) 72 692 P
-0.17 (, unless all malicious) 439.89 692 P
0.38 (programs are found and restored at the same time, the restoration of some uncorrupted programs) 72 672 P
0.64 (may do little \050for example, computer viruses still resident on the system could infect the newly-) 72 652 P
(restored programs\051. ) 72 632 T
-0.47 (If the backup and restore programs themselves contain malicious logic that prevents uncor-) 108 608 P
0.38 (rupted software from being restored, then the backups are useless until a way is found to replace) 72 588 P
0.33 (\050or \336x\051 the restore program. W) 72 568 P
0.33 (orse, some research and development systems \050such as variants of) 220.58 568 P
0.63 (the UNIX operating system\051 do not allow users to \322lock\323 devices, so one user can access media) 72 548 P
-0.24 (mounted by another user) 72 528 P
-0.24 (. Thus, between the mounting and the attempt to restore, another program) 189.54 528 P
(containing malicious logic could easily infect or erase a mounted backup.) 72 508 T
3 F
(6.5. The Human Factor) 72 476 T
0 F
-0.38 (It has been said that computer viruses are a management issue, because they are introduced) 108 452 P
-0.47 (by people [37]; the same may be said for all malicious logic, and computer security in general. Ide-) 72 432 P
0.92 (ally) 72 412 P
0.92 (, security procedures should balance the security and safety of the system and data with the) 89.21 412 P
0.12 (needs of the users and systems personnel to get work done. All too often, users \050and systems per-) 72 392 P
-0.54 (sonnel\051 see them as burdens to be evaded. Lack of awareness of the reasons for security procedures) 72 372 P
-0.33 (and mechanisms leads to carelessness or negligence, which can in turn lead to system compromise) 72 352 P
(\050see for example [101]\051.) 72 332 T
-0.39 (Little if anything can be done to prevent compromise by trusted personnel. Malicious users) 108 308 P
-0.4 (and system administrators can often circumvent security policy restrictions without being stopped,) 72 288 P
0.27 (or even detected, by using the exceptions to the mechanisms enforcing the policies. \050See [99] for) 72 268 P
0.38 (examples of these \322inside jobs.\323\051 The study of computing ethics, or of a code of ethical conduct,) 72 248 P
-0.2 (reduces this threat by making clear what actions are considered acceptable; should a breach occur) 72 228 P
-0.2 (,) 537 228 P
(legal remedies may be available [55][1) 72 208 T
(1) 258.4 208 T
(1].) 263.95 208 T
3 F
(6.6. Multiple Levels of Privilege) 72 176 T
0 F
-0.5 (Multi-user computer systems often provide many dif) 108 152 P
-0.5 (ferent levels of privilege; for example,) 357.97 152 P
-0.75 (UNIX provides a separate set of privileges for each user) 72 132 P
-0.75 (, and one all-powerful ) 334.22 132 P
2 F
-0.75 (superuser) 440.15 132 P
0 F
-0.75 (. Enforcing) 486.79 132 P
(the ) 72 112 T
2 F
(principle of least privilege) 89.65 112 T
0 F
( [1) 216.58 112 T
(10] can limit the \336les that malicious logic can read or write.) 229.13 112 T
0.19 (If someone using a privileged account accidentally executes a program containing a com-) 108 88 P
FMENDPAGE
%%EndPage: "15" 16
%%Page: "16" 16
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 16 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
0.2 (puter virus, the virus will spread throughout the system rapidly [45]. Hence, simply logging in as) 72 712 P
0.14 (a privileged user and remaining so empowered increases the possibility of accidentally triggering) 72 692 P
0.25 (some form of malicious logic. More subtle is the use of programs which can cross protection do-) 72 672 P
-0.26 (main boundaries; when the boundary being crossed involves the addition of a privilege or capabil-) 72 652 P
-0.3 (ity that enables the user to af) 72 632 P
-0.3 (fect objects in many other protection domains \050such as changing from) 207.89 632 P
0.51 (an unprivileged to a privileged mode\051, a malicious program could read or alter data or programs) 72 612 P
0.62 (not normally accessible to the user) 72 592 P
0.62 (. In general, computer systems do not force such programs to) 240.66 592 P
-0.67 (function with as few privileges as possible. For example, the setuid and setgid mechanism of UNIX) 72 572 P
([12][21][84] violate this principle.) 72 552 T
0.31 (A related but widely-ignored problem is the use of \322smart\323 terminals to access privileged) 108 528 P
0.33 (accounts. These terminals will respond to control sequences from a host by transmitting portions) 72 508 P
-0.11 (of the text on their screen back to the host [52], and often perform simple editing functions for the) 72 488 P
0.87 (host. Such a terminal can issue a computer virus\325 commands in the name of the terminal\325) 72 468 P
0.87 (s user) 511.48 468 P
-0.14 (when appropriate text and control sequences are sent to it \050for example, by using an inter) 72 448 P
-0.14 (-terminal) 496.03 448 P
0.63 (communications program or displaying \336les with appropriate characters in it.\051 These commands) 72 428 P
-0.2 (could instruct the computer to execute an infected program, which would run in the protection do-) 72 408 P
-0.04 (main of the user of the terminal \050and not that of the attacker\051. As many computers use such termi-) 72 388 P
-0.41 (nals as their consoles, and allow access to the most privileged accounts only when the user is at the) 72 368 P
(console, the danger is obvious.) 72 348 T
3 F
(6.7. Dir) 72 316 T
(ect Device Access) 110.09 316 T
0 F
0.37 (The ) 108 292 P
2 F
0.37 (principle of complete mediation) 130.02 292 P
0 F
0.37 ( [1) 284.03 292 P
0.37 (10] requires checking the validity of every access.) 296.95 292 P
0.97 (Although multi-user systems have virtual memory protection to prevent processes from writing) 72 272 P
1.13 (into each other) 72 252 P
1.13 (\325) 145.98 252 P
1.13 (s memory) 149.31 252 P
1.13 (, some represent devices and memory as addressable objects \050such as) 197.3 252 P
-0.07 (\336les\051. If these objects are improperly or inadequately protected, a process could bypass the virtual) 72 232 P
0.5 (memory controls and write to any location in memory by placing data and addresses on the bus,) 72 212 P
0.47 (thereby altering the instructions and data in another) 72 192 P
0.47 (\325) 322.56 192 P
0.47 (s memory space \050the \322core war\323 games [42]) 325.9 192 P
0.09 (did this\051. If any process could write to disks without the kernel\325) 72 172 P
0.09 (s intervention, anyone can change) 376.78 172 P
-0.4 (executable programs regardless of their protection \320 and a virus can easily spread by taking advan-) 72 152 P
(tage of the \050lack of\051 protection.) 72 132 T
3 F
(7. Conclusion) 72 100 T
0 F
0.67 (This paper has described the threats that computer viruses pose to research and develop-) 108 76 P
FMENDPAGE
%%EndPage: "16" 17
1 12 /Times-BoldItalic FMDEFINEFONT
%%Page: "17" 17
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 17 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
-0.02 (ment multi-user computer systems; it has attempted to tie those programs with other) 72 712 P
-0.02 (, usually sim-) 475.07 712 P
0.25 (pler) 72 692 P
0.25 (, programs that can have equally devastating ef) 90.17 692 P
0.25 (fects. Although reports of malicious programs) 317.55 692 P
0.39 (in general abound, no non-experimental computer viruses have been reported on mainframe sys-) 72 672 P
0.09 (tems.) 72 652 P
4 F
0.08 (10) 97.65 656.8 P
0 F
0.09 ( Noting that the number of people with access to mainframes is relatively small compared) 107.65 652 P
-0.52 (to the number with access to personal computers [130], Highland suggests that as malicious people) 72 632 P
0.52 (make up a very small fraction of all computer programmers, most likely fewer malicious people) 72 612 P
-0.62 (use research and development systems than personal computers [64]. A more persuasive ar) 72 592 P
-0.62 (gument,) 501.02 592 P
-0.46 (advanced by F\214k [49] and supported by Kurzban [80] is that, as only programmers can create com-) 72 572 P
-0.11 (puter viruses, and malicious mainframe programmers can accomplish their goals with less trouble) 72 552 P
-0.6 (than writing a computer virus, computer virus attacks will most likely be con\336ned to personal com-) 72 532 P
-0.64 (puters. Exceptions would most likely be motivated by a perceived intellectual challenge of creating) 72 512 P
-0.41 (a virus, by a desire to demonstrate limits of existing security mechanisms, by a desire for publicity) 72 492 P
-0.41 (,) 537 492 P
(or attacks launched simply by carelessness or error [98].) 72 472 T
4 F
(1) 342.12 476.8 T
(1) 346.74 476.8 T
0 F
0 (Should an attacker use a computer virus or other malicious program, security mechanisms) 108 448 P
0.2 (currently in use will be as ef) 72 428 P
0.2 (fective as they are against other types of attacks. As with attempts to) 208.87 428 P
-0.4 (breach security in general, though, people can prepare for such an attack and minimize the damage) 72 408 P
0.78 (done. This paper has described several vulnerabilities in the research and development environ-) 72 388 P
-0.18 (ment that malicious programs could exploit, and also discussed research underway to improve de-) 72 368 P
2.04 (fenses against malicious logic. How ef) 72 348 P
2.04 (fective these new mechanisms will be in reducing the) 267.19 348 P
(vulnerabilities, only time will tell.) 72 328 T
1 F
-0.14 (Acknowledgments) 72 304 P
0 F
-0.14 (: Thanks to Holly Bishop, Ken Bogart, Andr\216 Bondi, Emily Bryant, Peter Den-) 161.96 304 P
-0.58 (ning, Donald Johnson, John Rushby) 72 284 P
-0.58 (, Eugene Spaf) 242.12 284 P
-0.58 (ford, Ken V) 307.68 284 P
-0.58 (an W) 362.8 284 P
-0.58 (yk, and the anonymous referees,) 387.14 284 P
0.84 (all of whose comments and advice improved the quality of the paper greatly) 72 264 P
0.84 (. Josh Alden of the) 446.37 264 P
1 (Dartmouth V) 72 244 P
1 (irus Clinic described the Interferon infection incident, Robert V) 135.91 244 P
1 (an Cleef and Gene) 448.07 244 P
-0.32 (Spaf) 72 224 P
-0.32 (ford helped reconstruct the USENET logic bomb incident, and Ken Thompson con\336rmed that) 93.77 224 P
0.18 (he had indeed doctored an ) 72 204 P
2 F
0.18 (internal) 201.77 204 P
0 F
0.18 ( version of the C compiler as described in [127]. My thanks to) 239.76 204 P
(them also.) 72 184 T
72 156 540 165 C
72 156 540 165 R
7 X
0 K
V
72 165 225 165 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 F
0 X
0 K
(10. ) 72 149.33 T
0.18 (Cohen tantalizingly claims that one has been found, but reports no other details [27]. Suppression of details) 90 149.33 P
-0.05 (\050or) 90 137.33 P
-0.05 (, more commonly) 101.25 137.33 P
-0.05 (, the existence\051 of attacks, virus or otherwise, is common; it is estimated that victims re-) 171.3 137.33 P
-0.02 (port only 10% to 35% of computer crimes in general [1) 90 125.33 P
-0.02 (19][129], in part to prevent embarrassment or loss of) 310.93 125.33 P
0.35 (public con\336dence in the company) 90 113.33 P
0.35 (, or to avoid the expense of gathering suf) 225.67 113.33 P
0.35 (\336cient evidence to prosecute the) 391.8 113.33 P
(of) 90 101.33 T
(fender [101].) 98.15 101.33 T
(1) 72 89.33 T
(1. ) 76.63 89.33 T
0.23 (It is worth noting that the author of the Internet worm stated that the worm disabled machines due to a pro-) 90 89.33 P
(gramming error [93].) 90 77.33 T
FMENDPAGE
%%EndPage: "17" 18
%%Page: "18" 18
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 18 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
3 F
0 X
(Refer) 72 712 T
(ences) 100.41 712 T
0 F
([1]) 72 688 T
-0.62 (G. Al-Dossary) 108 688 P
-0.62 (, \322Computer V) 176.55 688 P
-0.62 (irus Prevention and Containment on Mainframes,\323 ) 245.55 688 P
2 F
-0.62 (Computers) 487.36 688 P
(and Security) 108 668 T
0 F
( ) 168.29 668 T
3 F
(9) 171.29 668 T
0 F
(\0502\051 \050Apr) 177.29 668 T
(. 1990\051 pp. 131-137.) 216.25 668 T
([2]) 72 644 T
2.37 (L. Adelman, \322An Abstract Theory of Computer V) 108 644 P
2.37 (iruses,\323, ) 363.99 644 P
2 F
2.37 (Advances in Cryptology \320) 408.65 644 P
(CR) 108 624 T
(YPT) 123.11 624 T
(O \32488 Pr) 143.56 624 T
(oceedings) 185.75 624 T
0 F
(, Springer) 233.71 624 T
(-V) 280.78 624 T
(erlag, New Y) 292.1 624 T
(ork, NY \050Aug. 1988\051 pp. 354-374.) 355.17 624 T
([3]) 72 600 T
0.46 (M. Adkins, G. Dolsen, J. Heaney) 108 600 P
0.46 (, and J. Page, \322The Ar) 268.77 600 P
0.46 (gus Security Model,\323 ) 376.78 600 P
2 F
0.46 (T) 483.44 600 P
0.46 (welfth Na-) 489.22 600 P
(tional Computer Security Confer) 108 580 T
(ence Pr) 265.14 580 T
(oceedings) 301.66 580 T
0 F
( \050Oct. 1989\051 pp. 123-134.) 349.62 580 T
([4]) 72 556 T
-0.05 (J. Anderson, \322Computer Security T) 108 556 P
-0.05 (echnology Planning Study) 276.85 556 P
-0.05 (,\323 ESD-TR-73-51, Air Force) 402.58 556 P
(Electronic Systems Division, Hanscom Air Force Base, MA \0501974\051.) 108 536 T
([5]) 72 512 T
0.8 (A.) 108 512 P
0.8 (\371) 141.66 512 P
0.8 (A) 123.65 512 P
0.8 (vizienis, \322The N-V) 131.42 512 P
0.8 (ersion Approach to Fault-T) 223.28 512 P
0.8 (olerant Software,\323 ) 355.73 512 P
2 F
0.8 (IEEE T) 448.25 512 P
0.8 (ransactions) 484.03 512 P
(on Softwar) 108 492 T
(e Engineering) 159.87 492 T
0 F
( ) 227.49 492 T
3 F
(SE-1) 230.49 492 T
(1) 254.49 492 T
0 F
(\05012\051 \050Dec. 1985\051 pp. 1491-1501.) 260.48 492 T
([6]) 72 468 T
0.43 (A.) 108 468 P
0.43 (\371) 141.66 468 P
0.43 (A) 123.65 468 P
0.43 (vizienis, M. L) 131.42 468 P
0.43 (yu, and W) 198.92 468 P
0.43 (. Schutz, \322In Search of Ef) 248.31 468 P
0.43 (fective Diversity: A Six-Language) 373.16 468 P
0.48 (Study of Fault-T) 108 448 P
0.48 (olerant Control Software,\323 T) 188.07 448 P
0.48 (echnical Report CSD-870060, University of) 326.57 448 P
(California, Los Angeles, CA \050Nov) 108 428 T
(. 1987\051.) 272.44 428 T
([7]) 72 404 T
-0.73 (D. Bader) 108 404 P
-0.73 (, \322Bad V) 150.09 404 P
-0.73 (ersions of FLUSHOT \050for IBM PC\051,\323 ) 189.6 404 P
2 F
-0.73 (V) 368.76 404 P
-0.73 (irus-L Digest) 375.2 404 P
0 F
-0.73 ( ) 438.11 404 P
3 F
-0.73 (1) 440.38 404 P
0 F
-0.73 (\0508\051 \050Nov) 446.37 404 P
-0.73 (. 15, 1988\051.) 486.49 404 P
([8]) 72 380 T
0.95 (D. Bauer and M. Koblentz, \322NDIX \320 A Real-T) 108 380 P
0.95 (ime Intrusion Detection Expert System,\323) 340.66 380 P
2 F
(1989 Summer USENIX Confer) 108 360 T
(ence Pr) 254.46 360 T
(oceedings) 290.98 360 T
0 F
( \050June 1988\051 pp. 261-274.) 338.95 360 T
([9]) 72 336 T
0.49 (D. Bell and L. LaPadula, \322Secure Computer Systems: Uni\336ed Exposition and MUL) 108 336 P
0.49 (TICS) 514.01 336 P
1.81 (Interpretation,\323 T) 108 316 P
1.81 (echnical Report MTR-2997, MITRE Corporation, Bedford, MA \050July) 192.9 316 P
(1975\051.) 108 296 T
([10]) 72 272 T
-0.51 (B. Bershad and C. Pinkerton, \322W) 108 272 P
-0.51 (atchdogs: Extending the UNIX File System,\323 ) 264.39 272 P
2 F
-0.51 (1988 W) 481.54 272 P
-0.51 (inter) 517.34 272 P
(USENIX Confer) 108 252 T
(ence Pr) 185.18 252 T
(oceedings) 221.7 252 T
0 F
( \050Feb. 1988\051 pp. 267-276.) 269.66 252 T
([1) 72 228 T
(1]) 81.55 228 T
-0.25 (K. Biba, \322Integrity Considerations for Secure Computer Systems,\323 T) 108 228 P
-0.25 (echnical Report ESD-) 435.25 228 P
-0.31 (TR-76-372, Air Force Electronic Systems Division, Hanscom Air Force Base, MA \0501977\051.) 108 208 P
([12]) 72 184 T
(M. Bishop, \322How to W) 108 184 T
(rite a Setuid Program,\323 ) 219.46 184 T
2 F
(;login:) 333.04 184 T
0 F
( ) 365.69 184 T
3 F
(12) 368.69 184 T
0 F
(\0501\051 \050Jan. 1987\051 pp. 5-1) 380.68 184 T
(1.) 488.15 184 T
([13]) 72 160 T
0.41 (M. Bishop, \322Auditing Files on a Network of UNIX Machines,\323 ) 108 160 P
2 F
0.41 (Pr) 418.28 160 P
0.41 (oceedings of the UNIX) 429.83 160 P
(Security W) 108 140 T
(orkshop) 159.19 140 T
0 F
( \050Aug. 1988\051 pp. 51-52.) 197.83 140 T
([14]) 72 116 T
-0.19 (M. Bishop, \322A Model of Security Monitoring,\323 ) 108 116 P
2 F
-0.19 (Pr) 336.52 116 P
-0.19 (oceedings of the Fifth Annual Computer) 348.07 116 P
(Security Applications Confer) 108 96 T
(ence) 246.81 96 T
0 F
( \050Dec. 1989\051 pp. 46-52.) 268.78 96 T
FMENDPAGE
%%EndPage: "18" 19
%%Page: "19" 19
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 19 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
([15]) 72 712 T
0.22 (M. Bishop, \322An Authentication Mechanism for USENET) 108 712 P
0.22 (,\323 ) 384.23 712 P
2 F
0.22 (1991 W) 395.77 712 P
0.22 (inter USENIX Confer-) 432.3 712 P
(ence) 108 692 T
0 F
( ) 129.97 692 T
2 F
(Pr) 132.97 692 T
(oceedings) 144.52 692 T
0 F
( \050Jan. 1991\051 pp. 281-287.) 192.48 692 T
([16]) 72 668 T
0.31 (W) 108 668 P
0.31 (. Boebert and C. Fer) 118.22 668 P
0.31 (guson, \322A Partial Solution to the Discretionary T) 216.51 668 P
0.31 (rojan Horse Prob-) 453.45 668 P
(lem,\323 ) 108 648 T
2 F
(Pr) 137.31 648 T
(oceedings of the Eighth Computer Security Confer) 148.86 648 T
(ence) 390.94 648 T
0 F
( \050sep. 1985\051 pp. 245-253.) 412.91 648 T
([17]) 72 624 T
0.21 (W) 108 624 P
0.21 (. Boebert and R. Kain, \322A Practical Alternative to Hierarchical Integrity Policies,\323 ) 118.22 624 P
2 F
0.21 (Pr) 518.46 624 P
0.21 (o-) 530.01 624 P
(ceedings of the Eighth Computer Security Confer) 108 604 T
(ence) 344.08 604 T
0 F
( \050Sep. 1985\051 pp. 18-27.) 366.05 604 T
([18]) 72 580 T
0.08 (W) 108 580 P
0.08 (. Boebert, W) 118.22 580 P
0.08 (. Y) 178.56 580 P
0.08 (oung, R. Kain, and S. Hansohn, \322Secure Ada T) 192.1 580 P
0.08 (ar) 418.06 580 P
0.08 (get: Issues, System De-) 427.17 580 P
-0.19 (sign, and V) 108 560 P
-0.19 (eri\336cation,\323 ) 161.26 560 P
2 F
-0.19 (Pr) 221.02 560 P
-0.19 (oceedings of the 1985 Symposium on Security and Privacy) 232.57 560 P
0 F
-0.19 ( \050Apr) 512.21 560 P
-0.19 (.) 537 560 P
(1985\051 pp. 176-183.) 108 540 T
([19]) 72 516 T
0.23 (D. Bonyun, \322The Role of a W) 108 516 P
0.23 (ell De\336ned Auditing Process in the Enforcement of Privacy) 252.33 516 P
0.76 (Policy and Data Security) 108 496 P
0.76 (,\323 ) 229.1 496 P
2 F
0.76 (Pr) 241.19 496 P
0.76 (oceedings of the 1981 Symposium on Security and Privacy) 252.74 496 P
0 F
(\050Apr) 108 476 T
(. 1981\051 pp. 19-25.) 129.98 476 T
([20]) 72 452 T
(J. Brunner) 108 452 T
(, ) 157.49 452 T
2 F
(The Shockwave Rider) 163.48 452 T
0 F
(, Ballantine Y) 266.92 452 T
(ork City) 332.68 452 T
(, NY \0501975\051.) 371.55 452 T
([21]) 72 428 T
0.15 (S. Bunch, \322The Setuid Feature in UNIX and Security) 108 428 P
0.15 (,\323 ) 363.59 428 P
2 F
0.15 (T) 375.07 428 P
0.15 (enth National Computer Security) 380.63 428 P
(Confer) 108 408 T
(ence Pr) 140.87 408 T
(oceedings) 177.39 408 T
0 F
( \050Sep. 1987\051 pp. 245-253.) 225.35 408 T
([22]) 72 384 T
(R. Bur) 108 384 T
(ger) 139.77 384 T
(, ) 154.61 384 T
2 F
(Computer V) 160.6 384 T
(iruses \320 A High-T) 218.02 384 T
(ech Disease) 302.53 384 T
0 F
(, Abacus, Grand Rapids, MI \0501988\051.) 360.15 384 T
([23]) 72 360 T
0.2 (L. Chen, \322Improving Software Reliability by N-V) 108 360 P
0.2 (ersion Programming,\323 T) 347.71 360 P
0.2 (echnical Report) 464.19 360 P
(Eng-7843, University of California, Los Angeles, CA \050Aug. 1978\051.) 108 340 T
([24]) 72 316 T
0.42 (D. Clark and D. W) 108 316 P
0.42 (ilson, \322A Comparison of Commercial and Military Computer Security) 199.81 316 P
1.09 (Policies,\323 ) 108 296 P
2 F
1.09 (Pr) 158.39 296 P
1.09 (oceedings of the 1987 Symposium on Security and Privacy) 169.94 296 P
0 F
1.09 ( \050Apr) 459.79 296 P
1.09 (. 1987\051 pp.) 485.86 296 P
(184-194.) 108 276 T
([25]) 72 252 T
-0.57 (F) 108 252 P
-0.57 (. Cohen, \322Computer V) 113.71 252 P
-0.57 (iruses: Theory and Experiments,\323 ) 219.55 252 P
2 F
-0.57 (Seventh DOD/NBS Computer Se-) 381.49 252 P
(curity Confer) 108 232 T
(ence Pr) 171.85 232 T
(oceedings) 208.37 232 T
0 F
( \050Sep. 1984\051 pp. 240-263.) 256.33 232 T
([26]) 72 208 T
1.56 (F) 108 208 P
1.56 (. Cohen, \322Computer V) 113.71 208 P
1.56 (iruses: Theory and Experiments,\323 ) 225.94 208 P
2 F
1.56 (Computers) 396.4 208 P
0 F
1.56 ( ) 449.04 208 P
2 F
1.56 (and Security) 453.6 208 P
0 F
1.56 ( ) 515.46 208 P
3 F
1.56 (6) 520.02 208 P
0 F
1.56 (\0501\051) 526.02 208 P
(\050Feb. 1987\051 pp. 22-35.) 108 188 T
([27]) 72 164 T
-0.42 (F) 108 164 P
-0.42 (. Cohen, \322On the Implications of Computer V) 113.71 164 P
-0.42 (iruses and Methods of Defense,\323 ) 329.58 164 P
2 F
-0.42 (Computers) 487.36 164 P
(and Security) 108 144 T
0 F
( ) 168.29 144 T
3 F
(7) 171.29 144 T
0 F
(\0502\051 \050Apr) 177.29 144 T
(. 1988\051 pp. 167-184.) 216.25 144 T
([28]) 72 120 T
1.03 (F) 108 120 P
1.03 (. Cohen, \322Maintaining a Poor Person\325) 113.71 120 P
1.03 (s Information Integrity) 299.1 120 P
1.03 (,\323 ) 409.65 120 P
2 F
1.03 (Computers and Security) 422 120 P
3 F
(7) 108 100 T
0 F
(\0505\051 \050Oct. 1988\051 pp. 489-494.) 114 100 T
([29]) 72 76 T
0.83 (F) 108 76 P
0.83 (. Cohen, \322Practical Defenses Against Computer V) 113.71 76 P
0.83 (iruses,\323 ) 358.47 76 P
2 F
0.83 (Computers and Security) 398.6 76 P
0 F
0.83 ( ) 516.19 76 P
3 F
0.83 (8) 520.02 76 P
0 F
0.83 (\0502\051) 526.02 76 P
FMENDPAGE
%%EndPage: "19" 20
%%Page: "20" 20
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 20 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
(\050Apr) 108 712 T
(. 1989\051 pp. 149-160.) 129.98 712 T
([30]) 72 688 T
1.23 (F) 108 688 P
1.23 (. Cohen, \322Computational Aspects of Computer V) 113.71 688 P
1.23 (iruses,\323 ) 356.88 688 P
2 F
1.23 (Computers and Security) 397.41 688 P
0 F
1.23 ( ) 515.79 688 P
3 F
1.23 (8) 520.02 688 P
0 F
1.23 (\0504\051) 526.02 688 P
(\050June 1989\051 pp. 325-344.) 108 668 T
([31]) 72 644 T
(F) 108 644 T
(. Cohen, ) 113.71 644 T
2 F
(A Short Course on Computer V) 157.02 644 T
(iruses) 306.38 644 T
0 F
(, ASP Press, Pittsbur) 335.04 644 T
(gh, P) 434.45 644 T
(A \0501990\051.) 458 644 T
([32]) 72 620 T
0.05 (S. Crocker and M. Pozzo, \322A Proposal for a V) 108 620 P
0.05 (eri\336cation-Based V) 329.64 620 P
0.05 (irus Filter) 422.57 620 P
0.05 (,\323 ) 469.11 620 P
2 F
0.05 (Pr) 480.49 620 P
0.05 (oceedings) 492.04 620 P
(of the 1989 IEEE Symposium on Security and Privacy) 108 600 T
0 F
( \050May 1989\051 pp. 319-324.) 367.15 600 T
([33]) 72 576 T
0.04 (D. Curry) 108 576 P
0.04 (, \322Improving the Security of Y) 149.9 576 P
0.04 (our UNIX System,\323 T) 296.14 576 P
0.04 (echnical Report ITSTD-721-) 401.36 576 P
(FR-90-91, SRI International, Menlo Park, CA 94025 \050Apr) 108 556 T
(. 1990\051.) 386.5 556 T
([34]) 72 532 T
(J. David, \322T) 108 532 T
(reating V) 166.2 532 T
(iral Fever\323 ) 210.45 532 T
2 F
(Computers and Security) 265.07 532 T
0 F
( ) 380.99 532 T
3 F
(7) 383.99 532 T
0 F
(\0502\051 \050Apr) 389.99 532 T
(. 1988\051 pp. 255-258.) 428.96 532 T
([35]) 72 508 T
0.21 (G. Davida, Y) 108 508 P
0.21 (. Desmedt, and B. Matt, \322Defending Systems Against V) 170.83 508 P
0.21 (iruses through Cryp-) 440.3 508 P
0.84 (tographic Authentication,\323 ) 108 488 P
2 F
0.84 (Pr) 240.59 488 P
0.84 (oceedings of the 1989 Symposium on Security and Privacy) 252.14 488 P
0 F
(\050May 1989\051 pp. 312-318.) 108 468 T
([36]) 72 444 T
0.1 (G. Davida and B. Matt, \322UNIX Guardians: Delegating Security to the User) 108 444 P
0.1 (,\323 ) 469.06 444 P
2 F
0.1 (Pr) 480.49 444 P
0.1 (oceedings) 492.04 444 P
(of the UNIX Security W) 108 424 T
(orkshop) 220.15 424 T
0 F
( \050Aug. 1988\051 pp. 14-23.) 258.79 424 T
([37]) 72 400 T
0.17 (H. DeMaio, \322V) 108 400 P
0.17 (iruses \320 Management Issue,\323 ) 181.56 400 P
2 F
0.17 (Computers and Security) 323.8 400 P
0 F
0.17 ( ) 440.06 400 P
3 F
0.17 (8) 443.23 400 P
0 F
0.17 (\0505\051 \050Oct. 1989\051 pp.) 449.23 400 P
(381-388.) 108 380 T
([38]) 72 356 T
-0.66 (D. Denning, \322An Intrusion-Detection Model,\323 ) 108 356 P
2 F
-0.66 (IEEE) 329.2 356 P
0 F
-0.66 ( ) 355.18 356 P
2 F
-0.66 (T) 357.51 356 P
-0.66 (ransactions on Softwar) 363.52 356 P
-0.66 (e Engineering) 473.04 356 P
3 F
(SE-13) 108 336 T
0 F
(\0502\051 \050Feb. 1987\051 pp. 222-232.) 138.65 336 T
([39]) 72 312 T
1.53 (P) 108 312 P
1.53 (. Denning, \322The Science of Computing: Computer V) 113.34 312 P
1.53 (iruses,\323 ) 376.85 312 P
2 F
1.53 (American Scientist) 417.68 312 P
0 F
1.53 ( ) 509.49 312 P
3 F
1.53 (76) 514.02 312 P
0 F
1.53 (\0503\051) 526.02 312 P
(\050May 1988\051 pp. 236-238.) 108 292 T
([40]) 72 268 T
1.69 (P) 108 268 P
1.69 (. Denning, ) 113.34 268 P
2 F
1.69 (Computers Under Attack: Intruders, W) 170.02 268 P
1.69 (orms, and V) 363.22 268 P
1.69 (iruses) 424.01 268 P
0 F
1.69 (, Addison-W) 452.66 268 P
1.69 (esley) 515.35 268 P
(Publishing Co., Reading, MA \0501990\051,) 108 248 T
([41]) 72 224 T
-0.41 (A. Dewdeney) 108 224 P
-0.41 (, \322Computer Recreations: A Core W) 172.75 224 P
-0.41 (ar Bestiary of V) 344.29 224 P
-0.41 (iruses, W) 419.28 224 P
-0.41 (orms, and Other) 463.21 224 P
(Threats to Computer Memories,\323 ) 108 204 T
2 F
(Scienti\336c American) 270.22 204 T
0 F
( ) 363.82 204 T
3 F
(252) 366.82 204 T
0 F
(\0503\051 \050Mar) 384.81 204 T
(. 1985\051 pp. 14-23.) 425.11 204 T
([42]) 72 180 T
(A. Dewdeny) 108 180 T
(, \322Computer Recreations,\323 ) 167.84 180 T
2 F
(Scienti\336c American) 298.07 180 T
0 F
( ) 391.67 180 T
3 F
(256) 394.67 180 T
0 F
(\0501\051 \050Jan. 1987\051 pp. 14-20.) 412.66 180 T
([43]) 72 156 T
2 F
1.58 (T) 108 156 P
1.58 (rusted Computer System Evaluation Criteria) 114.01 156 P
0 F
1.58 (, DOD 5200.28-STD, Department of De-) 334.89 156 P
(fense \050Dec. 1985\051.) 108 136 T
([44]) 72 112 T
-0.26 (D. Downs, J. Rub, K. Kung, and C. Jordan, \322Issues in Discretionary Access Control,\323 ) 108 112 P
2 F
-0.26 (Pr) 518.46 112 P
-0.26 (o-) 530.01 112 P
(ceedings of the 1984 IEEE Symposium on Security and Privacy) 108 92 T
0 F
( \050Apr) 412.12 92 T
(. 1984\051 pp. 208-218.) 437.1 92 T
FMENDPAGE
%%EndPage: "20" 21
%%Page: "21" 21
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 21 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
([45]) 72 712 T
0.5 (T) 108 712 P
0.5 (. Duf) 114.44 712 P
0.5 (f, \322Experiences with V) 139.37 712 P
0.5 (iruses on UNIX Systems,\323 ) 250.04 712 P
2 F
0.5 (Computing Systems) 382.27 712 P
0 F
0.5 ( ) 477.05 712 P
3 F
0.5 (2) 480.54 712 P
0 F
0.5 (\0502\051 \050Spring) 486.54 712 P
(1989\051 pp. 155-172.) 108 692 T
([46]) 72 668 T
-0.33 (M. Eichin and J. Rochlis, \322W) 108 668 P
-0.33 (ith Microscope and T) 247.11 668 P
-0.33 (weezers: An Analysis of the Internet V) 348.2 668 P
-0.33 (i-) 532.67 668 P
-0.71 (rus of November 1988,\323 ) 108 648 P
2 F
-0.71 (Pr) 224.73 648 P
-0.71 (oceedings of the 1989 IEEE Symposium on Security and Privacy) 236.28 648 P
0 F
(\050Apr) 108 628 T
(. 1989\051 pp. 326-343.) 129.98 628 T
([47]) 72 604 T
-0.36 (T) 108 604 P
-0.36 (. Eisenber) 114.44 604 P
-0.36 (g, D. Gries, J. Hartmanis, D. Holcomb, M. L) 161.82 604 P
-0.36 (ynn, and T) 372.8 604 P
-0.36 (. Santoro, ) 422.82 604 P
2 F
-0.36 (The Computer) 471.4 604 P
-0.25 (W) 108 584 P
-0.25 (orm: A Report to the Pr) 116.89 584 P
-0.25 (ovost of Cornell University on an Investigation Conducted by the) 229.45 584 P
(Commission of Pr) 108 564 T
(eliminary Enquiry) 194.18 564 T
0 F
(, Cornell University) 281.02 564 T
(, Ithaca, NY \050Feb. 1989\051.) 375.85 564 T
([48]) 72 540 T
0.17 (P) 108 540 P
0.17 (. Elmer) 113.34 540 P
0.17 (-DeW) 148.58 540 P
0.17 (itt, \322Invasion of the Data Snatchers: A V) 177.4 540 P
0.17 (irus Epidemic Strikes T) 373.08 540 P
0.17 (error in the) 486.37 540 P
(Computer W) 108 520 T
(orld,\323 ) 169.33 520 T
2 F
(T) 199.98 520 T
(ime) 205.99 520 T
0 F
( \050Sep. 26, 1988\051 pp. 62-67.) 223.3 520 T
([49]) 72 496 T
0.71 (V) 108 496 P
0.71 (. F\214k, \322Are W) 115.11 496 P
0.71 (e V) 183.89 496 P
0.71 (ulnerable to a V) 200.86 496 P
0.71 (irus Attack: A Report from Sweden,\323 ) 279.2 496 P
2 F
0.71 (Computers and) 465.66 496 P
(Security) 108 476 T
0 F
( ) 147.3 476 T
3 F
(7) 150.3 476 T
0 F
(\0502\051 \050Apr) 156.3 476 T
(. 1988\051 pp. 151-155.) 195.26 476 T
([50]) 72 452 T
(R. Farrow) 108 452 T
(, ) 155.85 452 T
2 F
(UNIX System Security) 161.85 452 T
0 F
(, Addison-W) 267.66 452 T
(esley Publishing Co., Reading, MA \0501991\051.) 328.65 452 T
([51]) 72 428 T
0.88 (P) 108 428 P
0.88 (. Fites, P) 113.34 428 P
0.88 (. Johnston, and M. Kratz, ) 155.76 428 P
2 F
0.88 (The Computer V) 284.41 428 P
0.88 (irus Crisis) 364.57 428 P
0 F
0.88 (, V) 415.77 428 P
0.88 (an Nostrand Reinhold,) 429.98 428 P
(New Y) 108 408 T
(ork City) 141.1 408 T
(, NY \0501988\051.) 179.97 408 T
([52]) 72 384 T
-0.55 (M. Gabriele, \322\322Smart\323 T) 108 384 P
-0.55 (erminals for T) 224.42 384 P
-0.55 (rusted Computer Systems,\323 ) 291.52 384 P
2 F
-0.55 (Ninth National Comput-) 424.47 384 P
(er Security Confer) 108 364 T
(ence Pr) 196.16 364 T
(oceedings) 232.68 364 T
0 F
( \050Sep. 1986\051 pp. 16-20.) 280.64 364 T
([53]) 72 340 T
(S. Gar\336nkel and G. Spaf) 108 340 T
(ford, ) 225.7 340 T
2 F
(Practical UNIX Security) 251.68 340 T
0 F
(, O\325Reilly and Associates \0501991\051.) 368.82 340 T
([54]) 72 316 T
2.15 (P) 108 316 P
2.15 (. Garnett, \322Selective Disassembly: A First Step T) 113.34 316 P
2.15 (owards Developing a V) 363.73 316 P
2.15 (irus Filter) 483.03 316 P
2.15 (,\323) 531.68 316 P
2 F
(Fourth Aer) 108 296 T
(ospace Computer Security Confer) 161.19 296 T
(ence) 323.64 296 T
0 F
( \050Dec. 1988\051 pp. 2-6.) 345.61 296 T
([55]) 72 272 T
(M. Gemignani, \322V) 108 272 T
(iruses and Criminal Law) 197.22 272 T
(,\323 C) 314.69 272 T
2 F
(ACM) 334.02 272 T
0 F
( ) 359.33 272 T
3 F
(32) 362.33 272 T
0 F
(\0506\051 \050June 1989\051 pp. 669-671.) 374.33 272 T
([56]) 72 248 T
0.6 (W) 108 248 P
0.6 (. Gleissner) 118.22 248 P
0.6 (, \322A Mathematical Theory for the Spread of Computer V) 169.64 248 P
0.6 (iruses,\323 ) 447.46 248 P
2 F
0.6 (Computers) 487.36 248 P
(and Security) 108 228 T
0 F
( ) 168.29 228 T
3 F
(8) 171.29 228 T
0 F
(\0501\051 \050Feb. 1989\051 pp. 35-41.) 177.29 228 T
([57]) 72 204 T
0.35 (V) 108 204 P
0.35 (. Gligor) 115.11 204 P
0.35 (, C. Chandersekaran, R. Chapman, L. Dotterer) 152.29 204 P
0.35 (, M. Hecht, W) 376.42 204 P
0.35 (. Jiang, A. Johri, G.) 444.99 204 P
1.1 (Luckenbaugh, and N. V) 108 184 P
1.1 (asudevan,) 224.88 184 P
2 F
1.1 ( ) 272.5 184 P
0 F
1.1 (\322Design and Implementation of Secure Xenix,\323 ) 276.6 184 P
2 F
1.1 (IEEE) 514.02 184 P
(T) 108 164 T
(ransactions on Softwar) 114.01 164 T
(e Engineering) 224.85 164 T
0 F
( ) 292.47 164 T
3 F
(SE-13) 295.47 164 T
0 F
(\0502\051 \050Feb. 1987\051 pp. 208-220.) 326.12 164 T
([58]) 72 140 T
0.86 (F) 108 140 P
0.86 (. Grampp and R. Morris, \322UNIX Operating System Security) 113.71 140 P
0.86 (,\323 ) 408.59 140 P
2 F
0.86 (A) 420.77 140 P
0.86 (T&T Bell Laboratories) 427.66 140 P
(T) 108 120 T
(echnical Journal ) 113.57 120 T
3 F
(63) 197.51 120 T
0 F
(\0508\051 \050Oct. 1984\051 pp. 1649-1672.) 209.5 120 T
([59]) 72 96 T
-0.38 (J. Green and P) 108 96 P
-0.38 (. Sisson, \322The \322Father Christmas\323 W) 175.48 96 P
-0.38 (orm,\323 ) 350.17 96 P
2 F
-0.38 (T) 380.44 96 P
-0.38 (welfth National Computer Secu-) 386.22 96 P
(rity Confer) 108 76 T
(ence Pr) 160.53 76 T
(oceedings) 197.05 76 T
0 F
( \050Oct. 1989\051pp. 359-368.) 245.01 76 T
FMENDPAGE
%%EndPage: "21" 22
%%Page: "22" 22
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 22 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
([60]) 72 712 T
(K. Hafner) 108 712 T
(, \322Is Y) 155.47 712 T
(our Computer Secure?,\323 ) 185.91 712 T
2 F
(Business W) 305.15 712 T
(eek) 359.01 712 T
0 F
( \050Aug. 1, 1987\051 pp. 64-72.) 374.98 712 T
([61]) 72 688 T
0.28 (J. Haigh and W) 108 688 P
0.28 (. Y) 182.35 688 P
0.28 (oung, \322Extending the Non-Interference V) 196.08 688 P
0.28 (ersion of MLS for SA) 395.37 688 P
0.28 (T) 500.42 688 P
0.28 (,\323 ) 506.86 688 P
2 F
0.28 (Pr) 518.46 688 P
0.28 (o-) 530.01 688 P
(ceedings of the 1986 IEEE Symposium on Security and Privacy) 108 668 T
0 F
( \050Apr) 412.12 668 T
(. 1986\051 pp. 232-239.) 437.1 668 T
([62]) 72 644 T
0.69 (H. Highland, \322Random Bits and Bytes: Case History of a V) 108 644 P
0.69 (irus Attack,\323 ) 400.02 644 P
2 F
0.69 (Computers and) 465.68 644 P
(Security) 108 624 T
0 F
( ) 147.3 624 T
3 F
(7) 150.3 624 T
0 F
(\0501\051 \050Feb. 1988\051 pp. 3-5.) 156.3 624 T
([63]) 72 600 T
0.69 (H. Highland, \322Random Bits and Bytes: Case History of a V) 108 600 P
0.69 (irus Attack,\323 ) 400.02 600 P
2 F
0.69 (Computers and) 465.68 600 P
(Security) 108 580 T
0 F
( ) 147.3 580 T
3 F
(7) 150.3 580 T
0 F
(\0501\051 \050Feb. 1988\051 pp. 6-7.) 156.3 580 T
([64]) 72 556 T
0.33 (H. Highland, \322Random Bits and Bytes: Computer V) 108 556 P
0.33 (iruses \320 A Post-Mortem,\323 ) 359.79 556 P
2 F
0.33 (Computers) 487.36 556 P
(and Security) 108 536 T
0 F
( ) 168.29 536 T
3 F
(7) 171.29 536 T
0 F
(\0502\051 \050Apr) 177.29 536 T
(. 1988\051 pp. 1) 216.25 536 T
(17-127.) 276.77 536 T
([65]) 72 512 T
1.12 (H., Highland, \322The Brain V) 108 512 P
1.12 (irus: Fact and Fantasy) 245.34 512 P
1.12 (,\323 ) 353.52 512 P
2 F
1.12 (Computers and Security) 365.96 512 P
0 F
1.12 ( ) 484.14 512 P
3 F
1.12 (7) 488.25 512 P
0 F
1.12 (\0504\051 \050Aug.) 494.25 512 P
(1988\051 pp. 367-370.) 108 492 T
([66]) 72 468 T
0.07 (H. Highland, \322Random Bits and Bytes: Another Poor Password Disaster) 108 468 P
0.07 (,\323 ) 454.92 468 P
2 F
0.07 (Computers and) 466.3 468 P
(Security) 108 448 T
0 F
( ) 147.3 448 T
3 F
(9) 150.3 448 T
0 F
(\0501\051 \050Feb. 1990\051 p. 10.) 156.3 448 T
([67]) 72 424 T
0.97 (L. Hof) 108 424 P
0.97 (fman, ) 140.73 424 P
2 F
0.97 (Rogue Pr) 172.35 424 P
0.97 (ograms: V) 218.51 424 P
0.97 (iruses, W) 268.89 424 P
0.97 (orms, and T) 313.4 424 P
0.97 (r) 372.33 424 P
0.97 (ojan Horses) 376.55 424 P
0 F
0.97 (, V) 435.82 424 P
0.97 (an Nostrand Rein-) 450.12 424 P
(hold, New Y) 108 404 T
(ork City) 168.42 404 T
(, NY \0501990\051.) 207.29 404 T
([68]) 72 380 T
(Homer) 108 380 T
(, ) 140.83 380 T
2 F
(The Odyssey) 146.82 380 T
(, ) 207.11 380 T
0 F
(Penguin Books, New Y) 213.11 380 T
(ork City) 325.18 380 T
(, NY \0501946\051.) 364.05 380 T
([69]) 72 356 T
0.13 (H. Israel, \322Computer V) 108 356 P
0.13 (iruses: Myth or Reality?,\323 ) 219.91 356 P
2 F
0.13 (T) 348.02 356 P
0.13 (enth National Computer Security Con-) 353.58 356 P
(fer) 108 336 T
(ence Pr) 120.88 336 T
(oceedings) 157.4 336 T
0 F
( \050Sep. 1987\051 pp. 226-230.) 205.36 336 T
([70]) 72 312 T
0.79 (M. Joseph, \322T) 108 312 P
0.79 (owards the Elimination of the Ef) 176.7 312 P
0.79 (fects of Malicious Logic: Fault T) 337.35 312 P
0.79 (olerance) 499.38 312 P
0.18 (Approaches,\323 ) 108 292 P
2 F
0.18 (T) 176.78 292 P
0.18 (enth National Computer Security Confer) 182.35 292 P
0.18 (ence Pr) 377.85 292 P
0.18 (oceedings) 414.55 292 P
0 F
0.18 ( \050Sep. 1987\051 pp.) 462.51 292 P
(238-244.) 108 272 T
([71]) 72 248 T
-0.18 (M. Joseph and A.) 108 248 P
-0.18 ( \371) 213.75 248 P
-0.18 (A) 198.56 248 P
-0.18 (vizienis, \322A Fault T) 206.33 248 P
-0.18 (olerant Approach to Computer V) 300.24 248 P
-0.18 (iruses,\323 ) 457.36 248 P
2 F
-0.18 (Pr) 496.49 248 P
-0.18 (oceed-) 508.04 248 P
(ings of the 1988 Symposium on Security and Privacy) 108 228 T
0 F
( \050Apr) 361.17 228 T
(. 1988\051 pp. 52-58.) 386.15 228 T
([72]) 72 204 T
-0.08 (J. Juni and R. Ponto, \322Computer) 108 204 P
-0.08 (-V) 262.62 204 P
-0.08 (irus Infection of a Medical Diagnostic Computer) 274.55 204 P
-0.08 (,\323 ) 507.43 204 P
2 F
-0.08 (New) 518.67 204 P
(England Journal of Medicine) 108 184 T
0 F
( ) 248.91 184 T
3 F
(320) 251.91 184 T
0 F
(\05012\051 \050Mar) 269.9 184 T
(. 12, 1989\051 pp. 81) 316.19 184 T
(1-812.) 400.7 184 T
([73]) 72 160 T
0.55 (P) 108 160 P
0.55 (. Kar) 113.34 160 P
0.55 (ger) 137.65 160 P
0.55 (, \322Limiting the Damage Potential of Discretionary T) 152.49 160 P
0.55 (rojan Horses,\323 ) 407.11 160 P
2 F
0.55 (Pr) 480.49 160 P
0.55 (oceedings) 492.04 160 P
(of the 1987 Symposium on Security and Privacy) 108 140 T
0 F
( \050Apr) 338.18 140 T
(. 1987\051 pp. 32-37.) 363.16 140 T
([74]) 72 116 T
-0.28 (P) 108 116 P
-0.28 (. Kar) 113.34 116 P
-0.28 (ger and R. Schell, \322MUL) 136.81 116 P
-0.28 (TICS Security Evaluation: V) 255.16 116 P
-0.28 (ulnerability Analysis,\323 T) 392.51 116 P
-0.28 (echni-) 510.03 116 P
0.69 (cal Report ESD-TR-74-193, Air Force Electronic Systems Division, Hanscom Air Force) 108 96 P
(Base, MA \0501974\051.) 108 76 T
FMENDPAGE
%%EndPage: "22" 23
%%Page: "23" 23
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 23 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
([75]) 72 712 T
0.27 (S. Kent and J. Linn, ) 108 712 P
2 F
0.27 (Privacy Enhancement for Internet Electr) 207.95 712 P
0.27 (onic Mail: Part II -- Certi\336-) 404.42 712 P
(cate-Based Key Management) 108 692 T
0 F
(, RFC 1) 248.55 692 T
(1) 285.77 692 T
(14 \050Aug. 1989\051.) 291.32 692 T
([76]) 72 668 T
-0.6 (B. Kernighan and T) 108 668 P
-0.6 (. Plauger) 200.57 668 P
-0.6 (, ) 242.12 668 P
2 F
-0.6 (The Elements of Pr) 247.51 668 P
-0.6 (ogramming Style) 337.54 668 P
0 F
-0.6 (, McGraw-Hill Book Co.,) 418.55 668 P
(New Y) 108 648 T
(ork City) 141.1 648 T
(, NY \0501974\051.) 179.97 648 T
([77]) 72 624 T
0.88 (J. Knight and N. Leveson, \322An Experimental Evaluation of the Assumption of Indepen-) 108 624 P
0.82 (dence in Multi-version Programming,\323 ) 108 604 P
2 F
0.82 (IEEE T) 300.81 604 P
0.82 (ransactions on Softwar) 336.61 604 P
0.82 (e Engineering) 449.09 604 P
0 F
0.82 ( ) 517.52 604 P
3 F
0.82 (SE-) 521.34 604 P
(12) 108 584 T
0 F
(\0501\051 \050Jan. 1986\051 pp. 96-109.) 119.99 584 T
([78]) 72 560 T
1.74 (J. Knight and N. Leveson, \322On N-version Programming,\323 ) 108 560 P
2 F
1.74 (Softwar) 401.71 560 P
1.74 (e) 438.59 560 P
0 F
1.74 ( ) 443.91 560 P
2 F
1.74 (Engineering Notes) 448.65 560 P
3 F
(15) 108 540 T
0 F
(\0501\051 \050Jan. 1990\051 pp. 24-35.) 119.99 540 T
([79]) 72 516 T
0.77 (S. Kramer) 108 516 P
0.77 (, \322Linus IV \320 An Experiment in Computer Security) 157.58 516 P
0.77 (,\323 ) 409.12 516 P
2 F
0.77 (Pr) 421.21 516 P
0.77 (oceedings of the 1984) 432.77 516 P
(Symposium on Security and Privacy) 108 496 T
0 F
( \050Apr) 281.21 496 T
(. 1984\051 pp. 24-31.) 306.19 496 T
([80]) 72 472 T
(S. Kurzban, \322V) 108 472 T
(iruses and W) 181.22 472 T
(orms -- What Can Y) 242.88 472 T
(ou Do?,\323 ) 339.61 472 T
2 F
(SIGSAC Review ) 385.9 472 T
3 F
(7) 466.51 472 T
0 F
(\0501\051 pp. 16-32.) 472.5 472 T
([81]) 72 448 T
-0.33 (N. Lai and T) 108 448 P
-0.33 (. Gray) 167.41 448 P
-0.33 (, \322Strengthening Discretionary Access Controls to Inhibit T) 196.28 448 P
-0.33 (rojan Horses) 479.38 448 P
0.46 (and Computer V) 108 428 P
0.46 (iruses,\323 ) 188.14 428 P
2 F
0.46 (1988 Summer USENIX Confer) 227.9 428 P
0.46 (ence Pr) 375.74 428 P
0.46 (oceedings) 412.72 428 P
0 F
0.46 ( \050June 1988\051 pp.) 460.68 428 P
(275-286.) 108 408 T
([82]) 72 384 T
-0.47 (B. Lampson, \322Hints for Computer System Design,\323 ) 108 384 P
2 F
-0.47 (IEEE Softwar) 355.2 384 P
-0.47 (e) 420.58 384 P
0 F
-0.47 ( ) 425.9 384 P
3 F
-0.47 (1) 428.43 384 P
0 F
-0.47 (\0501\051 \050Jan. 1984\051 pp. 1) 434.42 384 P
-0.47 (1-) 530.01 384 P
(28.) 108 364 T
([83]) 72 340 T
-0.38 (R. Levin, ) 108 340 P
2 F
-0.38 (Computer V) 155.22 340 P
-0.38 (irus Handbook) 212.26 340 P
0 F
-0.38 (, McGraw-Hill Book Co., New Y) 283.5 340 P
-0.38 (ork City) 440.97 340 P
-0.38 (, NY \0501990\051.) 479.47 340 P
([84]) 72 316 T
-0.38 (T) 108 316 P
-0.38 (. Levin, S. Padilla, and C. Irvine, \322A Formal Model for UNIX Setuid,\323 ) 114.44 316 P
2 F
-0.38 (Pr) 451.27 316 P
-0.38 (oceedings of the) 462.82 316 P
(1989 Symposium on Security and Privacy) 108 296 T
0 F
( \050May 1989\051 pp. 73-83.) 308.19 296 T
([85]) 72 272 T
1.89 (P) 108 272 P
1.89 (. Lewis, \322The Executive Computer: A V) 113.34 272 P
1.89 (irus Carries Fatal Complications,\323 ) 317.8 272 P
2 F
1.89 (New Y) 492.24 272 P
1.89 (ork) 524.01 272 P
(T) 108 252 T
(imes) 114.01 252 T
0 F
( \050June 26, 1988\051 p. C-1) 135.99 252 T
(1.) 246.48 252 T
([86]) 72 228 T
0.12 (J. Linn, ) 108 228 P
2 F
0.12 (Privacy Enhancement for Internet Electr) 147.55 228 P
0.12 (onic Mail: Part III \320 Algorithms, Modes,) 343.42 228 P
(and Identi\336ers) 108 208 T
0 F
(, RFC-1) 177.62 208 T
(1) 215.83 208 T
(15 \050Aug. 1989\051.) 221.39 208 T
([87]) 72 184 T
-0.23 (S. Lipner) 108 184 P
-0.23 (, \322Non-Discretionary Controls for Commercial Applications,\323 ) 151.93 184 P
2 F
-0.23 (Pr) 450.98 184 P
-0.23 (oceedings of the) 462.52 184 P
(1982 Symposium on Security and Privacy) 108 164 T
0 F
( \050Apr) 308.19 164 T
(. 1982\051 pp. 2-10.) 333.18 164 T
([88]) 72 140 T
-0.17 (T) 108 140 P
-0.17 (. Lunt and R. Jagannathan, \322A Prototype Real-T) 114.44 140 P
-0.17 (ime Intrusion-Detection Expert System,\323) 343.98 140 P
2 F
(Pr) 108 120 T
(oceedings of the 1988 Symposium on Security and Privacy) 119.55 120 T
0 F
( \050Apr) 400.69 120 T
(. 1988\051 pp. 59-66.) 425.67 120 T
([89]) 72 96 T
-0.29 (J. McAfee, \3224096 and 1260 V) 108 96 P
-0.29 (iruses \050PC\051,\323 ) 250.05 96 P
2 F
-0.29 (V) 314.43 96 P
-0.29 (irus-L Digest) 320.87 96 P
0 F
-0.29 ( ) 384.21 96 P
3 F
-0.29 (3) 386.92 96 P
0 F
-0.29 (\05027\051 \050Jan. 31, 1990\051, submitted) 392.92 96 P
(by A. Roberts.) 108 76 T
FMENDPAGE
%%EndPage: "23" 24
%%Page: "24" 24
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 24 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
([90]) 72 712 T
-0.47 (J. McAfee and C. Haynes, ) 108 712 P
2 F
-0.47 (Computer V) 234.88 712 P
-0.47 (iruses, W) 291.83 712 P
-0.47 (orms, Data Diddlers, Killer Pr) 334.89 712 P
-0.47 (ograms, and) 480.5 712 P
(Other Thr) 108 692 T
(eats to Y) 155.87 692 T
(our System) 196.08 692 T
0 F
(, St. Martin\325) 249.04 692 T
(s Press, New Y) 307.02 692 T
(ork City) 379.1 692 T
(, NY \0501989\051.) 417.97 692 T
([91]) 72 668 T
-0.7 (J. Markof) 108 668 P
-0.7 (f, \322\324V) 153.71 668 P
-0.7 (irus\325 in Military Computers Disrupts Systems Nationwide,\323 ) 180.26 668 P
2 F
-0.7 (New Y) 464.54 668 P
-0.7 (ork T) 493.72 668 P
-0.7 (imes) 518.02 668 P
0 F
(\050Nov) 108 648 T
(. 4, 1988\051 p. A-1.) 131.87 648 T
([92]) 72 624 T
(J. Markof) 108 624 T
(f, \322T) 154.41 624 T
(op-Secret, And V) 176.22 624 T
(ulnerable,\323 ) 259.77 624 T
2 F
(New Y) 315.71 624 T
(ork T) 345.6 624 T
(imes) 370.6 624 T
0 F
( \050Apr) 392.58 624 T
(. 25, 1988\051 p. A-1.) 417.56 624 T
([93]) 72 600 T
0.9 (J. Markof) 108 600 P
0.9 (f, \322Student Says Error in Experiment Jammed a Network of Computers,\323 ) 155.32 600 P
2 F
0.9 (New) 518.67 600 P
(Y) 108 580 T
(ork T) 113.57 580 T
(imes) 138.56 580 T
0 F
( \050Jan. 19, 1990\051 p. A-19.) 160.54 580 T
([94]) 72 556 T
(V) 108 556 T
(. McLellan, \322Computer Systems Under Siege,\323 ) 115.11 556 T
2 F
(New Y) 343.96 556 T
(ork T) 373.85 556 T
(imes) 398.84 556 T
0 F
( \050Jan. 31, 1989\051 p. C-3.) 420.82 556 T
([95]) 72 532 T
(R. Merkle, \322A Fast Software One W) 108 532 T
(ay Hash Function,\323 ) 282.24 532 T
2 F
(unpublished) 378.17 532 T
0 F
(.) 436.81 532 T
([96]) 72 508 T
0.04 (G. Miller) 108 508 P
0.04 (, S. Sutton, M. Matthews, J. Y) 152.2 508 P
0.04 (ip, and T) 297.05 508 P
0.04 (. Thomas, \322Integrity Mechanisms in a Se-) 339.22 508 P
0.47 (cure UNIX: GOULD UTX/32S,\323 ) 108 488 P
2 F
0.47 (AIAA/ASIS/DODCI Second Aer) 272.76 488 P
0.47 (ospace Computer Secu-) 425.14 488 P
(rity Confer) 108 468 T
(ence: A Collection of T) 160.53 468 T
(echnical Papers ) 270.69 468 T
0 F
(\050Dec. 1986\051 pp. 19-26.) 351.3 468 T
([97]) 72 444 T
0.14 (W) 108 444 P
0.14 (. Murray) 118.22 444 P
0.14 (, \322The Application of Epidemiology to Computer V) 159.54 444 P
0.14 (iruses,\323 ) 408.33 444 P
2 F
0.14 (Computers and Se-) 447.77 444 P
(curity) 108 424 T
0 F
( ) 135.98 424 T
3 F
(7) 138.98 424 T
0 F
(\0501\051 \050Feb. 1988\051 pp. 139-150.) 144.98 424 T
([98]) 72 400 T
0.76 (P) 108 400 P
0.76 (. Neumann and D. Parker) 113.34 400 P
0.76 (, \322A Summary of Computer Misuse T) 237.81 400 P
0.76 (echniques,\323 ) 423.1 400 P
2 F
0.76 (T) 483.14 400 P
0.76 (welfth Na-) 488.92 400 P
(tional Computer Security Confer) 108 380 T
(ence Pr) 265.14 380 T
(oceedings) 301.66 380 T
0 F
( \050Oct. 1989\051 pp. 396-407.) 349.62 380 T
([99]) 72 356 T
(A. Norman, ) 108 356 T
2 F
(Computer Insecurity) 167.96 356 T
0 F
(, Chapman and Hall, New Y) 266.11 356 T
(ork City) 401.14 356 T
(, NY \0501983\051.) 440.01 356 T
([100]) 72 332 T
1.14 (J. Page, \322An Assured Pipeline Integrity Scheme for V) 108 332 P
1.14 (irus Protection,\323 ) 374.87 332 P
2 F
1.14 (T) 458.77 332 P
1.14 (welfth National) 464.55 332 P
(Computer Security Confer) 108 312 T
(ence Pr) 234.15 312 T
(oceedings) 270.67 312 T
0 F
( \050Oct. 1989\051 pp. 369-377.) 318.63 312 T
([101]) 72 288 T
(D. Parker) 108 288 T
(, ) 153.48 288 T
2 F
(Crime by Computer) 159.48 288 T
0 F
(, Charles Scribner) 254.27 288 T
(\325) 340.98 288 T
(s Sons, New Y) 344.32 288 T
(ork City) 414.41 288 T
(, NY \0501976\051.) 453.28 288 T
([102]) 72 264 T
0.77 (J. Picciotto, \322The Design of an Ef) 108 264 P
0.77 (fective Auditing Subsystem,\323 ) 274.3 264 P
2 F
0.77 (Pr) 421.2 264 P
0.77 (oceedings of the 1987) 432.75 264 P
(Symposium on Security and Privacy) 108 244 T
0 F
( \050Apr) 281.21 244 T
(. 1987\051 pp. 13-22.) 306.19 244 T
([103]) 72 220 T
1.19 (G. Popek and B. W) 108 220 P
1.19 (alker) 205.07 220 P
1.19 (, ) 228.57 220 P
2 F
1.19 (The LOCUS Distributed System Ar) 235.75 220 P
1.19 (chitectur) 407.97 220 P
1.19 (e) 450.16 220 P
0 F
1.19 (, The MIT Press,) 455.49 220 P
(Cambridge, MA \0501985\051.) 108 200 T
([104]) 72 176 T
0.23 (M. Pozzo and T) 108 176 P
0.23 (. Gray) 184.42 176 P
0.23 (, \322A Model for the Containment of Computer V) 213.85 176 P
0.23 (iruses,\323 ) 444.5 176 P
2 F
0.23 (AIAA/ASIS/) 484.04 176 P
(DODCI Second Aer) 108 156 T
(ospace Computer Security Confer) 203.48 156 T
(ence) 365.93 156 T
0 F
( \050Dec. 1986\051 pp. 1) 387.9 156 T
(1-18.) 474.72 156 T
([105]) 72 132 T
0.61 (M. Pozzo and T) 108 132 P
0.61 (. Gray) 185.56 132 P
0.61 (, \322An Approach to Containing Computer V) 215.36 132 P
0.61 (iruses,\323 ) 425.85 132 P
2 F
0.61 (Computers and) 465.76 132 P
(Security) 108 112 T
0 F
( ) 147.3 112 T
3 F
(6) 150.3 112 T
0 F
(\0504\051 \050Aug. 1987\051 pp. 321-331.) 156.3 112 T
([106]) 72 88 T
1.08 (B. Randell, P) 108 88 P
1.08 (. Lee, and P) 172.81 88 P
1.08 (. T) 231.68 88 P
1.08 (releaven, \322Reliability Issues in Computing System Design,\323) 245.67 88 P
FMENDPAGE
%%EndPage: "24" 25
%%Page: "25" 25
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 25 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
2 F
0 X
(Computing Surveys) 108 712 T
0 F
( ) 201.61 712 T
3 F
(10) 204.61 712 T
0 F
(\0502\051 \050June 1978\051 pp. 167-196.) 216.6 712 T
([107]) 72 688 T
(D. Ritchie, \322Joy of Reproduction,\323 USENET newsgroup ) 108 688 T
2 F
(net.lang.c) 382.48 688 T
0 F
( \050Nov) 429.78 688 T
(. 4, 1982\051.) 456.65 688 T
([108]) 72 664 T
(R. Roberts, ) 108 664 T
2 F
(Computer V) 165.3 664 T
(iruses) 222.72 664 T
0 F
(, Compute! Books, Greensboro, NC \0501988\051.) 251.37 664 T
([109]) 72 640 T
0.81 (J. Rochlis and M. Eichin, \322W) 108 640 P
0.81 (ith Microscope and T) 252.84 640 P
0.81 (weezers: The W) 357.37 640 P
0.81 (orm from MIT\325) 435.96 640 P
0.81 (s Per-) 511.54 640 P
(spective,\323 ) 108 620 T
2 F
(CACM) 158.62 620 T
0 F
( ) 191.94 620 T
3 F
(32) 194.94 620 T
0 F
(\0506\051 \050June 1989\051 pp. 689-698.) 206.93 620 T
([1) 72 596 T
(10]) 81.55 596 T
0.44 (J. Saltzer and M. Schroeder) 108 596 P
0.44 (, \322The Protection of Information in Computer Systems,\323 ) 241.82 596 P
2 F
0.44 (Pr) 518.46 596 P
0.44 (o-) 530.01 596 P
(ceedings of the IEEE) 108 576 T
0 F
( ) 208.93 576 T
3 F
(63) 211.92 576 T
0 F
(\0509\051 \050Sep. 1975\051 pp. 1278-1308.) 223.92 576 T
([1) 72 552 T
(1) 81.55 552 T
(1]) 87.1 552 T
-0.5 (P) 108 552 P
-0.5 (. Samuelson, \322Can Hackers Be Sued for Damages Caused by Computer V) 113.34 552 P
-0.5 (iruses?,\323 ) 462.55 552 P
2 F
-0.5 (CACM) 506.68 552 P
3 F
(32) 108 532 T
0 F
(\0506\051 \050June 1989\051 pp. 666-669.) 119.99 532 T
([1) 72 508 T
(12]) 81.55 508 T
0.56 (O. Saydjari, J. Beckman, and J. Leaman, \322Locking Computers Securely) 108 508 P
0.56 (,\323 ) 456.35 508 P
2 F
0.56 (T) 468.23 508 P
0.56 (enth National) 473.8 508 P
(Computer Security Confer) 108 488 T
(ence Pr) 234.15 488 T
(oceedings) 270.67 488 T
0 F
( \050Sep. 1987\051 pp. 129-141.) 318.63 488 T
([1) 72 464 T
(13]) 81.55 464 T
-0.54 (O. Saydjari, J. Beckman, and J. Leaman, \322LOCK T) 108 464 P
-0.54 (rek: Navigating Uncharted Space,\323 ) 349.76 464 P
2 F
-0.54 (Pr) 518.46 464 P
-0.54 (o-) 530.01 464 P
(ceedings of the 1989 Symposium on Security and Privacy) 108 444 T
0 F
( \050May 1989\051 pp. 167-175.) 383.14 444 T
([1) 72 420 T
(14]) 81.55 420 T
0.77 (R. Schatz, \322New \324V) 108 420 P
0.77 (irus\325 Infects NASA Macintoshes,\323 ) 205.17 420 P
2 F
0.77 (W) 376.45 420 P
0.77 (ashington Post) 385.34 420 P
0 F
0.77 ( \050Apr) 457.75 420 P
0.77 (. 18, 1988\051,) 483.5 420 P
(W) 108 400 T
(ashington Business section, p. 25.) 118.36 400 T
([1) 72 376 T
(15]) 81.55 376 T
1.07 (J. Schoch and J. Hupp, \322The \322W) 108 376 P
1.07 (orm\323 Programs \320 Early Experiences with a Distributed) 269.69 376 P
(Computation,\323) 108 356 T
2 F
( CACM) 178.96 356 T
0 F
( ) 215.28 356 T
3 F
(25) 218.28 356 T
0 F
(\0503\051 \050Mar) 230.27 356 T
(. 1982\051 pp. 172-180.) 270.57 356 T
([1) 72 332 T
(16]) 81.55 332 T
-0.36 (P) 108 332 P
-0.36 (. Scott, \322Re: Faking Internet Mail [Re: RISKS-8.27],\323 ) 113.34 332 P
2 F
-0.36 (Forum on the Risks to the Public in) 372.29 332 P
(Computers and Related Systems) 108 312 T
0 F
( ) 262.23 312 T
3 F
(8) 265.23 312 T
0 F
(\05028\051 \050Feb. 19, 1989\051.) 271.23 312 T
([1) 72 288 T
(17]) 81.55 288 T
-0.03 (D. Seeley) 108 288 P
-0.03 (, \322Password Cracking: A Game of W) 153.82 288 P
-0.03 (its,\323 ) 331.33 288 P
2 F
-0.03 (CACM) 353.96 288 P
0 F
-0.03 ( ) 387.27 288 P
3 F
-0.03 (32) 390.24 288 P
0 F
-0.03 (\0506\051 \050June 1989\051 pp. 700-703.) 402.23 288 P
([1) 72 264 T
(18]) 81.55 264 T
-0.27 (D. Seeley) 108 264 P
-0.27 (, \322A T) 153.58 264 P
-0.27 (our of the W) 182.52 264 P
-0.27 (orm,\323 ) 241.71 264 P
2 F
-0.27 (Pr) 272.09 264 P
-0.27 (oceedings of USENIX W) 283.64 264 P
-0.27 (inter \32489) 399.76 264 P
0 F
-0.27 ( \050Jan. 1989\051 pp. 287-) 441.14 264 P
(304.) 108 244 T
([1) 72 220 T
(19]) 81.55 220 T
0.47 (P) 108 220 P
0.47 (. Singer) 113.34 220 P
0.47 (, \322T) 150.64 220 P
0.47 (rying to Put a Brake on Computer Theft,\323 ) 169.35 220 P
2 F
0.47 (New Y) 376.01 220 P
0.47 (ork T) 406.37 220 P
0.47 (imes) 431.84 220 P
0 F
0.47 ( \050Mar) 453.83 220 P
0.47 (. 2, 1986\051 p.) 480.61 220 P
(WC-17.) 108 200 T
([120]) 72 176 T
(K. Smith, \322T) 108 176 T
(ales of the Damned,\323 ) 169.13 176 T
2 F
(UNIX Review) 273.38 176 T
0 F
( ) 338.99 176 T
3 F
(6) 341.99 176 T
0 F
(\0502\051 \050Feb. 1988\051 pp. 45-50.) 347.99 176 T
([121]) 72 152 T
0.04 (T) 108 152 P
0.04 (. Smith, \322User De\336nable Domains as a Mechanism for Implementing the Least Privilege) 114.44 152 P
1.68 (Principle,\323 ) 108 132 P
2 F
1.68 (Ninth National Computer Security Confer) 164.31 132 P
1.68 (ence Pr) 371.84 132 P
1.68 (oceedings) 410.04 132 P
0 F
1.68 ( \050Sep. 1986\051 pp.) 458 132 P
(143-148.) 108 112 T
([122]) 72 88 T
(E. Spaf) 108 88 T
(ford, \322Crisis and Aftermath,\323 ) 143.09 88 T
2 F
(CACM) 286.32 88 T
0 F
( ) 319.64 88 T
3 F
(32) 322.63 88 T
0 F
(\0506\051 \050June 1989\051 pp. 678-687.) 334.63 88 T
FMENDPAGE
%%EndPage: "25" 26
%%Page: "26" 26
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 26 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
([123]) 72 712 T
1.11 (E. Spaf) 108 712 P
1.11 (ford, \322The Internet W) 144.21 712 P
1.11 (orm Program: An Analysis,\323 ) 251.16 712 P
2 F
1.11 (ACM Computer Communica-) 396.52 712 P
(tions Review ) 108 692 T
3 F
(19) 171.96 692 T
0 F
(\0501\051 \050Jan. 1989\051.) 183.95 692 T
([124]) 72 668 T
-0.67 (E. Spaf) 108 668 P
-0.67 (ford, K. Heaphy) 142.42 668 P
-0.67 (, and D. Ferbrache, ) 218.24 668 P
2 F
-0.67 (Computer V) 310.48 668 P
-0.67 (iruses: Dealing with Electr) 367.22 668 P
-0.67 (onic V) 495.03 668 P
-0.67 (an-) 524.01 668 P
(dalism and Pr) 108 648 T
(ogrammed Thr) 175.52 648 T
(eats) 246.7 648 T
0 F
(, ADAPSO, Arlington, V) 266.02 648 T
(A \0501989\051.) 385.74 648 T
([125]) 72 624 T
-0.74 (C. Stoll, \322An Epidemiology of V) 108 624 P
-0.74 (iruses & Network W) 261.84 624 P
-0.74 (orms,\323 ) 358.26 624 P
2 F
-0.74 (T) 392.83 624 P
-0.74 (welfth National Computer Se-) 398.62 624 P
(curity Confer) 108 604 T
(ence Pr) 171.85 604 T
(oceedings) 208.37 604 T
0 F
( \050Oct. 1989\051pp. 369-377.) 256.33 604 T
([126]) 72 580 T
-0.04 (H. T) 108 580 P
-0.04 (eng, K. Chen, and S. Lu, \322Adaptive Real-T) 129.11 580 P
-0.04 (ime Anomaly Detection Using Inductively) 335.61 580 P
-0.19 (Generated Sequential Patterns,\323 ) 108 560 P
2 F
-0.19 (Pr) 263.3 560 P
-0.19 (oceedings of the 1990 Symposium on Resear) 274.85 560 P
-0.19 (ch in Secu-) 487.1 560 P
(rity and Privacy) 108 540 T
0 F
( \050May 1990\051 pp. 278-284.) 185.95 540 T
([127]) 72 516 T
0.37 (K. Thompson, \322Re\337ections on T) 108 516 P
0.37 (rusting T) 265.64 516 P
0.37 (rust,\323 ) 309.24 516 P
2 F
0.37 (Communications of the ACM) 338.93 516 P
0 F
0.37 ( ) 479.64 516 P
3 F
0.37 (27) 483.01 516 P
0 F
0.37 (\0508\051 \050Aug.) 495 516 P
(1984\051 pp. 761-763.) 108 496 T
([128]) 72 472 T
(M. T) 108 472 T
(odd, \322Man Catches Computer V) 131.15 472 T
(irus!,\323 ) 285.32 472 T
2 F
(W) 318.63 472 T
(eekly W) 327.52 472 T
(orld News) 364.04 472 T
0 F
( p. 29 \050June 18, 1991\051.) 413.02 472 T
([129]) 72 448 T
-0.13 (United States Comptroller General, \322Computer) 108 448 P
-0.13 (-Related Crimes in Federal Programs,\323 Re-) 333.44 448 P
0.61 (port FGMSD-76-27, United States Government Printing Of) 108 428 P
0.61 (\336ce, W) 397.61 428 P
0.61 (ashington, D. C. \050Apr) 431.9 428 P
0.61 (.) 537 428 P
(27, 1976\051.) 108 408 T
([130]) 72 384 T
2.01 (United States Congress Of) 108 384 P
2.01 (\336ce of T) 241.41 384 P
2.01 (echnology Assessment, ) 285.22 384 P
2 F
2.01 (Defending Secr) 404.84 384 P
2.01 (ets, Sharing) 480.68 384 P
-0.75 (Data: New Locks and Keys for Electr) 108 364 P
-0.75 (onic Information) 282.96 364 P
0 F
-0.75 (, Report OT) 363.17 364 P
-0.75 (A-CIT) 418.35 364 P
-0.75 (-310, United States) 449.22 364 P
(Government Printing Of) 108 344 T
(\336ce, W) 225.04 344 T
(ashington, D. C. \050Oct. 1987\051.) 258.72 344 T
([131]) 72 320 T
(V) 108 320 T
(ir) 115.94 320 T
(gil, ) 123.05 320 T
2 F
(The \256neid) 141.71 320 T
0 F
(, Random House, New Y) 194.02 320 T
(ork City) 313.4 320 T
(, NY \0501983\051.) 352.27 320 T
([132]) 72 296 T
-0.46 (C. von Rospach, \322How to Post a Fake,\323 ) 108 296 P
2 F
-0.46 (Forum on the Risks to the Public in Computers and) 297.24 296 P
(Related Systems) 108 276 T
0 F
( ) 185.61 276 T
3 F
(4) 188.61 276 T
0 F
(\05075\051 \050Apr) 194.6 276 T
(. 20, 1987\051.) 239.57 276 T
([133]) 72 252 T
0.04 (V) 108 252 P
0.04 (. V) 115.11 252 P
0.04 (oydock and S. Kent, \322Security Mechanisms in High-Level Network Protocols,\323 ) 128.26 252 P
2 F
0.04 (Com-) 513.35 252 P
(puting Surveys) 108 232 T
0 F
( ) 178.95 232 T
3 F
(15) 181.95 232 T
0 F
(\0502\051 \050June 1983\051 pp. 135-171.) 193.95 232 T
([134]) 72 208 T
1.58 (S. W) 108 208 P
1.58 (iseman, \322Preventing V) 133.09 208 P
1.58 (iruses in Computer Systems,\323 ) 244.45 208 P
2 F
1.58 (Computers and Security) 396.35 208 P
0 F
1.58 ( ) 515.44 208 P
3 F
1.58 (8) 520.02 208 P
0 F
1.58 (\0505\051) 526.02 208 P
(\050Aug. 1989\051 pp. 427-432.) 108 188 T
([135]) 72 164 T
-0.72 (I. W) 108 164 P
-0.72 (itten, \322Computer \050in\051security: In\336ltrating Open Systems,\323 ) 128.12 164 P
2 F
-0.72 (Abacus) 403.64 164 P
0 F
-0.72 ( ) 438.95 164 P
3 F
-0.72 (4) 441.23 164 P
0 F
-0.72 (\0504\051 \0501987\051 pp. 7-25.) 447.23 164 P
([136]) 72 140 T
-0.28 (P) 108 140 P
-0.28 (. W) 113.34 140 P
-0.28 (ood and S. Kochan, ) 129.41 140 P
2 F
-0.28 (UNIX\252 System Security) 225.55 140 P
0 F
-0.28 (, Hayden Books, Indianapolis, IN \0501985\051.) 342.55 140 P
([137]) 72 116 T
-0.22 (C. Y) 108 116 P
-0.22 (oung, \322T) 129.24 116 P
-0.22 (axonomy of Computer V) 170.81 116 P
-0.22 (irus Defense Mechanisms,\323 ) 289.69 116 P
2 F
-0.22 (T) 424.26 116 P
-0.22 (enth National Comput-) 429.82 116 P
(er Security Confer) 108 96 T
(ence Pr) 196.16 96 T
(oceedings) 232.68 96 T
0 F
( \050Sep. 1987\051 pp. 220-225.) 280.64 96 T
FMENDPAGE
%%EndPage: "26" 27
%%Page: "27" 27
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 27 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
3 F
0 X
(Sidebar 1 \320 The First T) 72 712 T
(r) 190.72 712 T
(ojan Horse ) 195.83 712 T
2 F
-0.34 (Ther) 108 688 P
-0.34 (e ar) 130.21 688 P
-0.34 (e many contradictory versions of this story; it appears only brie\337y in ) 148.41 688 P
0 F
-0.34 (The Odyssey) 477.39 688 P
2 F
0.91 (\050[68], Book VIII\051, but later writers elaborated it considerably) 72 668 P
0.91 (. Aeneas, a T) 374.42 668 P
0.91 (r) 438.77 668 P
0.91 (ojan survivor of the) 443 668 P
0.5 (sacking of the city) 72 648 P
0.5 (, told the following version to Queen Dido of Carthage during his wanderings) 159.79 648 P
(that ended with the founding of Rome \050[131], Book II\051.) 72 628 T
0 F
0.34 (After many years of besieging T) 108 604 P
0.34 (roy and failing to take the city) 264.85 604 P
0.34 (, the Greeks, on the advice) 410.71 604 P
-0.36 (of Athene, their patron goddess, built a lar) 72 584 P
-0.36 (ge wooden horse in which many Greek soldiers hid. The) 272.11 584 P
0.34 (horse was inscribed with a prayer to Athene to grant the Greeks safe passage home, and then the) 72 564 P
(Greek army left.) 72 544 T
-0.57 (The next morning, the T) 108 520 P
-0.57 (rojans discovered the siege had been lifted and went to examine the) 222.21 520 P
1.85 (wooden horse. One of the elders, Thymoetes, noticed the inscription, and ur) 72 500 P
1.85 (ged the horse be) 456.19 500 P
0.42 (brought into the city and placed in Athene\325) 72 480 P
0.42 (s temple. Others counseled that the horse must be de-) 280.44 480 P
-0.13 (stroyed; Laocoon, a priest of Apollo, threw a spear against the horse\325) 72 460 P
-0.13 (s belly as he cried that he did) 401.33 460 P
(not trust Greeks bearing gifts. ) 72 440 T
0.28 (Meanwhile, shepherds allied with the T) 108 416 P
0.28 (rojans brought over a Greek soldier named Sinon.) 298.86 416 P
0.41 (Sinon explained that the Greeks had desecrated Apollo\325) 72 396 P
0.41 (s shrine and killed a vir) 341.7 396 P
0.41 (gin attendant in a) 455.81 396 P
0.18 (raid, so to appease Apollo they had to sacri\336ce one of their men. Sinon was chosen. He promptly) 72 376 P
0.28 (\337ed and was abandoned when the Greeks left for home. As for the horse, Sinon claimed that one) 72 356 P
-0.03 (night Odysseus and Diomede desecrated Athene\325) 72 336 P
-0.03 (s shrine, turning their protecting goddess against) 307.33 336 P
0.12 (them. Calchas, the Greeks\325 priest, advised that the horse must be built to appease the goddess be-) 72 316 P
-0.15 (fore they could leave; and the horse was made so big to keep the T) 72 296 P
-0.15 (rojans from moving it into their) 389.18 296 P
(city) 72 276 T
(, for if they did their triumph over the Greeks would be assured. ) 89.21 276 T
0.11 (At that moment, two sea serpents slithered out of the waters and crushed Laocoon and his) 108 252 P
0.18 (sons to death. Believing this to be retribution for his profaning an of) 72 232 P
0.18 (fering to Athene, the T) 400.79 232 P
0.18 (rojans) 510.69 232 P
(immediately breached the walls of the city and pulled the horse inside. ) 72 212 T
0.79 (That night, as the T) 108 188 P
0.79 (rojans celebrated, they did not notice Sinon slip out to the horse and) 204.36 188 P
0.26 (open a trap door through which the Greek soldiers emer) 72 168 P
0.26 (ged, nor did they see the Greeks opening) 342.29 168 P
0.09 (the gates to the city) 72 148 P
0.09 (. The Greek forces had by this time returned, and they sacked the city) 164.85 148 P
0.09 (. Aeneas) 498.62 148 P
(and his companions alone escaped. ) 72 128 T
FMENDPAGE
%%EndPage: "27" 28
1 12 /Courier FMDEFINEFONT
4 12 /Courier-Bold FMDEFINEFONT
5 12 /Courier-Oblique FMDEFINEFONT
%%Page: "28" 28
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 28 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
3 F
0 X
(Sidebar 2 \320 Anatomy of a V) 72 712 T
(irus ) 213.47 712 T
0 F
(This pseudocode fragment shows how a very simple computer virus works:) 108 688 T
1 F
(beginvirus:) 72 664 T
4 F
(if) 90 650 T
1 F
( ) 104.39 650 T
5 F
(spread-condition) 111.59 650 T
1 F
( ) 226.73 650 T
4 F
(then begin) 233.92 650 T
(for) 108 636 T
1 F
( ) 129.59 636 T
5 F
(some set of target files) 136.78 636 T
1 F
( ) 309.49 636 T
4 F
(do begin) 316.68 636 T
(if) 126 622 T
1 F
( ) 140.39 622 T
5 F
(target is not infected) 147.59 622 T
1 F
( ) 305.9 622 T
4 F
(then begin) 313.1 622 T
5 F
(determine where to place virus instructions) 144 608 T
(copy instructions from) 144 594 T
1 F
( beginvirus) 302.31 594 T
5 F
( to) 381.47 594 T
1 F
( endvirus) 403.06 594 T
5 F
(into target) 162 580 T
(alter target to execute added instructions) 144 566 T
4 F
(end) 126 552 T
1 F
(;) 147.59 552 T
4 F
(end) 108 538 T
1 F
(;) 129.59 538 T
4 F
(end) 90 524 T
1 F
(;) 111.59 524 T
5 F
(perform some action) 90 510 T
4 F
(goto) 90 496 T
1 F
( ) 118.78 496 T
5 F
(beginning of infected program) 125.98 496 T
1 F
(endvirus:) 72 482 T
0 F
-0.2 (First, the virus determines if it is to spread; if so, it locates a set of tar) 108 450 P
-0.2 (get \336les it is to infect,) 437.05 450 P
-0.35 (and copies itself into a convenient location within the tar) 72 430 P
-0.35 (get \336le. It then alters portions of the tar) 340.8 430 P
-0.35 (get) 525.34 430 P
-0.47 (to ensure the inserted code will be executed at some time. For example, the virus may append itself) 72 410 P
0.13 (just beyond the end of the instruction space and then adjust the entry points used by the loader so) 72 390 P
0.34 (that the added instructions will execute when the tar) 72 370 P
0.34 (get program is next run. This is the ) 324.37 370 P
2 F
0.34 (infection) 498.02 370 P
0.72 (phase) 72 350 P
0 F
0.72 ( It then performs some other action \050the ) 99.98 350 P
2 F
0.72 (execution phase) 298.91 350 P
0 F
0.72 (\051. Finally) 376.57 350 P
0.72 (, it returns control to the) 420.48 350 P
0.73 (program currently being run. Note that the execution phase can be null and the instructions still) 72 330 P
(constitute a virus; but if the infection phase is missing, the instructions are ) 72 310 T
2 F
(not) 431.12 310 T
0 F
( a virus.) 446.45 310 T
-0.45 (The Lehigh virus [62] had as a ) 108 286 P
2 F
-0.45 (spr) 255.05 286 P
-0.45 (ead-condition) 269.93 286 P
0 F
-0.45 ( that \322there is an uninfected boot \336le on the) 336.55 286 P
0.16 (disk;\323 the ) 72 266 P
2 F
0.16 (set of tar) 121.63 266 P
0.16 (get \336les) 164.16 266 P
0 F
0.16 ( was \322the uninfected boot \336le,\323 and ) 201.3 266 P
2 F
0.16 (perform some action) 374.97 266 P
0 F
0.16 ( was to incre-) 474.57 266 P
(ment a counter and test to see if the counter had reached 4; if so, it would erase the disk. ) 72 246 T
FMENDPAGE
%%EndPage: "28" 29
%%Page: "29" 29
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 29 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
3 F
0 X
(Sidebar 3 \320 A Starting Point for Suggested Guidelines for UNIX-based Systems) 72 712 T
0 F
-0.6 (This list of suggestions, intended as a starting point for a basic, \322vanilla\323 UNIX-based com-) 108 688 P
-0.19 (puter system, may help prevent the introduction of malicious logic, like computer viruses, into the) 72 668 P
(computer system, and also lessen the chances of accidentally invoking programs with that type of) 72 648 T
0.51 (logic. Attackers can render these methods inef) 72 628 P
0.51 (fective because the weaknesses they seek to patch) 296.98 628 P
0.62 (are fundamental to the design and use of the computer system, and anything ef) 72 608 P
0.62 (fective would re-) 456.84 608 P
(quire changing the system more than is practical. Still, following these suggestions may help.) 72 588 T
(More details on UNIX security in general may be found in [33], [50], [53], and [136].) 108 564 T
(1.) 72 540 T
0.58 (Set the environment variables \050such as ) 97.2 540 P
3 F
0.58 (P) 288.52 540 P
0.58 (A) 294.96 540 P
0.58 (TH) 302.73 540 P
0 F
0.58 (\051 to access trusted programs before accessing) 320.06 540 P
(untrusted programs of the same name.) 97.2 526 T
-0.25 (The UNIX shell checks the value of the variable ) 108 508 P
3 F
-0.25 (P) 340.58 508 P
-0.25 (A) 347.02 508 P
-0.25 (TH) 354.79 508 P
0 F
-0.25 ( for a list of directories to check for) 372.12 508 P
-0.05 (programs. The system administrator had put the current working directory before the system) 97.2 494 P
-0.33 (directories in the example in \2446.1., Hence the user) 97.2 480 P
-0.33 (\325) 335.79 480 P
-0.33 (s directory listing program, not the system) 339.12 480 P
(one, was executed.) 97.2 466 T
(2.) 72 448 T
1.03 (Do not execute a program obtained from an untrusted source without checking the source) 97.2 448 P
(code thoroughly) 97.2 434 T
(.) 174.7 434 T
-0.61 (This rule presumes that the underlying computing base \050compiler) 108 416 P
-0.61 (, loader) 415.74 416 P
-0.61 (, operating system,) 450.61 416 P
0.51 (etc.\051 are all uncorrupted; if this assumption is false, malicious logic may be inserted during) 97.2 402 P
-0.02 (compilation, linking, or execution. An obvious corollary is to test all such software in an en-) 97.2 388 P
1.57 (vironment with very limited privileges before installing it, and ) 97.2 374 P
2 F
1.57 (never) 413.81 374 P
0 F
1.57 ( to test the program) 440.45 374 P
(where it can access critical or irreplaceable \336les, or as a highly-privileged user) 97.2 360 T
(.) 472.56 360 T
(3.) 72 342 T
-0.08 (Design and implement some auditing scheme to ensure that \336les\325 access control permissions) 97.2 342 P
(match the settings speci\336ed in an access control plan.) 97.2 328 T
0.33 (This requires \336rst, that some security policy designating who has access to what \336les and) 108 310 P
-0.6 (how be created; and second, that some enforcement mechanism be implemented. Note the ) 97.2 296 P
2 F
-0.6 (ca-) 524.68 296 P
0.81 (veat) 97.2 282 P
0 F
0.81 (: if the audit log created by that mechanism, or the mechanism itself, can be tampered) 117.18 282 P
-0.18 (with, the introduction of malicious logic into the system can be done undetectably) 97.2 268 P
-0.18 (. However) 487.71 268 P
-0.18 (,) 537 268 P
0.34 (depending on the security mechanisms implementing the auditing and the access to the log,) 97.2 254 P
(this may require some sophistication. \050Or) 97.2 240 T
(, it may not.\051) 295.26 240 T
(4.) 72 222 T
(Check the integrity of system \336les to ensure they have not changed unexpectedly) 97.2 222 T
(.) 484.82 222 T
0.02 (This is really a corollary to the previous rule. Note that the checksums computed at instal-) 108 204 P
-0.75 (lation must be protected, since an attacker could change a \336le, then compute its new checksum) 97.2 190 P
0.6 (and replace the stored checksum with it. Again, this requires that the underlying system be) 97.2 176 P
0.57 (trusted to provide such protection to the checksum program, the stored checksums, and the) 97.2 162 P
(audit program comparing the two.) 97.2 148 T
(5.) 72 130 T
(Backups should be made regularly and kept as long as reasonable.) 97.2 130 T
0.05 (T) 108 112 P
0.05 (ypically) 114.49 112 P
0.05 (, sites make both daily and weekly incremental backups \050which save all \336les that) 152.35 112 P
0.05 (have changed since the last incremental backup of the same period\051; then once a month they) 97.2 98 P
-0.15 (simply make a copy of all \336le systems. Enough of each kind is saved to be able to restore the) 97.2 84 P
FMENDPAGE
%%EndPage: "29" 30
%%Page: "30" 30
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 30 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
0.5 (system to its current state. Notice that if restoring to eliminate a malicious program, the re-) 97.2 712 P
(stored version of the program should also be ) 97.2 698 T
2 F
(thor) 313.72 698 T
(oughly) 333.27 698 T
0 F
( checked.) 365.91 698 T
(6.) 72 680 T
-0.46 (Discuss with your systems staf) 97.2 680 P
-0.46 (f and users the reasons for) 243.08 680 P
-0.46 (, and ef) 365.89 680 P
-0.46 (fects of, any actions taken for) 400.39 680 P
(security reasons.) 97.2 666 T
-0.18 (The system staf) 108 648 P
-0.18 (f should cultivate good relations with the users and vendors, should be cer-) 182.71 648 P
-0.18 (tain to explain the reasons for all security policies, and should assist users whenever possible) 97.2 634 P
0.23 (in providing a pleasant and secure working environment, acting as an intermediary between) 97.2 620 P
0.65 (them and the vendors if need be. Users and staf) 97.2 606 P
0.65 (f should know what constitutes a breach of) 329.96 606 P
-0.24 (security) 97.2 592 P
-0.24 (, and there should be a well-designed set of procedures for handling breaches. Think-) 134.39 592 P
-0.06 (ing through the best procedures for a particular installation carefully) 97.2 578 P
-0.06 (, putting them into place) 423.3 578 P
0.52 (tactfully) 97.2 564 P
0.52 (, and explaining them fully) 136.39 564 P
0.52 (, will do far more to prevent security problems than any) 267.3 564 P
(quick action.) 97.2 550 T
(7.) 72 532 T
0 (All installations should keep the original distribution of the computer system in a safe place,) 97.2 532 P
(and make and protect backups as well.) 97.2 518 T
1.77 (If malicious programs are determined to be rampant on the system, the administrators) 108 500 P
-0.54 (should reload the original compilation and installation software from the distribution medium) 97.2 486 P
0.2 (and recompile and regenerate all system \336les after checking all sources thoroughly) 97.2 472 P
0.2 (. This as-) 495.3 472 P
-0.1 (sumes that the \050distributed\051 compilation and installation software is not infected and the pro-) 97.2 458 P
-0.66 (gram loading that software does not infect it. As always, the elements of trust are present here.) 97.2 444 P
(8.) 72 426 T
-0.37 (When reading backups, mount the backup medium in such a way that it cannot be changed or) 97.2 426 P
(erased.) 97.2 412 T
0.05 (The reason is explained in the text. Note this means preventing modi\336cation access ) 108 394 P
2 F
0.05 (by the) 510.98 394 P
0.05 (har) 97.2 380 P
0.05 (dwar) 113.42 380 P
0.05 (e) 137.63 380 P
0 F
0.05 (, for example by removing the write ring from a tape. If the prevention mechanism) 142.96 380 P
-0.03 (is done in software, it can be infected and/or disabled by a malicious program. Here, the ele-) 97.2 366 P
(ment of trust is in the hardware mechanism working correctly) 97.2 352 T
(.) 392.54 352 T
(9.) 72 334 T
(Access privileged accounts only when necessary) 97.2 334 T
(, and then for as brief a time as possible.) 329.9 334 T
0.79 (Should someone using a privileged account accidentally execute a program containing a) 108 316 P
-0.34 (computer virus, the virus will spread throughout the system rapidly) 97.2 302 P
-0.34 (. This is less likely to hap-) 415.8 302 P
0.16 (pen if those accounts are used only when necessary; even so, a window of vulnerability still) 97.2 288 P
0.19 (exists. Computers designed with security in mind typically limit the power of privileged ac-) 97.2 274 P
(counts, in some cases very drastically) 97.2 260 T
(.) 276.96 260 T
(10.) 72 242 T
(W) 97.2 242 T
(rite as few privileged programs as possible.) 108.04 242 T
-0.39 (The more programs that can cross protection domain boundaries while executing, the more) 108 224 P
0.14 (potential tar) 97.2 210 P
0.14 (gets for the addition of malicious logic exist. This suggestion essentially recom-) 154.75 210 P
0.17 (mends minimizing the number of programs that can be modi\336ed to provide an attacker with) 97.2 196 P
(entry to the privileged state.) 97.2 182 T
(1) 72 164 T
(1.) 77.55 164 T
(Do not use a smart terminal to access a privileged account.) 97.2 164 T
(12.) 72 146 T
-0.22 (If a smart terminal must be used to access a privileged account, never allow an inter) 97.2 146 P
-0.22 (-terminal) 496.03 146 P
-0.27 (communications program to write to the terminal, never read electronic mail from that termi-) 97.2 132 P
(nal, and do not look at \336les the contents of which are unknown or suspect.) 97.2 118 T
0.47 (Note that the second version is much weaker) 108 100 P
0.47 (, because a malicious program could tamper) 325.66 100 P
-0.04 (with an executable program and cause it to display the control sequences to produce the req-) 97.2 86 P
FMENDPAGE
%%EndPage: "30" 31
%%Page: "31" 31
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 31 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
0 X
0.4 (uisite commands from the terminal. The privileged user executing such a command springs) 97.2 712 P
(the trap. Any \336le the malicious program could write to can be similarly booby-trapped.) 97.2 698 T
(13.) 72 680 T
( Prevent users from accessing devices and memory directly) 97.2 680 T
(.) 380.87 680 T
1.42 (If memory and devices are objects addressable by the user) 108 662 P
1.42 (, the access control plan de-) 399.7 662 P
-0.65 (scribed earlier should include these objects and prevent direct access to them. Speci\336cally) 97.2 648 P
-0.65 (, the) 519.99 648 P
-0.4 (device and memory \336les on UNIX systems should ) 97.2 634 P
2 F
-0.4 (never) 338.52 634 P
0 F
-0.4 ( have any ) 365.15 634 P
2 F
-0.4 (world) 412.92 634 P
0 F
-0.4 ( permissions set; this) 440.91 634 P
0.92 (gives users direct access to memory and to the raw device, and allows them to bypass the) 97.2 620 P
(UNIX access control mechanisms.) 97.2 606 T
FMENDPAGE
%%EndPage: "31" 32
%%Page: "32" 32
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(Page 32 of 32) 473.71 36 T
72 72 540 720 R
7 X
V
3 F
0 X
(Sidebar 4 \320 Forums that Discuss V) 72 712 T
(iruses ) 248.79 712 T
0 F
0.43 (The VIRUS-L mailing list, moderated by Kenneth R. van W) 108 688 P
0.43 (yk, is a forum for discussing) 401.28 688 P
-0.05 (all aspects of computer viruses, especially existing computer viruses and countermeasures as well) 72 668 P
(as theory) 72 648 T
(. T) 114.85 648 T
(o subscribe, send an electronic mail message containing only the line ) 127.34 648 T
(SUB VIRUS-L ) 242.21 624 T
2 F
(your name) 318.83 624 T
0 F
-0.58 (to ) 72 600 P
2 F
-0.58 (LISTSER) 83.75 600 P
-0.58 (V@LEHIIBM1.BITNET) 127.51 600 P
0 F
-0.58 (. Back issues of the digest are available by anonymous ftp from) 241.93 600 P
2 F
0.2 (IBM1.CC.LEHIGH.EDU) 72 580 P
0 F
0.2 ( or ) 192.92 580 P
2 F
0.2 (cert.sei.cmu.edu) 209.32 580 P
0 F
0.2 (; users not on the internet may send to the above ad-) 287.58 580 P
(dress) 72 560 T
2 F
( ) 96.65 560 T
0 F
(an electronic mail message containing only the line ) 99.64 560 T
(GET VIRUS-L LOG) 238.72 536 T
2 F
(yymmx) 339.98 536 T
0 F
0.44 (where ) 72 512 P
2 F
0.44 (yy) 104.74 512 P
0 F
0.44 ( is the last two digits of the year) 115.39 512 P
0.44 (, ) 271.67 512 P
2 F
0.44 (mm) 278.11 512 P
0 F
0.44 ( the number of the month, and ) 295.43 512 P
2 F
0.44 (x) 446.41 512 P
0 F
0.44 ( a letter indicating) 451.74 512 P
0.16 (the number of the week in the month. For example, LOG8901B refers to the digests issued in the) 72 492 P
(second week of January) 72 472 T
(, 1989. ) 186.12 472 T
0.41 (The mailing list V) 108 448 P
0.41 (ALER) 195.3 448 P
0.41 (T) 225.9 448 P
0.41 (-L is used ) 232.12 448 P
2 F
0.41 (only) 283.65 448 P
0 F
0.41 ( to announce viruses; any discussion is relegated) 304.3 448 P
(to VIRUS-L. T) 72 428 T
(o subscribe, send an electronic mail message containing only the line ) 144.12 428 T
(SUB V) 238.23 404 T
(ALER) 271.67 404 T
(T) 302.26 404 T
(-L ) 308.49 404 T
2 F
(your name) 322.81 404 T
0 F
(to the above address. Messages sent to V) 72 380 T
(ALER) 266.98 380 T
(T) 297.57 380 T
(-L appear in the next VIRUS-L digest as well. ) 303.8 380 T
0.21 (Peter Neumann of SRI International moderates the Forum on Risks to the Public in Com-) 108 356 P
-0.3 (puters and Related Systems, or RISKS, list. This mailing list focuses on the risks involved in com-) 72 336 P
0.43 (puter technology) 72 316 P
0.43 (, and has discussed implications of viruses, although with a thrust dif) 152.6 316 P
0.43 (ferent than) 487.95 316 P
1.32 (the VIRUS-L mailing list. T) 72 296 P
1.32 (o subscribe, if on the Internet, send an electronic mail message to) 212.04 296 P
2 F
0.43 (RISKS-r) 72 276 P
0.43 (equest@CSL.SRI.COM) 111.53 276 P
0 F
0.43 (; if on BITNET) 223.84 276 P
0.43 (, send an electronic mail message containing only) 298.52 276 P
(the line ) 72 256 T
(SUBSCRIBE MD4H ) 227.87 232 T
2 F
(your name) 333.17 232 T
0 F
(to ) 72 208 T
2 F
(LISTSER) 84.33 208 T
(V@CMUCCVMA.BITNET) 128.09 208 T
0 F
(, or ) 255.85 208 T
(SUBSCRIBE RISKS ) 227.87 184 T
2 F
(your name) 333.17 184 T
0 F
1.44 (to ) 72 160 P
2 F
1.44 (LISTSER) 85.77 160 P
1.44 (V@UGA.BITNET) 129.53 160 P
0 F
1.44 (, ) 214.64 160 P
2 F
1.44 (LISTSER) 222.08 160 P
1.44 (V@UBVM.BITNET) 265.84 160 P
0 F
1.44 (, or ) 359.6 160 P
2 F
1.44 (LISTSER) 381.47 160 P
1.44 (V@FINHUTC.BITNET) 425.23 160 P
0 F
1.44 (.) 537 160 P
1.78 (Back issues of the digest are available by anonymous ftp from ) 72 140 P
2 F
1.78 (crvax.sri.com) 393.09 140 P
0 F
1.78 ( in the directory) 458.37 140 P
-0.47 (\322RISKS:\323 and are named RISKS-) 72 120 P
2 F
-0.47 (v) 232 120 P
0 F
-0.47 (.) 236.54 120 P
2 F
-0.47 (nn) 239.54 120 P
0 F
-0.47 ( where ) 251.53 120 P
2 F
-0.47 (v) 285.89 120 P
0 F
-0.47 ( is the volume and ) 291.21 120 P
2 F
-0.47 (nn) 379.79 120 P
0 F
-0.47 ( the number within the volume.) 391.79 120 P
FMENDPAGE
%%EndPage: "32" 33
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 32 1
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Times-BoldItalic
%%+ Courier
%%+ Courier-Bold
%%+ Courier-Oblique
