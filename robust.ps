%!PS-Adobe-3.0
%%Title: (robust.doc)
%%Creator: (FrameMaker5: AdobePS 8.5.1)
%%CreationDate: (10:08 PM Wednesday, December 23, 1998)
%%For: (Matt Bishop)
%%Pages: 18
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Times-BoldItalic Courier Courier-Oblique ZapfDingbats
%%DocumentNeededResources: font Times-Roman Times-Bold Times-Italic Times-BoldItalic Courier Courier-Oblique ZapfDingbats
%%DocumentSuppliedResources:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%RBINumCopies: 1
%RBINupNess: 1 1
%ADO_ImageableArea: 12 12 600 780
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
userdict/dscInfo 5 dict dup begin
/Title(robust.doc)def
/Creator(FrameMaker5: AdobePS 8.5.1)def
/CreationDate(10:08 PM Wednesday, December 23, 1998)def
/For(Matt Bishop)def
/Pages 18 def
end put
%%BeginProlog
/md 245 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: lw8_feature-1.01
%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved.
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/Z{0 def}bd
/T true def
/F false def
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
F
}ifelse
def
/odictstk Z
/oopstk Z
/fcl
{
count oopstk sub dup 0 gt
{
{pop}repeat
}{
pop
}ifelse
countdictstack odictstk sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/sfcl2
{
/odictstk countdictstack store
count/oopstk xs
}bd
/efcl2
{
stopped{$error/newerror F put}if
fcl
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
/setcopies{
level2
{
1 dict begin/NumCopies exch def currentdict end setpagedevice
}{
userdict/#copies 3 -1 roll put
}ifelse
}def
level2 startnoload
/ststpgdev{}def
/dopgdev{}def
/stpgdev{}def
/buf Z
/didstop T def
/sfcl
{
/didstop T store
/odictstk countdictstack store
count/oopstk xs
currentfile cvx stopped
{
$error/newerror F put
didstop
{
save/didstop xs
/buf vmstatus exch sub exch pop dup 0 lt{pop 0}if
dup 64000 gt{pop 64000}if string store
{
currentfile buf readline
{
(}efcl)eq{exit}if
}{
/UnexpectedEOF errordict/rangecheck get exec
}ifelse
}loop
didstop restore
}if
}if
fcl
}bd
/efcl
{
/didstop F store
exec
stop
}bd
level2 endnoload level2 not startnoload
/setpagedevice where{pop/realstpgdev/setpagedevice ld}if
/SC_topddict Z
/SC_spdict Z
/$spusrdict F def
/dopgdev
{
userdict/setpagedevice undef
$spusrdict
{
userdict/setpagedevice/realstpgdev load put
/$spusrdict F store
}if
SC_topddict realstpgdev
}bd
/stpgdev
{
SC_topddict dup 3 -1 roll
{
SC_spdict 2 index known
{
SC_spdict 2 index get
dup 3 -1 roll
{
put dup
}forall
pop put dup
}{
put dup
}ifelse
}forall
pop pop
}bd
/ststpgdev
{
/setpagedevice where
{
userdict eq
{
/$spusrdict T store
}if
}if
userdict/setpagedevice/stpgdev load put
/SC_topddict 0 dict store
/SC_spdict 3 dict begin
/InputAttributes 0 dict def
/Policies 0 dict def
/OutputAttributes 0 dict def
currentdict
end
store
}def
/sfcl/sfcl2 ld
/efcl/efcl2 ld
level2 not endnoload
%%EndFile
%%BeginFile: lw8_basic-3.0
/xdf{exch def}bd
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
12{ld}repeat
/framewidth -1 def
/QDframwid -1 def
/numframes Z
/mTS matrix def
/$m matrix def
/av 86 def
/por T def
/normland F def
/psb-nosave{}def
/pse-nosave{}def
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level3
/languagelevel where
{
pop languagelevel 3 ge
}{
F
}ifelse
def
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/devg/DeviceGray def
/devr/DeviceRGB def
/devc/DeviceCMYK def
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/devg[/DeviceGray]def
/devr[/DeviceRGB]def
/devc[/DeviceCMYK]def
level2 not endnoload
/pm Z
/mT Z
/sD Z
/initializepage
{
mT $m currentmatrix mTS concatmatrix pop
/pm save store mT concat
}bd
/endp
{
pm restore
}bd
/adjRect
{
dup 2 mul 6 2 roll
4 index sub exch 5 -1 roll sub exch
4 2 roll
4 index add exch 5 -1 roll add exch
4 2 roll
}bd
/frame1up
{
gS
mTS setmatrix
QDframwid lw
/setstrokeadjust where{pop T setstrokeadjust}if
clippath pathbbox
2 index sub exch
3 index sub exch
currentlinewidth framewidth mul
adjRect
numframes dup 0 lt{pop 0}if
{
4 copy
rS
currentlinewidth framewidth
mul 4 mul
adjRect
}repeat
pop pop pop pop
gR
}bd
/$c devr def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
level3 startnoload
%%BeginFile: lw8_safeclipL12-1.0					
/rectclip where
{
pop/rCa/rectclip ld
}{
/rCa
{
np 0
1 index length 4 idiv
{
2 copy
4 getinterval
aload pop
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
4 add
}repeat
clip np
pop pop
}bd
}ifelse
/savedstack Z
/subsavedstack Z
/execstring Z
/saferCa
{
/execstring xs
/odictstk countdictstack store
/oopstk 0 store
count 0 ne
{
savedstack 0 eq{
count 100 gt{count}{100}ifelse
array/savedstack xs
}{
count savedstack length gt
{
count array/savedstack xs
}if
}ifelse
count savedstack 0 3 -1 roll
getinterval
astore/subsavedstack xs
}{
/subsavedstack 0 store
}ifelse
execstring cvx stopped
{
$error/newerror F put
newpath
}if
fcl
subsavedstack 0 ne{
subsavedstack aload pop
}if
}bd
%%EndFile
level3 endnoload level3 not startnoload
%%BeginFile: lw8_safeclipL3-1.0	
/saferCa/pop ld
%%EndFile
level3 not endnoload
%%BeginFile: lw8_level1_colorspace-2.0
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/$cs Z
/:rg{devr :ss}bd
/:sc{$cs :ss}bd
/:dc
{
dup type/arraytype eq{0 get}if
dup/DeviceCMYK eq
{
pop devc
}{
/DeviceGray eq
{
devg
}{
devr
}ifelse
}ifelse
/$cs xdf
}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
%%EndFile
level2 startnoload
%%BeginFile: lw8_level1_basicimages-2.1
/$i F def
/flipinvert
statusdict begin
version cvr 47.0 lt
end
def
/iw Z
/ih Z
/im_save Z
/setupimageproc Z
/polarity Z
/smoothflag Z
/$z Z
/bpc Z
/smooth_moredata Z
/datatype Z
/xtraData Z
/$zdump Z
/miascii
{
[
currentfile dup
$zdump
/readhexstring cvx
/pop cvx dup
$z
/readhexstring cvx
/pop cvx
]cvx bind
}bd
/mibinary
{
[
currentfile dup
$zdump
/readstring cvx
/pop cvx dup
$z
/readstring cvx
/pop cvx
]cvx bind
}bd
/:imsv{/im_save save store}bd
/:f
{
/xtraData xs
/datatype xs
$i flipinvert
and
xor
/polarity xs
/smoothflag xs
2 index 1 eq
{
dup aload pop
transform
round 0.5 sub exch
round 0.5 sub exch
itransform
7 -1 roll astore
}if
concat
xtraData
{
0 0 1 1
1 1 idtransform abs exch pop
add
rC
}if
/$z exch string store
/bpc xs
xtraData{4 add}if
/ih xs
/iw xs
datatype 13 ge
{
/$zdump iw 7 add 8 idiv string store
}if
/smoothflag
smoothflag
bpc 1 eq and
smoothflag and
userdict/sc_smooth known and
vmstatus pop exch pop iw 3 mul sub 1000 gt and
iw 4 mul 7 add 8 idiv 4 mul 65535 le and
store
smoothflag{
iw
ih
$z
iw 7 add 8 idiv 4 mul string
iw 4 mul 7 add 8 idiv 4 mul string
T
F
sc_initsmooth
/iw iw 4 mul store
/ih ih 4 mul store
}if
/setupimageproc
smoothflag{
{
[
/smooth_moredata cvx
datatype 13 lt{
[
currentfile
$z
{readstring readhexstring}datatype get
/pop cvx
]cvx
}{
{mibinary miascii}datatype 13 sub get exec
}ifelse
[
$z
]cvx/ifelse cvx
/sc_smooth cvx
/smooth_moredata/exch cvx/store cvx
]cvx bind
/smooth_moredata T store
dup exec pop dup exec pop
}
}{
{
datatype 13 lt
{
[
currentfile
$z
{readstring readhexstring}datatype get
/pop cvx
]cvx bind
}{
{mibinary miascii}datatype 13 sub get exec
}ifelse
}
}ifelse
store
}bd
/mkimgmtx
{
xtraData
{
smoothflag
{
[iw 0 0 ih 16 sub 0 8]
}{
[iw 0 0 ih 4 sub 0 2]
}ifelse
}{
[iw 0 0 ih 0 0]
}ifelse
}bd
/do1img
{
iw ih
polarity
mkimgmtx
setupimageproc
imagemask
}bd
/:j{im_save restore}bd
/:g
{
1 setgray
0
1 1 idtransform abs exch pop
1 1
rF
0 setgray
do1img
}bd
/:h
{
:Fx
0
1 1 idtransform abs exch pop
1 1
rF
:Fx
do1img
}bd
/:i
{
:Fx
do1img
}bd
/:hm/:h ld
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: lw8_level2_basicimage-2.1
/$j 10 dict dup
begin
/ImageType 1 def
/MultipleDataSource F def
end
def
/im_save Z
/setupimageproc Z
/polarity Z
/smoothflag Z
/bpc Z
/ih Z
/iw Z
/datatype Z
/xtraData Z
/$zdump Z
/$z Z
/binarydataproc
{
currentfile
}bd
/asciidataproc
{
currentfile 0(%ADOeod)/SubFileDecode filter/ASCIIHexDecode filter
}bd
/rledataproc
{
currentfile/RunLengthDecode filter
}bd
/rlea85dataproc
{
currentfile/ASCII85Decode filter/RunLengthDecode filter
}bd
level3 dup startnoload
/miascii
{
[
currentfile dup
$zdump
/readhexstring cvx
/pop cvx dup
$z
/readhexstring cvx
/pop cvx
]cvx bind
}bd
/mibinary
{
[
currentfile dup
$zdump
/readstring cvx
/pop cvx dup
$z
/readstring cvx
/pop cvx
]cvx bind
}bd
/mirle
{
[
currentfile/RunLengthDecode filter dup
$zdump
/readstring cvx
/pop cvx dup
$z
/readstring cvx
/pop cvx
]cvx bind
}bd
/mirlea85
{
[
currentfile/ASCII85Decode filter/RunLengthDecode filter dup
$zdump
/readstring cvx
/pop cvx dup
$z
/readstring cvx
/pop cvx
]cvx bind
}bd
dup endnoload not dup startnoload
/mibinary/binarydataproc ld
/miascii/asciidataproc ld
/mirle/rledataproc ld
/mirlea85/rlea85dataproc ld
endnoload
/:imsv{/im_save save store}bd
/:f
{
/xtraData xs
/datatype xs
/setupimageproc{
//binarydataproc
//asciidataproc
//rledataproc
//rlea85dataproc
{
currentfile/ASCII85Decode filter
}
{
currentfile/DCTDecode filter
}
{
currentfile/ASCII85Decode filter/DCTDecode filter
}
{
currentfile 4 dict dup begin/Columns iw def/Rows ih def/DamagedRowsBeforeError ih def/BlackIs1 T def end/CCITTFaxDecode filter
}
{
currentfile/ASCII85Decode filter 4 dict dup begin/Columns iw def/Rows ih def/DamagedRowsBeforeError ih def/BlackIs1 T def end/CCITTFaxDecode filter
}
{
currentfile 5 dict dup begin/K -1 def/Columns iw def/Rows ih def/DamagedRowsBeforeError ih def/BlackIs1 T def end/CCITTFaxDecode filter
}
{
currentfile/ASCII85Decode filter 5 dict dup begin/K -1 def/Columns iw def/Rows ih def/DamagedRowsBeforeError ih def/BlackIs1 T def end/CCITTFaxDecode filter
}
{
currentfile 5 dict dup begin/K 1 def/Columns iw def/Rows ih def/DamagedRowsBeforeError ih def/BlackIs1 T def end/CCITTFaxDecode filter
}
{
currentfile/ASCII85Decode filter 5 dict dup begin/K 1 def/Columns iw def/Rows ih def/DamagedRowsBeforeError ih def/BlackIs1 T def end/CCITTFaxDecode filter
}
//mibinary
//miascii
//mirle
//mirlea85
}datatype get store
{
[1 0]
}{
[0 1]
}ifelse
/polarity xs
/smoothflag xs
concat
xtraData
{
0 0 1 1 rC
}if
/$z xs
/bpc xs
xtraData{4 add}if
/ih xs
/iw xs
datatype 13 ge
{
/$z $z string store
/$zdump iw 7 add 8 idiv string store
}if
$c setcolorspace
}bd
/:j{im_save restore}bd
/mkimgmtx
{
xtraData
{
[Width 0 0 Height 4 sub 0 2]
}{
[Width 0 0 Height 0 0]
}ifelse
}bd
/do1img
{
$j dup begin
/Width iw def
/Height ih def
/Decode polarity def
/ImageMatrix mkimgmtx def
/DataSource setupimageproc def
/BitsPerComponent 1 def
/Interpolate smoothflag def
end
imagemask
}bd
/:g
{
1 G
0
1 1 idtransform abs exch pop
1 1
rF
0 G
do1img
}bd
/:h
{
:Fx
0
1 1 idtransform abs exch pop
1 1
rF
:Fx
do1img
}bd
/:i
{
:Fx
do1img
}bd
level3
dup startnoload
/:hm/:h ld
dup endnoload not dup startnoload
/domskimage
{
4 dict begin
/ImageType 3 def
/InterleaveType 2 def
/MaskDict
$j begin
/Width iw def
/Height ih def
/ImageMatrix mkimgmtx def
/BitsPerComponent 1 def
/Decode[1 0]def
/Interpolate smoothflag def
currentdict
end def
MaskDict dup length 1 add dict copy
begin
/Decode exch def
/BitsPerComponent bpc def
/DataSource setupimageproc def
/DataDict currentdict
end
def
currentdict end
image
}bd
/clraray Z
/:hm
{
]
/clraray 2 array store
clraray
polarity 0 get
3 -1 roll put
]clraray
polarity 1 get 3 -1 roll put
[/Indexed $c 1{clraray exch get aload pop}bind]setcolorspace
[1 0]
domskimage
}bd
endnoload
%%EndFile
level2 not endnoload
%%BeginFile: lw8_smooth-2.0
/junk Z
/$z Z
userdict/sc_smooth known not
save
systemdict/eexec known
systemdict/cexec known and{
countdictstack mark
F
<1861AEDAE118A9F95F1629C0137F8FE656811DD93DFBEA65E947502E78BA12284B8A58EF0A3
2E272778DAA2ABEC72A84102D591E11D96BA61F57877B895A752D9BEAAC3DFD7D3220E2BDE7
C036467464E0E836748F1DE7AB6216866F130CE7CFCEC8CE050B870C11881EE3E9D70919>
{eexec}stopped{
$error/newerror F put
cleartomark
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse
F
}{
{cleartomark pop T}{cleartomark pop F}ifelse
}ifelse
}{F}ifelse
exch restore and
level2 not and
vmstatus exch sub exch pop 15000 gt and
{
currentfile eexec
}{
/junk save store
/$z 4795 string store
currentfile $z readhexstring pop pop
{
currentfile $z readline not
{
stop
}if
(%ADOendeexec)eq
{
exit
}if
}bind loop
junk restore
}ifelse
bc89dd93a62e673f17beaf79fc308801f2548cc0804b6e7e7211db7d71dcacee61d4db4b
cc4c192da6ec1c558421396b4eb1944f656db0dda1626374294528747cd1ee8e10b15c5c
60b4182960a4687e44c92cff1b5d29a6b48ab8be9f8115c642241a4901d75a2b2ba55d27
0620b884f37689503d9c3a603e89a1f7de7447e2b23145af7219c13aad065fe60313c4f1
7d1959166b8493e26ee828d6e76ac472747b40432571d2d101dd3e8696849eb59b70c328
a0d1978eea220593cb3024a3cdecb89dcfa2d5ab3990b0bbc1a0c3351bfbd614917e7ede
ef79cb8843325e4a81a80e809250ce8cf7297b5c684b53a56538b373cb085ec7436f82a2
e48b4789de5ac368defd97ca81e1e7a584b7e40bcf852c3d4f6cc387172784295be04ca2
0793987d64efc3cec658553cbe610fa9ebfe74341192cfcc6ecfd0a4843b740cbfd5ba5f
4c076050268792190676f76cacc26be628f8ae1c48419803c2a5108f6b1bec6664b06248
6a083d8092cb3c82b90bded3eed0387490fe971d6614c5d0259a846d43abb22e0dc06aa5
6911c9f53cf5524e138662db3fa2e6cdfe30873d916ed70e4962ed78b32491bee9a20a36
8be439dc6245d5751e6899e2214c07df7a87b66b1aba9a8196db2add3d3c4e3057dc9a9c
dae1cc7884a6f29a5568b1ad64143fd479b8b4a8fbef4db889fe42edaadef0276f79d192
245b64299ad347b03ecf887db96b16fc319a1c7e59718ac7ff7bc7bafd4523bd88fd5ba8
1730817c2f529d3060cb591fe565d778fc989e7e14f7c2a7b85785c53af35fbe738da838
cdf80c9a048f4d7dbd58e2c9f527d2d3b2ad633da1005036298ec8533b94f84e9246289c
f03336f4a7f657afbcbdd7b5e16187273c459f5626a5667db4fbf8b85ef2363ee6d89bd0
f402408cae3065fecf609fa290047e9656d853739f33b06d64a4a57f66f37f7da39fa89d
28962fddb76e8d05683c090664175dda6a1be57698894fd9f0f9d8da411b3f33b3b9c8d4
50a27c37e4a0e503418cd6c02cf60fa7fbb6f6f3e7509a45a54343ba3361168d895a27eb
6923ab65b019b188fe21c804629f2be2a20e6417841b4c8d5d68fb38db71ac7174e68d03
0611ea29f9ca740d0aef611a1f0003e1d136a539ed28d956a2a36bc7ae0ee290bd818175
3537e39be7777de1004964c769ec7e933b17c852cbd2da4cc100d9d3e141106eea9cc29a
b1c910ead768527a02711ac035262c93a4548f67fb501a971e0a86d819547bac7c09f5fb
aec454c9c7276f5e317cc8fd8876e7f90dc128f03052a756cf6db9876fe5a31c9d6a139b
d46eb34272ff7992b86c88420ab07e801a39e91afb3c048b40913dc2d984e0c347b3daea
4e1ce5a15c8df7b65a0b89136f6a48a92b8f096d708a2bea4390f0454dcc3d9cd4f6b24d
8f06faa17694172213c481ceaa1f7fe33f1389142f017874560e1b0272385585fc5681de
4a909566cdcf9af80dfde23e9ad55083bb9422ae57b99bf3d5f081a4cbe0172f236abbb5
06fbbee46987543fc545e81ecd61477fadec55640ce9e41f8cbcd409f0e64c1b83193885
dffe0c4c383de781943a2a73ad1e0cbee0dccdbc3bbbc010f3adc8aa597210cae47003d2
952b8e874e1dee33ef1a78180a3ef6b22e1a66385147f550678510b15ed1a02fc85e736e
818f03b188d6a23f070e5720195a8e4c295d27129a5adedc1a95145d5e758649acebaec5
3d14cbc9feaf3abcecc976c03d00ea640c3b852baad7d8ab28c593cb74cbe2e98ea0b35c
8827eb3def1a79af837fb8468b2042acaf226b1f6d11abab2884f3fe49772325d273f893
82badc7b3b26e43c3f6170eec2c607cbe22225b9469de5509d31bafa1729c416089aeb1b
3b5477a985acdce47557bf29130d6232d2003a4314bf46c9c9383c437f1f2597f361405a
b92f371458f13d8d400d78140df094a559bec9d240993f2d811f0d4eba7678773bb6c765
caf33bc77c0e2e156538b04423e513cb933d9ac8cec0444e0309bdb5c70f02a71f49cc99
7b8d98ecbaad1d53daa2811b07df94b2ec574326d760892fd1886703eed816bf2db96bbe
f2ea914cef918d251a1203d93d549aa438a1309ce179c233111175d9e8bb6064dc2d52db
0976650b1d5d194eab20ed3e500db4410852390e69e56e4ab71e97a87680fa620d8d32d5
b93e40cdec16ed20af734e792ddb938b8a65ccb811f369cc1e9e8819e76d7908e310e5ea
018c05d2db74abc0e8e5da75431324a3ba298820009d6fcc9d5693ec900aab8745112928
ef24a8da713dc8ecebb84394f0058335dafb459971cf20e8c15d40f35643a0c56c95bd86
faefe8e251fb9f79a6db5e481032f812454181a73375ab1efe575d745fe7073adaf60865
e992c7f5e969f4e267b323bb022a7f8b1b480a97ca735212b4d47aff196f37fa177c765a
f03487b323f2ce11314906d04dcb0c3c770ea581fcff70cc1553b4615a6d8dfd69001581
77a9fcc035cb44d630b99cdae09de33c09c9ab8bcc021e72fd88cccf3a9cd578a34a3f96
ae636047fc5f468d22cea0cf509e1588563c7e25d4f0d41b30373dfd1cb69a8e37a51a57
5d1cab7a3c9d04f3d388db04ed78d3e81e7b53dffa94507df197e467565d4169fc996e46
671f62236b00f4e9dc36bd3709400771ed4b335bcdb3c2974c0a00c03717ed980e98dc1b
2473f38bd1e1fe4da0fea5169aa1e06054315579a5898bbe3c9fabb829485562e9d25248
142575f3bfd311dde2297c7883b0b9ed0c3ffe3358880c8c77be01cd6408dc743634006f
d888ffc1e4562ed1166bbdcbe971a269afae52a8a384eaf8880433a053bd072accc62214
04bb18e98b9cebb3c05e56216b56174bd432e41b8c82c82d7114adb16ad941fe87c0657e
03203fc26ed43096e7e262a8f86fc07506b3ffcb5888bcbd3482977716a337a54c0649c1
2579b4322afcb34486a5593fb9d58cb16a0368f593c3c52608bf31c6a3b48a04be605c60
b15ea2670c3e89d293ba065db7d5471d3f56d7ffe3ba48814d5a1f4a81d9865d1f2340cc
3e5ced23ce6827065312bb9ae13e0d3cc53e79aaa764a229be203d1b45963d17e983f72a
f97bac50984a360768f459585745d94f7b77457bb8bc802332aef4e65ae7200d94750aea
b4ede71ade6ee000cf122866f514747784f7e497a6e48b82467515f474d38ec690bac331
d8246eacf2b10d7f1b1b74b1020843b3d934115e23fc1845e5161f5d494badc22f5e68fa
4d1cb3933ac6467e3cc58099adcf4832c156ce1714ee44c6368dee76483e47260dda3af1
97f938530475ede86f1b7ccfeeaeab2518f1c05ba983ada09c069d0f5e7e34c7832ec4c1
9e68e78a51e25540cadf7b64d1eca1141816aba211cea9b8aa4ff9542f26cd6adabe28bc
03c20d2fded392cc160e5ca6f8216611e41b504567927a560537a57e09dd8db552fab25d
59318ad3f7e6b6e10ad49fbb4caf8d5205d494666f5c51a599df65d2c89fe65c92ec733d
78205e987659e02d244684cff18d2b6f1d0d33ccae32339b840246a50cccebc952c7e705
d30fcb5dc94da2eab7ba3c7f9fe536eba4971a8b8e0744a0a094d531ae611042c347fac7
3b770c445121464594a2c5eb9d923f0fe2f33500b403e4b5daf64acd4a4a89d8469be57f
a393a844e082dec5af117b77e7be0eb6474eb47b00503bc68c809f0de147f7d0f1f68798
89b1781d09c0dc12c882dba17e23de1311321fa851a94c51a8801a4bf7c888e4805b1fc8
2fe638aaabb33b13ab0ae024b0b767108a068d562ebd11a91ad8706df9360a914927b752
ddb4d176f72661d12a6349a58a8d688b311ec8e1797b011dbb47760765b88a651b42cace
e60730553040e64711fff10e3285171ed1dae0545b6cfe3503b24f9d135d04d467372b11
ef3c1b9aa7c4272e281df0b6e7cc7e7984b00cbda5bbd81c939213c32176b5e062660e54
8943afe1e39a38cb171d7591c01ac4eea3963572ce008d48727ec8efc0ead1cc4c86d9ce
3d9d5c21f58a41359f2599d4cb15762366c3d3c5b7abe7970a312ea2fb14f5e74f78284a
624fe71f362f4b4d892ac6a87cf8794982964aa0e6153477da1484d35787edb8a2aad90b
3cada91934c118098617e1254d834d86154e6585628663741ae0d7bf339b168d4acec9da
94c12bd5449ecf97a7483e27c47160f838ac076f79b82fc0bd8a3b0011bd0bbb2e6a38ff
a7a63daf463cacb10f56c459bec699ecbcc52be2e5c57bd013c4682b01199cdd89ad2bd1
8584b05e6178c2d6fdc6e19a375ae4a91428d4c0aff2d07e5b6d159351475e57419f2ec8
a343d209e36ddb078027e03d4f179fbf675373c485be1a147ffda00821aba79187471ef9
55f197d6bf0f442244d5b4d1e8392ba11965b6bfa8db30c0e48984883a9b6ec840a9b6fc
93df40c82906dac253e0afd633c336cedac8dd7213e4766761ec3cf3a8aacb1fe1bf2d61
d64c5addaf1d836e199df0ef5e61029f1e6a28c17eba0d8bdf81f358058086ee365b4127
a1bb4b273b84a825fdcc4ebd3abdd7ca243788e1eb48aed96626bd2f2ef8a2e1a082acb6
64b5af60797d9ad021ac616e4d65c1ddbc4a74928b7ab089a10db9312a18d682cccce0b5
53e2f454af0ca21f59b96ee7d71a97db2607dba56daad1bef91c66c44f6fc53d2b4bfebb
876cd478243a9454e8864f65067787b96cb4b3f92a7c90f959ce3324c94590348a8d2709
f4feea7adaf4c56199da203d8f4b9866fe7362d86401b0cfe1913476eb9f7f4d4df0f2f3
8e7ee153c99dda1ccc6eec2cd1b76c52c553ceca04ad525fc17a4a7af197d158c02e6469
cd7e3be4b934ed0e1499153bb98b4363159a60c9ce892af085511cfc31cfa7fa1baf0e22
d138b6a54e93532486b633024d18afd6a610ede93b2a554abc44da890144ff060d1db1e3
e57df15229afe56c49e3c7f68e6ef0221942945f3c6675b498e94fd834bfcd869bba0a90
179d3eb859ea6b749871a62c0e8513ab69b63e35b5bf8060f25442a6670293cee9a86928
997a54929695b3eda64483ecdf8cfb2732729a652e08a3aa82ecb5ac45aad7227f7f7ee9
1d8c222933cfac18561f27939ca29fbf5eebd634555856519cd2f1573281514aff3c6091
5142196c57177ef2086958fbb3fae8f448118c435ae82b7b17a8445e0806b8442e1f9347
c7940af7342dc3d5638958f9a3952768f6c244920e281a163cc87fbdbec99080b8d7e24b
9e35e152aa600a6a4faebb140857e536bb819f4cd9992b9dfaa60ac33a8ff2ed14c791e7
0290e5f6d810488d672224bfeeca6907b41f46489091322b6830a8424fa2a0061151ee61
ef1cfb1a83c4538025605554ed3c734fd8e39bd6da4af6e5a57593da83fd9f511af49b84
5ef7cb34495b54070ea204daff2e266f5a1619928e73de256979f4afdeb42b889064461b
f7263f82a2c233d113de9ba4bc415ed68241bc3862a34050479aa86eabb80cef561ad640
80be73a5da7fbb4905bee2fbbbc7c85a5512c6e747a5eb18942e47c17e5da1127910d8e6
ed7a37d3b846cfda6b0adc8dd594ffe14995b32babcb4d99869090abd57e8ab397e33406
2c7790b673d184738a9e9d578f54ccfcdcc46200d2bb07c5dea46261680dccb4f011428f
289c2049ff81040685aec9ae8c9016c491d02f14f2c4fd79e053147520d59d034c470569
e602c662af4aafc5d2fb0d3af218b26b769ac25fe9999ba3c2eaa8a9ffa93a6f4b743608
f5797772e53cfd2f3c6a45b1a843fcfc6aedc66bc35db923bea051301fa5a959a11eb0b6
f02f7c4e6b004ce548b77e032e36f93cce55f507d5892b32da81a7ce5016326aacd06dd5
0a1b3c615abf06ab6eb1bd643f3c3d7fbc9e18bc11ee29b2113d5c458f20713d3b811da8
883f8b95557ffb1eaf229b89fc98f7623ff9140bcebc6b8677ad7d99373e5757292a3d6a
83a5c053e61224b4dc14e42626637e714c514092e569101ce75f0533605802455f03bf0e
336c0f9788569f3b2b4b79c01628abc3b243decb3c55e1273ff7b83ae61d936bd413580f
3f279437da1fdad63d785ff7bedd815a6d6e4964231adf28640794c33a30686e5f60fe78
c5e87ffd27a84452dc111bbd7c2d0b4e7781c102547f5533ea676a33b8d58918f197a8cd
a1e90be9620e43af9d5b07ee2ae5d702683c9a6973fdaafaec74d62cb29b18272b3f8840
a1a8372ddf4bfee1b7ea037ed41fdc2cb1cb4da3ccb3e121354db0d5bc83c4d4c323083d
75dd32c20607f81fcd221751c5af21775659e804b9941cf6fbe4c8846be20e546f88a588
7bbff8cab4489883fdd2be613313174c015d69eee40eee4242e173aaac87585597feff69
a64f4ef2dbf00dbfe9ad946892816711c7199d4068d8494ba1df614d9bbe1c7b63996e98
12b913966a42a41be0dc85feff232e625f4dd0b01cb7674b232e89d5da143f9d12a9d8a9
aa8b62038721ad9e4a6438cb842d1828458fc25e5b0b6ea795f7a14d2f55f1451c615f4c
211469611d1348952e655e1d93188c0dc6dd719630a42fe5baf8cde0c03b1e0aa76a2cd4
fec86a3042f8a2ea5af50a43af52c1217f6be45b152e47d165b89a54ede432f1eb3ed3ef
428c228dd53c44db15541704b99413b465ff65ca0e9d6be932a18eca713c71ba7dc89238
1e0c2c62cf8567df2f997e58ed2c1ffe17d2fc96db942ce3950e28d1287b85ff7d07adb9
059629dc89b9b0ed2213e45d8a20188cae18f3391887387bf8ba0a12fe21fa0aa521bfa3
718f7abe76388e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%ADOendeexec

%%EndFile
%%BeginFile: lw8_bubn-2.1
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? F def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace T
}{
currentcmykcolor F
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
2state?
$o
$t
$p
$s
$cs
ps
}bd
/popstatic
{
/ps xs
/$cs xs
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
}bd
/pushgstate
{
currentpoint
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
errordict/nocurrentpoint{pop 0 0}put
2state?
{
pushgstate
gR
}if
pushgstate
gR
pushgstate
pushstatic
pm restore
mTS setmatrix
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div setgray 8{pop}repeat}bd
%%EndFile
%%BeginFile: lw8_basic_text-2.1
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg T def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding dup 9/space put dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
/$ckeyd md def
/:skey
{
1 index maxlength 2 index
length sub
ge
{
begin
/$mkeys 20 dict def
/$mkeys load
end
dup/$ckeyd xs
}if
3 1 roll put
}bd
/fD1pass
{
40
$ckeyd
//md
ne
{
pop 1
}if
$ckeyd exch
:skey
}bd
/:searchdict Z
/:searchdict
{
exch 2 copy
known
{
get
}{
exch/$mkeys
get
:searchdict
}ifelse
}bd
/lU
{
//md exch 2 copy
known
{
get
}{
exch
/$mkeys get
:searchdict
}ifelse
}bd
/:xs{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch
get 0.0
rmoveto
}for pop pop
}bd
/:ys{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch
get 0.0 exch
rmoveto
}for pop pop
}bd
/:xys{
exch 0 1 2 index length 1 sub{
3 copy
gsave 1 getinterval show grestore
exch 2 mul 2 copy
1 add get 3 -2 roll get exch
rmoveto
}for pop pop
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
/fD1pass/def ld
/lU/load ld
level2{
/:xs/xshow ld
/:ys/yshow ld
/:xys/xyshow ld
}if
level2 not endnoload
/fD Z
/sf Z
/scf Z
/sf1pass
{
lU setfont
}bd
/scf1pass
{
exch lU exch scalefont fD
}bd
/scf2pass
{
scalefont fD
}bd
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff fD
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff fD
}bd
/ps Z
/fz{/ps xs}bd
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
fD
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
/fD/def ld/sf/setfont ld /scf/scf2pass ld
 600/languagelevel where{pop languagelevel 2 ge}{false}ifelse{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
sfcl{
%%BeginFeature: *InputSlot Upper

%%EndFeature


}efcl

sfcl{
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature


}efcl

sfcl{
%%BeginFeature: *PageRegion Letter
level2 { 
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/letter where {pop letter}{letterR} ifelse
	} ifelse
%%EndFeature


}efcl

(Matt Bishop)setjob
/mT[1 0 0 -1 12 780]def
/sD 16 dict def
%%IncludeResource: font Times-Roman
/f42/Times-Roman
:mre
/f57 f42 10 scf
/f70 f42 8 scf
%%IncludeResource: font Times-Bold
/f83/Times-Bold
:mre
/f97 f83 18 scf
%%IncludeResource: font Times-Italic
/f110/Times-Italic
:mre
/f125 f110 10 scf
/f138 f83 12 scf
/f151 f83 10 scf
%%IncludeResource: font Times-BoldItalic
/f164/Times-BoldItalic
:mre
/f181 f164 10 scf
%%IncludeResource: font Courier
/f203/Courier
:mre
/f216 f203 10 scf
%%IncludeResource: font Courier-Oblique
/f229/Courier-Oblique
:mre
/f246 f229 10 scf
%%IncludeResource: font ZapfDingbats
/f271/ZapfDingbats
findfont :ff fD
/f286 f271 10 scf
/f299 f164 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 5.0.1
% Copyright (c) 1986-95 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 501 1
userdict/FrameMacDict 250 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fMAB
/fM5/fM6/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMef/fMet/fMeh
/fMew/fMey/fMex/fMei/fMej/fMek/fMel/fMFl/fMGC/fMGL/fMGM/fMIx/fMJB/fMJC/fMJG
/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC/fMPH/fMPt/fMRC
/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMdm/fM2x/fMa2/fMi/fMk/fms/fmBS/fMdp/freq/sangle
/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B/fMdc/fMds]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/statusdict where{pop statusdict/processcolors known{statusdict/processcolors
get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/fMXN/statusdict where{pop
statusdict/product known{statusdict/product get}{(Unknown)}ifelse}{(Unknown)}
ifelse def/fMHq fMXN(LaserWriter-Sim)eq def/FmBD{bind def}bind def/fmBx{[exch{
dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch
/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bind
fmBx}FmBD fML1{userdict/FrMacBegin{FrameMacDict begin}fmBi put/FmE{end}FmBD}{
/fMdc 6 array def userdict/FrMacBegin{FrameMacDict begin/fMds currentcolorspace
store mark 0 0 0 0 0 currentcolor fMdc astore pop cleartomark}fmBi put/FmE{fMds
setcolorspace mark fMdc aload pop setcolor cleartomark end}FmBD}ifelse/fMEd 35
dict def/fmPE{fMEd 3 1 roll fmBi put}bind def/T true def/F false def userdict
/FrameSuccessfull F put userdict/FrameEndPictSave F put userdict
/FrameEndPictStopped F put userdict/fM7 known not{userdict/fM7 0 put}if/fmXD{
exch def}FmBD/FmG/gsave load def/FmR/grestore load def/fm_l/grestoreall load
def/fm_v/save load def/fm_g/setgray load def/fm_r/setrgbcolor load def/fm_h
/sethsbcolor load def/fm_f/fill load def/fm_e/eofill load def/fm_t/stroke load
def/fm_m/imagemask load def/fm_i/image load def/fm_s/show load def/fm_a/ashow
load def/fm_w/widthshow load def/fm_y/awidthshow load def/RealKshow/kshow load
def/fMdm matrix defaultmatrix def/fM2x matrix def/fMa2 matrix def/fmSM{fM2x
currentmatrix pop}FmBD/fmRM{fM2x setmatrix}FmBD/FmRF{currentpoint 2 copy
translate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2
copy lt{exch}if pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark
known{/fMAB true def/FmPD/pdfmark load def/FmPT/fm_s load def
currentdistillerparams/CoreDistVersion get 2000 ge{/FmPD2/pdfmark load def/FmPA
{mark exch/Dest exch 5 3 roll/View[/XYZ null 6 -2 roll FmDC exch pop null]/DEST
FmPD}FmBD}{/FmPD2/cleartomark load def/FmPA{pop pop pop}FmBD}ifelse}{/fMAB
false def/FmPD/cleartomark load def/FmPD2/cleartomark load def/FmPT/pop load
def/FmPA{pop pop pop}FmBD}ifelse/FmDC{transform fMdm itransform cvi exch cvi
exch}FmBD/FmBx{dup 3 index lt{3 1 roll exch}if 1 index 4 index lt{4 -1 roll 3 1
roll exch 4 1 roll}if}FmBD/fmgS 32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS
fMgt get dup null eq{pop fmgS fMgt 10 dict dup 4 1 roll put}if 3 1 roll put}
FmBD/fmGG{fMgt -1 -1{fmgS exch get dup null ne{2 copy exch known{2 copy exch
get/_notdef ne{exch get dup exit}if}if}if pop}for pop}FmBD/gsave{FrameMacDict
begin FmG/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{dup dup{pop
/_notdef put dup}forall pop pop}ifelse end}fmPE/grestore{FrameMacDict begin
fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN end}fmPE/grestoreall{
FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPE/save{FrameMacDict/fm_v
get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{
dup dup{pop/_notdef put dup}forall pop pop}ifelse/fMtp fMgt def end}fmPE/fMND F
def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{1 exch sub 3 1 roll 1 exch sub
3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2 copy le{
pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1 roll 7 1 roll sub 6 1 roll sub 5
1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get T}{pop pop false}ifelse}FmBD
/fmfp{exch currentfont dup/FontMatrix get exch/FontInfo fmkn{T}{currentfont/df
fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get mtx concatmatrix exch T}{pop pop
pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1 roll fmkn{exch 0 3 1 roll dtransform
neg exch pop exch pop}{pop exec}ifelse}{exec}ifelse}FmBD/fmdl{3 index 16 and 0
ne{FmG currentlinewidth 2. div dup rmoveto currentpoint newpath moveto 2 index
0 rlineto fm_t FmR}if 3 index 24 and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3
1 roll eq and{1 currentgray sub setgray}{1 setgray}ifelse 2 index 0 rlineto
fm_t FmR FmG 2 index 0 rlineto strokepath .24 setlinewidth fm_t FmR}{2 index 0
rlineto fm_t 0 0 moveto}ifelse}FmBD/FmUl{FmG/fM2 fmXD currentpoint
/UnderlineThickness{fM2 15 div}fmfp abs dup setlinewidth/fM1 fmXD 4 index 1 and
0 ne{newpath 2 copy moveto 0/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto
fmdl}if 4 index 2 and 0 ne{newpath 2 copy moveto 0/XHeight{FmG newpath 0 0
moveto(x)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop
fM2 2. mul 3. div neg}if}fmfp 2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath
2 copy moveto 0/CapHeight{FmG newpath 0 0 moveto(H)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp
fM1 sub rmoveto fmdl}if pop pop pop pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD
/fM1 fmXD 0 32 fM1 fM3 stringwidth pop fM2 sub fM3 length div sub 0 fM3 fm_y}
FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3 def/fMK 4 def/fMS 5 def/fMNg 0
currenttransfer exec .5 gt def/fMCM fMN def/fMJK 0 def/fMJY 0 def/fMJM 0 def
/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1 def/fMPt null def/fMCK[0 0
0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{/HalftoneType 2 def
currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction
/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency
/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def
currentscreen[/SpotFunction/Angle/Frequency]{exch def}forall}ifelse statusdict
/checkscreen known{statusdict/accuratescreens get exec}{F}ifelse
/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1{begin
statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}
{F}ifelse statusdict/setaccuratescreens get exec}if HalftoneType 1 eq{Frequency
Angle currentdict/SpotFunction get setscreen}{HalftoneType 2 eq{fMCl{
RedFrequency RedAngle currentdict/RedSpotFunction get GreenFrequency GreenAngle
currentdict/GreenSpotFunction get BlueFrequency BlueAngle currentdict
/BlueSpotFunction get GrayFrequency GrayAngle currentdict/GraySpotFunction get
setcolorscreen}{GrayFrequency GrayAngle currentdict/GraySpotFunction get
setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD/FmCS{14 dict begin
/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def
/GrayAngle exch def/GrayFrequency exch def/BlueSpotFunction exch def/BlueAngle
exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def
/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def
/RedFrequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict
begin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angle
exch def/Frequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH
fmCH def/fmcp{/FmPr2 exch cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length
FmPr2 length add array def FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2
putinterval FmPrn cvx}FmBD/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0
get exch 0 get fmEp{2 copy 1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3
get exch 3 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD
/fmQR{2 copy 4 get exch 0 get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2
get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD
/fMJG fmXD/fMJR fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{
/fMCM fmXD fmCC}FmBD/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]
/fMSC exch def end}fmBi def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll
eq{exch pop T exit}{pop}ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM
fMN ne{/fMOP fmGG{/fMKO fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup
null ne{exch pop dup type dup/integertype eq exch/realtype eq or{fm_g}{setcolor
}ifelse}{pop{1 fm_g}if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}
{fm_f}ifelse end}fmPE/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}
fmPE/stroke{FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPE/imagemask{
FrameMacDict begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPE/fmNX{load
fMND{FmG fMa2 currentmatrix end nulldevice setmatrix exec currentpoint
FrameMacDict/FmR get exec moveto}{end exec}ifelse}fmBi def/show{FrameMacDict
begin/fm_s fmNX}fmPE/ashow{FrameMacDict begin/fm_a fmNX}fmPE/widthshow{
FrameMacDict begin/fm_w fmNX}fmPE/awidthshow{FrameMacDict begin/fm_y fmNX}fmPE
/kshow{FrameMacDict begin/RealKshow fmNX}fmPE/image{FrameMacDict begin fMCM fMN
ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse
settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}fmPE/fMGM
T def/fMBM F def/findcmykcustomcolor{0 0 0 4 -1 roll 8 array astore}fmPE
/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3 copy/fmRY fmGG exec 8 4 roll
4 -1 roll 8 array astore end}fmPE/findgraycustomcolor{0 0 0 exch 1 exch sub
exch findcmykcustomcolor}fmPE/findhsbcustomcolor{FrameMacDict begin 4 1 roll
gsave fm_h currentrgbcolor grestore 4 -1 roll findrgbcustomcolor end}fmPE
/setcustomcolor{FrameMacDict begin dup type dup/integertype eq exch/realtype eq
or not{1.0}if exch dup/fMCC exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval
aload pop 4{4 index mul 4 1 roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}
if fmLM{exch pop 0 4 getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and
exch fMJM eq and exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1
T}ifelse}{fMCM fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM
fMC eq{0 get F}{pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub
exch}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/setoverprint{FrameMacDict begin
/fMOP exch fmSG null fmCN end}fmPE/currentoverprint{FrameMacDict begin/fMOP
fmGG end}fmPE/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]
setcolorspace fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{
fMCG fm_g}{fMAB not fMCl fMGM and and{0 1 3{fMCK exch get 1 fMCG sub mul}for
fmSK}{4 1 6{fMCK exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{
fMCG}{1}ifelse}ifelse}for fm_r}ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG
F}{fMCK 0 4 getinterval aload fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch
fMJM eq and exch fMJC eq and{fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{
fMCM fMK eq{fMCG 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY
eq{pop fMCG 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop
pop fMCG 1.0 exch sub mul 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG
1.0 exch sub mul 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fMGM fML1 or not{[/Pattern[/DeviceGray]]
setcolorspace fMPt}{fMGM not fML1 and{dup 1 lt{pop fMCG}if}if}ifelse}ifelse
fmCN}FmBD/setgray{FrameMacDict begin fMCM fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq
fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse}ifelse/fMKO
exch fmSG fmCN end}fmPE/setrgbcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{
fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS eq{fMJB eq exch fMJG eq and exch fMJR eq
and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0
exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop
F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop 1.0
exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch
fmSG fmCN}ifelse end}fmPE/sethsbcolor{FrameMacDict begin fMCM fMN eq{fm_h}{fm_h
currentrgbcolor setrgbcolor}ifelse end}fmPE/setcmykcolor where{pop/fmSK
/setcmykcolor load def}{/fmSK{4 1 roll 3{3 index add 0 fmax 1 fmin 1 exch sub 3
1 roll}repeat fm_r pop}FmBD}ifelse/currentcmykcolor where{pop}{
/currentcmykcolor{FrameMacDict begin currentrgbcolor/fmRY fmGG exec end}fmPE}
ifelse/setcmykcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1
roll]fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq
and{0 F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1
roll pop pop pop dup 1.0 ge}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop dup
1.0 ge}{fMCM fMM eq{pop pop 1.0 exch sub exch pop dup 1.0 ge}{fMCM fMC eq{pop
pop pop 1.0 exch sub dup 1.0 ge}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/fMFl[0 .1 .3 .5 .7 .9 .97 1<
0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><814224
1818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7 dict
dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[
135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000
ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup
.75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008
040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87
c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMdm dtransform dup
mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0 eq{pop 1}if 8
mul div def/sangle 1 0 fMdm dtransform exch atan def sangle fMa2 rotate fMdm
fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{
fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM fML1{{dup patScreenDict exch
known{patScreenDict exch get aload pop freq mul 5 2 roll fMa2 currentmatrix 1
get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF sflipy 2 fmgF mul}{sflipx 0
fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if
bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0
fMa2 currentmatrix 1 get 0 ne{90 add/pflipx sflipx 1 fmgF def/pflipy sflipy 2
fmgF def}{/pflipx sflipx 0 fmgF def/pflipy sflipy 3 fmgF neg def}ifelse{pflipy
mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1 add 2 div 8 mul cvi def/yindex yy 1
add 2 div 8 mul cvi def fmBS yindex xindex 8 idiv add get 1 7 xindex 8 mod sub
bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1 add def 1}{/fM0B fM0B 1 add def 0}
ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMCG exch
def/fMGM F def fmCC}}{/fMPC 8 dict def{dup fMPC exch known{fMPC exch get}{dup
fMPD/fmBS 3 -1 roll put fMPD matrix makepattern dup fMPC 4 -1 roll 3 -1 roll
put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{
/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup
type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}
FmBD/FmFB{0 0 0 1 0 0 0 fMCK astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx
matrix def fMOx currentmatrix pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD
/FmIO{fmRM}FmBD/FmEO{FmOs restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}
bind{.11 mul add round cvi fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def
/fm31{/fMi 0 def 0 exch 0 exch{exch fm3R exch get exec}forall pop pop fMs}FmBD
/fm41{0 exch 4 exch{exch 1 sub dup 0 eq{pop 4 1 roll 3 index add 255 fmin 255
exch sub .11 mul 3 1 roll 3 index add 255 fmin 255 exch sub .59 mul 3 1 roll 3
index add 255 fmin 255 exch sub .3 mul add add 255 fmin round cvi fMs exch 3
index exch put pop 1 add 4}if}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD/Fmc4{
save userdict/fM7 3 -1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD
/fM18 fM8 string def/fMs fM18 0 fM18 length 4 idiv getinterval def translate
rotate scale{-1 1 scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}F 4 colorimage}{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop fm41}fm_i}ifelse fM7
restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch
itransform}FmBD/fmAc{transform round 1.5 sub exch round 1.5 sub exch itransform
}FmBD/fmDn{dtransform round exch round exch idtransform}FmBD/fmLn{0 dtransform
exch cvi 2 idiv 2 mul .1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn
6 2 roll fmDn 6 2 roll rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD
/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}
FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD
/X{0 exch 0 32 5 2 roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR
}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}
FmBD/FmSo{fmLn setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn
setlinewidth closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth
setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{
fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP
0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5
1 roll}{T 7 3 roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{
currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG
newpath fmAn translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3
roll arc closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth
setlinecap fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2
index 2 div sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0
5 3 roll exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate
.3 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc
fm_f 0 fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10
rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0
setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn
neg .1{0 0 3 -1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict
/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{userdict/FrameEndPictSave 2
index put FmE{countdictstack userdict begin/showpage{}def/FrameDictStackDepth
exch def count/FrameStackDepth exch def}if userdict/FrameSuccessfull false put
FrameMacDict/fMHq get/$brkpage where dup{exch pop}if or{userdict
/FrameEndPictStopped false put}{userdict/FrameEndPictStopped true put
currentfile cvx stopped pop FrameSuccessfull not{systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame5Picture)eq{exit}if}loop grestore end}if userdict
/FrameSuccessfull false put userdict/FrameEndPictStopped false put FrameMacDict
/fmIR get exec}ifelse}fmBi def/FmEP{save userdict/fM7 3 -1 roll put fMEd{
userdict 3 1 roll put}forall setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey
/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew
fMeh scale fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale
fMej fMel add 2 div neg fMei fMek add 2 div neg translate 0 setgray 0
setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath
fML1 not{F setstrokeadjust}if T fmXC}FmBD/FmPI{newpath 0 0 moveto F fmXC}FmBD
/FmPc{save userdict/fM7 3 -1 roll put newpath 3 index neg 3 index neg translate
1 -1 scale 0.0 0.0 moveto T fmXC}FmBD/fmIR{FrameEndPictSave{fM7 type/savetype
eq{end/FrameDictStackDepth where{pop countdictstack FrameDictStackDepth sub dup
0 gt{{end}repeat}{pop}ifelse count FrameStackDepth sub dup 0 gt{{pop}repeat}{
pop}ifelse}if fM7 restore}if}if FrMacBegin}FmBD userdict/EndFrame5Picture{
userdict/FrameEndPictSave 3 -1 roll put userdict/FrameEndPictStopped get{
userdict/FrameSuccessfull true put stop}{FrameMacDict/fmIR get exec}ifelse}fmBi
put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop
image}fmPE}ifelse/fmDE{systemdict/initgraphics get exec clippath{pathbbox}
stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/fmRC fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/fmRC load
end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{FrameMacDict/fMRE
get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile fMSJ{readline}
stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi put}if}ifelse
systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Matt Bishop; page: 1 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
0 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
0 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
0 0 :M
f57 sf
( )S
2 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
3 0 :M
f70 sf
( )S
5 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
5 0 :M
f57 sf
( )S
7 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (1)S
FmE
7 0 :M
f97 sf
( )S
12 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
197.127 72 M (Rob)S
-0.36 N (ust Pr)S
-0.325 N (o)S
(g)S
(r)S
(amming)S
FmE
13 0 :M
f125 sf
( )S
15 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.42 102.667 M (Matt Bishop)S
FmE
15 0 :M
f57 sf
( )S
17 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.946 117.667 M (De)S
(par)S
(tment of Computer Science)S
228.493 129.667 M (Uni)S
-0.251 N (v)S
-0.151 N (er)S
(sity of Calif)S
(or)S
(nia a)S
(t Da)S
-0.2 N (vis)S
246.329 141.667 M (Da)S
-0.2 N (vis,)S
( CA  95616-8562)S
FmE
18 0 :M
f138 sf
( )S
21 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 165 M (1. Intr)S
-0.217 N (oduction)S
FmE
22 0 :M
f57 sf
( )S
24 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 182.667 M (Rob)S
-0.2 N 0.042(ust pr)W
(o)S
(g)S
(r)S
(amming)S
(,)S
0.042( also called )W
FmE
24 0 :M
f125 sf
( )S
26 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.212 182.667 M (bomb-pr)S
-0.371 N 0.042(oof pr)W
-0.371 N (ogramming)S
FmE
27 0 :M
f57 sf
( )S
29 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.221 182.667 M (,)S
0.042( is a style of pr)W
(o)S
(g)S
(r)S
0.042(amming tha)W
0.042(t pr)W
(e)S
-0.251 N (v)S
-0.151 N 0.042(ents a)W
(bnor)S
0.042(mal ter)W
(mi-)S
60 194.667 M (na)S
0.13(tion or une)W
-0.151 N 0.13(xpected actions. Basicall)W
(y)S
-0.652 N (,)S
0.13( it r)W
(equir)S
0.13(es code to handle bad \(in)W
-0.4 N (v)S
-0.251 N 0.13(alid or a)W
(bsur)S
0.13(d\) inputs in a r)W
(easona)S
(b)S
0.13(le w)W
-0.1 N (a)S
(y)S
-0.652 N (.)S
60 206.667 M 0.155(If an inter)W
0.155(nal er)W
(r)S
0.155(or occur)W
(s,)S
0.155( the pr)W
(o)S
(g)S
(r)S
0.155(am or libr)W
(ar)S
0.155(y ter)W
(mina)S
0.155(tes g)W
(r)S
(acefull)S
(y)S
-0.652 N (,)S
0.155( and pr)W
(o)S
-0.151 N 0.155(vides enough inf)W
(or)S
(ma)S
0.155(tion so the pr)W
(o-)S
60 218.667 M (g)S
(r)S
(ammer can de)S
(b)S
-0.2 N (ug the pr)S
(o)S
(g)S
(r)S
(am or r)S
(outine)S
(.)S
60 233.667 M (T)S
0.309(his handout discusses the pr)W
0.309(inciples of bomb-pr)W
0.309(oof coding)W
(,)S
0.309( and g)W
(i)S
-0.251 N (v)S
-0.151 N 0.309(es y)W
0.309(ou a detailed e)W
-0.151 N 0.309(xample of ho)W
-0.251 N 0.309(w to do it r)W
(ight.)S
60 245.667 M -0.031(Our e)W
-0.151 N -0.031(xample is libr)W
(ar)S
-0.031(y f)W
-0.031(or mana)W
(g)S
-0.031(ing queues \(FIFO lists\) of n)W
(umber)S
-0.031(s. )W
-0.181 N (T)S
-0.031(his allo)W
-0.251 N -0.031(ws the e)W
-0.151 N -0.031(xample to consider par)W
(ameter)S
(s)S
60 257.667 M -0.153(and global v)W
-0.251 N (ar)S
(ia)S
(b)S
-0.153(les. )W
-0.181 N (T)S
-0.153(he pr)W
-0.153(inciples a)W
(ppl)S
-0.153(y to pr)W
(o)S
(g)S
(r)S
(ams,)S
-0.153( also; speci\336)W
(call)S
(y)S
-0.652 N (,)S
-0.153( input and par)W
(ameter)S
-0.153(s ar)W
-0.153(e equi)W
-0.251 N (v)S
-0.251 N (alent,)S
-0.153( and the)W
60 269.666 M (en)S
-0.4 N (vir)S
(onment is lik)S
-0.1 N (e global v)S
-0.251 N (ar)S
(ia)S
(b)S
(les.)S
FmE
29 0 :M
f138 sf
( )S
32 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 293 M (2. Pr)S
(inciples of Rob)S
-0.24 N (ust Pr)S
-0.217 N (o)S
(g)S
(r)S
(amming)S
FmE
33 0 :M
f57 sf
( )S
35 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 310.666 M (A r)S
(ob)S
-0.2 N (ust pr)S
(o)S
(g)S
(r)S
(am dif)S
-0.251 N (f)S
(er)S
(s fr)S
(om a non-r)S
(ob)S
-0.2 N (ust,)S
( or )S
FmE
36 0 :M
f125 sf
( )S
38 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
249.546 310.666 M (fragile)S
FmE
38 0 :M
f57 sf
( )S
40 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.208 310.666 M (,)S
( pr)S
(o)S
(g)S
(r)S
(am b)S
(y its adher)S
(ence to the f)S
(ollo)S
-0.251 N (wing f)S
(our pr)S
(inciples:)S
FmE
41 0 :M
f151 sf
( )S
44 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 325.666 M (P)S
-0.1 N (ar)S
(anoia)S
FmE
44 0 :M
f57 sf
( )S
46 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105.444 325.666 M -0.46(. Don\325)W
-0.181 N -0.46(t tr)W
-0.46(ust an)W
-0.151 N -0.46(ything y)W
-0.46(ou don\325)W
-0.181 N -0.46(t g)W
(ener)S
(a)S
-0.46(te! )W
-0.3 N (W)S
(hene)S
-0.251 N (v)S
-0.151 N -0.46(er someone uses y)W
-0.46(our pr)W
(o)S
(g)S
(r)S
-0.46(am or libr)W
(ar)S
-0.46(y r)W
(outine)S
(,)S
-0.46( assume)W
60 337.666 M (the)S
-0.151 N 0.326(y will tr)W
0.326(y to br)W
0.326(eak it. )W
-0.3 N (W)S
0.326(hen y)W
0.326(ou call another function,)W
0.326( c)W
(hec)S
0.326(k tha)W
0.326(t it succeeds. Most impor)W
(tantl)S
(y)S
-0.652 N (,)S
0.326( assume tha)W
0.326(t y)W
(our)S
60 349.666 M (o)S
-0.251 N (wn code will ha)S
-0.2 N (v)S
-0.151 N (e pr)S
(ob)S
(lems,)S
( and pr)S
(o)S
(g)S
(r)S
(am def)S
(ensi)S
-0.251 N (v)S
-0.151 N (el)S
(y)S
-0.652 N (,)S
( so those pr)S
(ob)S
(lems can be detected as quic)S
(kl)S
(y as possib)S
(le)S
(.)S
FmE
47 0 :M
f151 sf
( )S
50 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 364.666 M (Stupidity)S
FmE
50 0 :M
f57 sf
( )S
52 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.289 364.666 M (.)S
FmE
53 0 :M
f151 sf
( )S
56 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.789 364.666 M -0.723( )W
FmE
56 0 :M
f57 sf
( )S
58 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
110.847 364.666 M -0.542(Assume tha)W
-0.542(t the caller or user is an idiot,)W
-0.542( and cannot r)W
-0.542(ead an)W
-0.151 N -0.542(y man)W
-0.542(ual pa)W
(g)S
-0.542(es or documenta)W
-0.542(tion. Pr)W
(o)S
(g)S
(r)S
-0.542(am so)W
60 376.666 M (tha)S
0.553(t the code y)W
0.553(ou wr)W
0.553(ite will handle incor)W
(r)S
(ect,)S
0.553( bo)W
(gus,)S
0.553( and malf)W
(or)S
0.553(med inputs and par)W
(ameter)S
0.553(s in a r)W
(easona)S
(b)S
0.553(le f)W
-0.1 N (ashion,)S
60 388.666 M (\322r)S
(easona)S
(b)S
(le\323)S
0.588( being de\336)W
0.588(ned b)W
0.588(y the en)W
-0.4 N (vir)S
0.588(onment. F)W
-0.151 N 0.588(or e)W
-0.151 N (xample)S
(,)S
0.588( if y)W
0.588(ou pr)W
0.588(int an er)W
(r)S
0.588(or messa)W
(g)S
(e)S
(,)S
0.588( the messa)W
(g)S
0.588(e should be)W
60 400.666 M (self-e)S
-0.151 N (xplana)S
(tor)S
0.293(y and not r)W
(equir)S
0.293(e the user to look up er)W
(r)S
0.293(or codes in a man)W
0.293(ual. If y)W
0.293(ou r)W
(etur)S
0.293(n an er)W
(r)S
0.293(or code to the caller)W
60 412.666 M (\(f)S
0.064(or e)W
-0.151 N (xample)S
(,)S
0.064( fr)W
0.064(om a libr)W
(ar)S
0.064(y r)W
0.064(outine\) mak)W
-0.1 N 0.064(e the er)W
(r)S
0.064(or codes unambiguous and detailed)W
0.064(. )W
-0.552 N (Also,)S
0.064( as soon as y)W
0.064(ou detect the)W
60 424.666 M (pr)S
(ob)S
(lem,)S
( tak)S
-0.1 N (e cor)S
(r)S
(ecti)S
-0.251 N (v)S
-0.151 N (e action \(or stop\). )S
-0.181 N (T)S
(his k)S
-0.1 N (ee)S
(ps the er)S
(r)S
(or fr)S
(om pr)S
(opa)S
(g)S
-0.051 N (a)S
(ting)S
(.)S
60 439.666 M (P)S
-0.151 N (ar)S
0.111(t of the pr)W
(ob)S
0.111(lem is tha)W
0.111(t in a w)W
(eek,)S
0.111( y)W
0.111(ou most lik)W
-0.1 N (el)S
0.111(y will ha)W
-0.2 N (v)S
-0.151 N 0.111(e f)W
(or)S
-0.181 N (g)S
0.111(otten the details of y)W
0.111(our pr)W
(o)S
(g)S
(r)S
(am,)S
0.111( and ma)W
0.111(y call it)W
60 451.666 M (incor)S
(r)S
(ectl)S
(y or g)S
(i)S
-0.251 N (v)S
-0.151 N (e it bo)S
(gus input. )S
-0.181 N (T)S
(his pr)S
(o)S
(g)S
(r)S
(amming style is also a f)S
(or)S
(m of def)S
(ensi)S
-0.251 N (v)S
-0.151 N (e pr)S
(o)S
(g)S
(r)S
(amming)S
(.)S
FmE
58 0 :M
f151 sf
( )S
61 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 466.666 M (Dang)S
(er)S
-0.181 N -1.562(ous Implements. )W
FmE
62 0 :M
f57 sf
( )S
64 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.598 466.666 M -1.171(A )W
(\322dang)S
(er)S
-1.171(ous implement\323)W
-1.171( is an)W
-0.151 N -1.171(ything tha)W
-1.171(t y)W
-1.171(our r)W
-1.171(outines e)W
-0.151 N -1.171(xpect to r)W
-1.171(emain consistent acr)W
(oss)S
60 478.666 M 0.928(calls. F)W
-0.151 N 0.928(or e)W
-0.151 N (xample)S
(,)S
0.928( in the standar)W
0.928(d I/O libr)W
(ar)S
(y)S
-0.652 N (,)S
0.928( the contents of the FILE str)W
(uctur)S
0.928(e f)W
0.928(or alloca)W
0.928(ted \336)W
0.928(les is e)W
-0.151 N 0.928(xpected to)W
60 490.666 M (r)S
0.968(emain \336)W
(x)S
-0.151 N 0.968(ed acr)W
0.968(oss calls to the standar)W
0.968(d I/O libr)W
(ar)S
(y)S
-0.652 N 0.968(. )W
-0.181 N (T)S
(ha)S
0.968(t mak)W
-0.1 N 0.968(es it a )W
(\322dang)S
(er)S
0.968(ous implement.)W
-0.701 N (\323)S
0.968( Don\325)W
-0.181 N 0.968(t let user)W
0.968(s g)W
-0.051 N (ain)S
60 502.666 M 0.241(access to these! )W
-0.181 N (T)S
(he)S
-0.151 N 0.241(y might accidentall)W
0.241(y \(or deliber)W
(a)S
(tel)S
0.241(y\) modify the da)W
0.241(ta in tha)W
0.241(t da)W
0.241(ta str)W
(uctur)S
(e)S
(,)S
0.241( causing y)W
0.241(our libr)W
(ar)S
(y)S
60 514.666 M 0.503(functions to f)W
-0.1 N 0.503(ail \320 badl)W
(y)S
-0.652 N 0.503(. Ne)W
-0.251 N (v)S
-0.151 N 0.503(er r)W
(etur)S
0.503(n pointer)W
0.503(s or indices into ar)W
(r)S
(a)S
0.503(ys; al)W
-0.1 N (w)S
-0.1 N (a)S
0.503(ys hide the tr)W
0.503(ue ad)W
(dr)S
0.503(esses \(or indices\) b)W
(y)S
60 526.666 M (using something called a )S
(\322tok)S
-0.1 N (en.)S
-0.701 N (\323)S
60 541.666 M 1.142(Hiding da)W
1.142(ta str)W
(uctur)S
1.142(es also mak)W
-0.1 N 1.142(es y)W
1.142(our pr)W
(o)S
(g)S
(r)S
1.142(am or libr)W
(ar)S
1.142(y mor)W
1.142(e modular . F)W
-0.151 N 1.142(or e)W
-0.151 N (xample)S
(,)S
1.142( the queue mana)W
(g)S
1.142(er uses)W
60 553.666 M (ar)S
(r)S
(a)S
0.356(ys to r)W
(e)S
(pr)S
0.356(esent queues. )W
-0.181 N (T)S
0.356(his g)W
(i)S
-0.251 N (v)S
-0.151 N 0.356(es them a maxim)W
0.356(um siz)W
(e)S
0.356(. )W
-0.901 N (Y)S
-1.101 N 0.356(ou might decide tha)W
0.356(t link)W
-0.1 N 0.356(ed lists w)W
-0.1 N 0.356(ould be mor)W
0.356(e suit-)W
60 565.666 M (a)S
(b)S
0.006(le and w)W
-0.1 N 0.006(ant to r)W
(e)S
-0.251 N (wr)S
0.006(ite the r)W
0.006(outines. If y)W
0.006(ou ha)W
-0.2 N (v)S
-0.151 N 0.006(e pr)W
(oper)S
(l)S
0.006(y designed the interf)W
-0.1 N 0.006(ace and hid)W
0.006(den as m)W
(uc)S
0.006(h inf)W
(oma)S
0.006(tion and)W
60 577.666 M (da)S
0.15(ta as possib)W
(le)S
(,)S
0.15( the calling pr)W
(o)S
(g)S
(r)S
0.15(am need not be c)W
(hang)S
0.15(ed; ho)W
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
0.15( if y)W
0.15(ou ne)W
-0.151 N 0.15(glected this style of inf)W
(or)S
(ma)S
0.15(tion hiding)W
60 589.666 M 1.557(and inf)W
(or)S
(ma)S
1.557(tion a)W
(bstr)S
(action,)S
1.557( pr)W
(o)S
(g)S
(r)S
1.557(ams tha)W
1.557(t cor)W
(r)S
(ectl)S
1.557(y function with the cur)W
(r)S
1.557(ent r)W
(e)S
(pr)S
(esenta)S
1.557(tion might br)W
1.557(eak if y)W
(ou)S
60 601.666 M (c)S
(hang)S
0.558(ed tha)W
0.558(t r)W
(e)S
(pr)S
(esenta)S
0.558(tion \(because the caller assumed tha)W
0.558(t the queue elements ar)W
0.558(e in sequential inte)W
-0.151 N (g)S
0.558(er loca)W
(tions,)S
60 613.666 M (f)S
(or e)S
-0.151 N (xample\).)S
FmE
64 0 :M
f151 sf
( )S
67 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 628.666 M (Can\325)S
-0.841(t ha)W
(ppen.)S
FmE
68 0 :M
f57 sf
( )S
70 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.09 628.666 M -0.631( )W
-0.552 N -0.631(As the old sa)W
-0.151 N -0.631(w g)W
(oes,)S
-0.631( )W
(\322ne)S
-0.251 N (v)S
-0.151 N -0.631(er sa)W
-0.631(y )W
(\324ne)S
-0.251 N (v)S
-0.151 N (er)S
-0.552 N (.)S
-0.701 N (\325)S
(\323)S
-0.631( Impossib)W
-0.631(le cases ar)W
-0.631(e r)W
(ar)S
(el)S
-0.631(y tha)W
-0.631(t; most often,)W
-0.631( the)W
-0.151 N -0.631(y ar)W
-0.631(e mer)W
(el)S
(y)S
60 640.666 M (highl)S
0.815(y unlik)W
-0.1 N (el)S
(y)S
-0.652 N 0.815(. )W
-0.181 N (T)S
0.815(hink a)W
0.815(bout ho)W
-0.251 N 0.815(w those cases sould be handled)W
(,)S
0.815( and implement tha)W
0.815(t type of handling)W
0.815(. In the w)W
-0.1 N (or)S
(st)S
60 652.666 M (case)S
(,)S
0.018( c)W
(hec)S
0.018(k f)W
0.018(or w)W
(ha)S
0.018(t y)W
0.018(ou think is impossib)W
(le)S
(,)S
0.018( and pr)W
0.018(int an er)W
(r)S
0.018(or messa)W
(g)S
0.018(e if it occur)W
0.018(s. )W
-0.552 N 0.018(After all,)W
0.018( if y)W
0.018(ou modify the code)W
60 664.666 M (r)S
(e)S
(pea)S
(tedl)S
(y)S
-0.652 N (,)S
0.904( it is v)W
-0.151 N (er)S
0.904(y lik)W
-0.1 N (el)S
0.904(y tha)W
0.904(t one modi\336)W
(ca)S
0.904(tion will af)W
-0.251 N (f)S
0.904(ect other par)W
0.904(ts of the code and cause inconsistent ef)W
-0.251 N (f)S
(ects,)S
60 676.666 M (w)S
(hic)S
(h ma)S
(y lead to )S
(\322impossib)S
(le\323)S
( cases occur)S
(r)S
(ing)S
(.)S
FmE
60 684 468 24 rC
70 0 :M
( )S
72 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 695.667 M (\251 1998 b)S
(y Ma)S
(tt Bishop. )S
-0.552 N (All r)S
(ights r)S
(eser)S
(v)S
-0.151 N (ed)S
(.)S
FmE
endp
showpage
%%Page: 2 2
%%BeginPageSetup
initializepage
(Matt Bishop; page: 2 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
73 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
73 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
73 0 :M
f57 sf
( )S
75 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
76 0 :M
f70 sf
( )S
78 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
78 0 :M
f57 sf
( )S
80 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (2)S
FmE
80 0 :M
f151 sf
( )S
83 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 66.667 M (Ex)S
(er)S
-0.181 N -0.617(cise 2-1. )W
FmE
83 0 :M
f57 sf
( )S
85 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.16 66.667 M (Rela)S
-0.463(te the inf)W
(or)S
-0.463(mal descr)W
-0.463(iptions of the pr)W
-0.463(inciples of r)W
(ob)S
-0.2 N -0.463(ust pr)W
(o)S
(g)S
(r)S
-0.463(amming to the mor)W
-0.463(e f)W
(or)S
-0.2 N (-)S
111 78.667 M (mal pr)S
(inciples of g)S
(ood pr)S
(o)S
(g)S
(r)S
(amming style)S
(,)S
( suc)S
(h as cohesion and coupling)S
(,)S
( inf)S
(or)S
(ma)S
(tion a)S
(bstr)S
(action,)S
( )S
111 90.667 M (inf)S
(or)S
(ma)S
(tion hiding)S
(,)S
( and g)S
(ood documenta)S
(tion. )S
-0.181 N (T)S
(he point of this e)S
-0.151 N (x)S
-0.151 N (er)S
(cise is to sho)S
-0.251 N (w y)S
(ou tha)S
(t r)S
(ob)S
-0.2 N (ust pr)S
(o-)S
111 102.667 M (g)S
(r)S
(ams ar)S
(ise fr)S
(om wr)S
(iting code in a g)S
(ood style; w)S
(ha)S
(t y)S
(ou lear)S
(n in sc)S
(hool )S
FmE
86 0 :M
f181 sf
( )S
89 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.681 102.667 M (is)S
FmE
89 0 :M
f57 sf
( )S
91 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.013 102.667 M ( useful! )S
60 117.667 M (Rob)S
-0.2 N 0.506(ust pr)W
(o)S
(g)S
(r)S
0.506(amming is def)W
(ensi)S
-0.251 N (v)S
-0.151 N (e)S
(,)S
0.506( and the def)W
(ensi)S
-0.251 N (v)S
-0.151 N 0.506(e na)W
(tur)S
0.506(e pr)W
0.506(otects the pr)W
(o)S
(g)S
(r)S
0.506(am not onl)W
0.506(y fr)W
0.506(om those w)W
0.506(ho use y)W
(our)S
60 129.667 M (r)S
0.149(outine b)W
-0.2 N 0.149(ut also fr)W
0.149(om y)W
(our)S
(self)S
0.149(. Pr)W
(o)S
(g)S
(r)S
0.149(amming is not ma)W
(thema)S
0.149(tics; er)W
(r)S
(or)S
0.149(s occur)W
-0.552 N 0.149(. Good pr)W
(o)S
(g)S
(r)S
0.149(amming assumes this,)W
0.149( and)W
60 141.667 M (tak)S
-0.1 N -0.006(es ste)W
-0.006(ps to detect and r)W
(e)S
(por)S
-0.006(t those er)W
(r)S
(or)S
(s,)S
-0.006( inter)W
-0.006(nal as w)W
-0.006(ell as e)W
-0.151 N (xter)S
-0.006(nal. Be)W
-0.251 N (w)S
-0.1 N (ar)S
-0.006(e of e)W
-0.251 N (v)S
-0.151 N (er)S
-0.006(ything \320 e)W
-0.251 N (v)S
-0.151 N -0.006(en y)W
-0.006(our o)W
-0.251 N -0.006(wn code!)W
FmE
92 0 :M
f138 sf
( )S
95 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 165 M (3. Example of a F)S
(r)S
(a)S
(g)S
(ile Libr)S
(ar)S
(y)S
FmE
96 0 :M
f57 sf
( )S
98 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 182.667 M (T)S
-0.05(his libr)W
(ar)S
-0.05(y implements queues in a v)W
-0.151 N (er)S
-0.05(y str)W
(aightf)S
(orw)S
-0.1 N (ar)S
-0.05(d w)W
-0.1 N (a)S
(y)S
-0.652 N -0.05(. It\325)W
-0.552 N -0.05(s typical of w)W
(ha)S
-0.05(t man)W
-0.151 N -0.05(y C pr)W
(o)S
(g)S
(r)S
(ammer)S
-0.05(s w)W
-0.1 N -0.05(ould wr)W
(ite)S
(.)S
60 194.667 M (It\325)S
-0.552 N (s also v)S
-0.151 N (er)S
(y fr)S
(a)S
(g)S
(ile code)S
(. )S
-0.3 N (W)S
-0.801 N (e\325)S
-0.1 N (ll anal)S
(yz)S
(e it in detail to suppor)S
(t tha)S
(t sta)S
(tement.)S
60 209.667 M (T)S
0.09(he libr)W
(ar)S
0.09(y can handle an)W
-0.151 N 0.09(y n)W
0.09(umber of queues,)W
0.09( and w)W
0.09(hen a queue is cr)W
(ea)S
(ted)S
(,)S
0.09( its pointer is r)W
(etur)S
0.09(ned to the caller)W
-0.552 N 0.09(. )W
-0.181 N (T)S
(hr)S
(ee)S
60 221.667 M (entr)S
1.421(y points ar)W
1.421(e pr)W
(o)S
-0.151 N (vided:)S
1.421( )W
FmE
98 0 :M
f125 sf
( )S
100 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.05 221.667 M (qmanage)S
FmE
101 0 :M
f57 sf
( )S
103 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
207.707 221.667 M (,)S
1.421( f)W
1.421(or cr)W
(ea)S
1.421(ting or deleting a queue; )W
FmE
103 0 :M
f125 sf
( )S
105 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.142 221.667 M (put_on_queue)S
FmE
106 0 :M
f57 sf
( )S
108 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.797 221.667 M (,)S
1.421( f)W
1.421(or ad)W
1.421(ding an element to a)W
60 233.666 M -0.194(queue; and )W
FmE
108 0 :M
f125 sf
( )S
110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
105.705 233.666 M (take_off_queue)S
FmE
111 0 :M
f57 sf
( )S
113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.794 233.666 M (,)S
-0.194( f)W
-0.194(or deleting an element fr)W
-0.194(om a queue)W
-0.194(. )W
-0.552 N -0.194(All \336)W
-0.194(les calling this r)W
-0.194(outine m)W
-0.194(ust inc)W
-0.194(lude the header)W
60 245.666 M (\336)S
(le )S
FmE
113 0 :M
f125 sf
( )S
115 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
75.276 245.666 M (fqlib.h)S
FmE
116 0 :M
f57 sf
( )S
118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.111 245.666 M (,)S
( w)S
(hic)S
(h de\336)S
(nes the queue str)S
(uctur)S
(e)S
(. )S
60 260.666 M (Re)S
-0.251 N (vie)S
-0.251 N 0.037(wing the str)W
(uctur)S
0.037(e and libr)W
(ar)S
0.037(y functions will illumina)W
0.037(te the pr)W
(ob)S
0.037(lems with fr)W
(a)S
(g)S
0.037(ile code)W
(,)S
0.037( and sho)W
-0.251 N 0.037(w w)W
(h)S
-0.051 N 0.037(y the usual)W
60 272.666 M (C coding style is so fr)S
(a)S
(g)S
(ile)S
(.)S
FmE
118 0 :M
f138 sf
( )S
121 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 298 M (3.1. )S
-0.36 N (T)S
(he Queue Str)S
(uctur)S
-0.217 N (e)S
FmE
122 0 :M
f57 sf
( )S
124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 313.666 M (T)S
0.758(he \336)W
0.758(le )W
FmE
125 0 :M
f125 sf
( )S
127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
94.838 313.666 M (fqlib.h)S
FmE
127 0 :M
f57 sf
( )S
129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
120.673 313.666 M 0.758( de\336)W
0.758(nes the queue str)W
(uctur)S
0.758(e and the maxim)W
0.758(um n)W
0.758(umber of elements in the queue)W
0.758(. Because pr)W
(o)S
(g)S
(r)S
(ams)S
60 325.666 M 0.546(calling the queue functions m)W
0.546(ust pass a pointer to the queue)W
(,)S
0.546( the str)W
(uctur)S
0.546(e m)W
0.546(ust be visib)W
0.546(le to the calling pr)W
(ocedur)S
(es)S
60 337.666 M (\(w)S
(hic)S
0.606(h need to kno)W
-0.251 N 0.606(w the str)W
(uctur)S
0.606(e to de\336)W
0.606(ne the queue pointer type Q)W
-0.1 N 0.606(UEUE *\). Hence this \336)W
0.606(le m)W
0.606(ust be inc)W
0.606(luded in)W
60 349.666 M (pr)S
(o)S
(g)S
(r)S
(ams tha)S
(t call the queue libr)S
(ar)S
(y functions.)S
60 364.666 M (T)S
(he header \336)S
(le contains:)S
FmE
130 0 :M
f216 sf
( )S
136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 379.666 M 0 0 12(/*)FmTx
60 391.666 M 0 0 102( * various macros)FmTx
60 403.666 M 0 0 18( */)FmTx
60 415.666 M 0 0 84(#define MAXELT)FmTx
24 N 0 0 24(1000)FmTx
12 N 0 0 228(/* max number of elements per queue */)FmTx
60 439.666 M 0 0 12(/*)FmTx
60 451.666 M 0 0 132( * the queue structure)FmTx
60 463.666 M 0 0 18( */)FmTx
60 475.666 M 0 0 132(typedef struct queue {)FmTx
96 487.666 M 0 0 48(int *que)FmTx
0 0 6(;)FmTx
54 N 0 0 240(/* the actual array of queue elements */)FmTx
96 499.666 M 0 0 54(int head;)FmTx
54 N 0 0 216(/* head index in que of the queue */)FmTx
96 511.666 M 0 0 60(int count;)FmTx
48 N 0 0 198(/* number of elements in queue */)FmTx
96 523.666 M 0 0 54(int size;)FmTx
54 N 0 0 222(/* max number of elements in queue */)FmTx
60 535.666 M 0 0 48(} QUEUE;)FmTx
60 559.666 M 0 0 12(/*)FmTx
60 571.666 M 0 0 144( * the library functions)FmTx
60 583.666 M 0 0 18( */)FmTx
60 595.666 M 0 0 198(void qmanage\(QUEUE **, int, int\);)FmTx
54 N 0 0 180(/* create or delete a queue */)FmTx
60 607.666 M 0 0 192(void put_on_queue\(QUEUE *, int\);)FmTx
60 N 0 0 108(/* add to queue */)FmTx
60 619.666 M 0 0 216(void take_off_queue\(QUEUE *, int *\);)FmTx
36 N 0 0 120(/* pull off queue */)FmTx
FmE
136 0 :M
f57 sf
( )S
138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 634.666 M (As indica)S
(ted)S
(,)S
( the queue mana)S
(g)S
(ement functions ar)S
(e:)S
96 649.666 M (qmana)S
(g)S
(e\(\))S
65.251 N (cr)S
(ea)S
(te and delete queues;)S
96 664.666 M (put_on_queue\(\))S
44.689 N (ad)S
(d an element to the end of the queue)S
96 679.666 M (tak)S
-0.1 N (e_of)S
-0.251 N (f_queue\(\))S
39.509 N (tak)S
-0.1 N (e an element fr)S
(om the head of the queue)S
60 694.666 M (T)S
0.397(his or)W
-0.181 N (g)S
-0.051 N (aniza)S
0.397(tion pr)W
(o)S
-0.151 N 0.397(vides the \336)W
(r)S
0.397(st e)W
-0.251 N 0.397(vidence of fr)W
(a)S
(g)S
(ility)S
-0.652 N 0.397(. )W
-0.181 N (T)S
0.397(he caller will use a pointer to a Q)W
-0.1 N 0.397(UEUE str)W
(uctur)S
0.397(e; and as)W
FmE
60 60 45 43 rC
138 0 :M
FrMacBegin
60 60 45 42.001 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
:imsv 39 39 1 5 [45 0 0 48.486 60 60] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
138 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 3 3
%%BeginPageSetup
initializepage
(Matt Bishop; page: 3 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
138 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
138 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
138 0 :M
f57 sf
( )S
140 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
141 0 :M
f70 sf
( )S
143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
143 0 :M
f57 sf
( )S
145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (3)S
60 66.667 M 0.163(the la)W
(y)S
0.163(out of tha)W
0.163(t str)W
(uctur)S
(e)S
(,)S
0.163( and its loca)W
(tion,)S
0.163( is kno)W
-0.251 N (wn,)S
0.163( the caller can b)W
0.163(ypass the queue libr)W
(ar)S
0.163(y to obtain da)W
0.163(ta fr)W
0.163(om the)W
60 78.667 M 0.628(queues dir)W
(ectl)S
0.628(y \320 or alter inf)W
(or)S
(ma)S
0.628(tion in the queues,)W
0.628( or)W
(inf)S
(or)S
(ma)S
0.628(tion  tha)W
0.628(t the libr)W
(ar)S
0.628(y uses to mana)W
(g)S
0.628(e the queues. F)W
-0.151 N (or)S
60 90.667 M (e)S
-0.151 N (xample)S
(,)S
-0.118( if one w)W
-0.1 N -0.118(anted to c)W
(hang)S
-0.118(e the n)W
-0.118(umber of elements in the queue without calling a queue mana)W
(g)S
-0.118(ement function,)W
60 102.667 M (one can sa)S
(y:)S
FmE
145 0 :M
f216 sf
( )S
151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
225 117.667 M 0 0 84(qptr->count = )FmTx
FmE
151 0 :M
f246 sf
( )S
157 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309 117.667 M 0 0 48(newvalue)FmTx
FmE
157 0 :M
f216 sf
( )S
163 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
357 117.667 M 0 0 6(;)FmTx
FmE
163 0 :M
f57 sf
( )S
165 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 132.667 M (w)S
(her)S
0.907(e )W
FmE
166 0 :M
f125 sf
( )S
168 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
87.831 132.667 M (qptr)S
FmE
168 0 :M
f57 sf
( )S
170 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.499 132.667 M 0.907( is a pointer to the r)W
(ele)S
-0.251 N (v)S
-0.251 N 0.907(ant queue and )W
FmE
171 0 :M
f125 sf
( )S
173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
264.601 132.667 M (newvalue)S
FmE
173 0 :M
f57 sf
( )S
175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.365 132.667 M 0.907( the e)W
-0.151 N (xpr)S
0.907(ession f)W
0.907(or the ne)W
-0.251 N 0.907(w v)W
-0.251 N 0.907(alue to be assigned to the)W
60 144.667 M (queue\325)S
-0.552 N (s counter)S
-0.552 N (.)S
60 159.667 M (T)S
0.636(he use of the macr)W
0.636(o )W
FmE
176 0 :M
f151 sf
( )S
179 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.082 159.667 M (MAXEL)S
-0.92 N (T)S
FmE
179 0 :M
f57 sf
( )S
181 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.043 159.667 M 0.636( also limits the r)W
(eusa)S
0.636(bility of the libr)W
(ar)S
(y)S
-0.652 N 0.636(. If the siz)W
0.636(e of the queues is c)W
(hang)S
(ed)S
(,)S
0.636( the)W
60 171.667 M (libr)S
(ar)S
-0.127(y m)W
-0.127(ust be r)W
(ecompiled)S
-0.127(. Ho)W
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
-0.127( as the inc)W
-0.127(lude \336)W
-0.127(le macr)W
-0.127(o has c)W
(hang)S
(ed)S
(,)S
-0.127( the caller)W
-0.127(s of the queue libr)W
(ar)S
-0.127(y m)W
-0.127(ust also)W
60 183.667 M 1.855(be r)W
1.855(ecompiled; otherwise)W
(,)S
1.855( the pointer)W
1.855(s ma)W
1.855(y be in)W
-0.4 N (v)S
-0.251 N 1.855(alid \(de)W
1.855(pending on the ar)W
(c)S
(hitectur)S
1.855(e\) and if a r)W
1.855(outine dir)W
(ectl)S
(y)S
60 195.667 M (accesses an)S
-0.151 N (y \336)S
(eld in the queue str)S
(uctur)S
(e)S
(,)S
( not r)S
(ecompiling tha)S
(t \336)S
(le will cause incor)S
(r)S
(ect r)S
(esults.)S
60 210.666 M (So,)S
( the pr)S
(ob)S
(lem with inc)S
(luding this header \336)S
(le in the caller)S
(s\325)S
-0.742 N ( \336)S
(les is:)S
FmE
181 0 :M
f286 sf
( )S
183 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 225.666 M (+)S
FmE
184 0 :M
f57 sf
( )S
186 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 225.666 M (T)S
(he caller)S
(s ha)S
-0.2 N (v)S
-0.151 N (e access to the inter)S
(nal elements of the queue str)S
(uctur)S
(e)S
(.)S
FmE
187 0 :M
f138 sf
( )S
190 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 251 M (3.2. )S
-0.36 N (T)S
(he Queue Mana)S
(g)S
(ement Function)S
FmE
191 0 :M
f57 sf
( )S
193 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 266.666 M (T)S
(he \336)S
(r)S
(st function contr)S
(ols the cr)S
(ea)S
(tion and deletion of stac)S
(ks:)S
FmE
193 0 :M
f216 sf
( )S
199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 281.666 M 0 0 12(/*)FmTx
60 293.666 M 0 0 162( * create or delete a queue)FmTx
60 305.666 M 0 0 12( *)FmTx
60 317.666 M 0 0 78( * PARAMETERS)FmTx
0 0 6(:)FmTx
24 N 0 0 72(QUEUE **qptr)FmTx
36 N 0 0 186(space for, or pointer to, queue)FmTx
60 329.666 M 0 0 18( * )FmTx
90 N 0 0 48(int flag)FmTx
0 0 6(1)FmTx
18 N 0 0 6( )FmTx
30 N 0 0 156(1 for create, 0 for delete)FmTx
60 341.666 M 0 0 12( *)FmTx
96 N 0 0 48(int size)FmTx
60 N 0 0 126(max elements in queue)FmTx
60 353.666 M 0 0 18( */)FmTx
60 365.666 M 0 0 276(void qmanage\(QUEUE **qptr, int flag, int size\))FmTx
60 377.666 M 0 0 6({)FmTx
96 389.666 M 0 0 60(if \(flag\){)FmTx
132 401.666 M 0 0 156(/* allocate a new queue */)FmTx
132 413.666 M 0 0 180(*qptr = malloc\(sizeof\(QUEUE\)\);)FmTx
132 425.666 M 0 0 210(\(*qptr\)->head = \(*qptr\)->count = 0;)FmTx
132 437.666 M 0 0 252(\(*qptr\)->que = malloc\(size * sizeof\(int\)\);)FmTx
132 449.666 M 0 0 126(\(*qptr\)->size = size;)FmTx
96 461.666 M 0 0 6(})FmTx
96 473.666 M 0 0 30(else{)FmTx
132 485.666 M 0 0 180(/* delete the current queue */)FmTx
132 497.666 M 0 0 156(\(void\) free\(\(*qptr\)->que\);)FmTx
132 509.666 M 0 0 114(\(void\) free\(*qptr\);)FmTx
96 521.666 M 0 0 6(})FmTx
60 533.666 M 0 0 6(})FmTx
FmE
199 0 :M
f57 sf
( )S
201 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 548.666 M 0.106(Glancing o)W
-0.151 N (v)S
-0.151 N 0.106(er it,)W
0.106( w)W
0.106(e see it uses lo)W
(g)S
0.106(ical cohesion because the par)W
0.106(ameter )W
FmE
202 0 :M
f125 sf
( )S
204 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
347.229 548.666 M (\337)S
(ag)S
FmE
204 0 :M
f57 sf
( )S
206 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
362.229 548.666 M 0.106( indica)W
0.106(tes w)W
(hic)S
0.106(h of tw)W
-0.1 N 0.106(o distinct,)W
0.106( lo)W
(g)S
(icall)S
(y)S
60 560.666 M (se)S
(par)S
(a)S
0.325(te oper)W
(a)S
0.325(tions ar)W
0.325(e to be perf)W
(or)S
(med)S
0.325(. )W
-0.181 N (T)S
0.325(he oper)W
(a)S
0.325(tions could be wr)W
0.325(itten as se)W
(par)S
(a)S
0.325(te functions. )W
-0.181 N (T)S
(ha)S
0.325(t this r)W
0.325(outine has)W
60 572.666 M (suc)S
(h poor cohesion does not speak w)S
(ell f)S
(or its r)S
(ob)S
-0.2 N (ustness.)S
60 587.666 M 0.104(Consider the par)W
0.104(ameter list,)W
0.104( and the calling sequence)W
0.104(. )W
-0.181 N (T)S
0.104(he )W
FmE
207 0 :M
f125 sf
( )S
209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
294.826 587.666 M (\337)S
(ag)S
FmE
209 0 :M
f57 sf
( )S
211 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.826 587.666 M 0.104( par)W
0.104(ameter is an inte)W
-0.151 N (g)S
0.104(er tha)W
0.104(t indica)W
0.104(tes w)W
0.104(hether a queue)W
60 599.666 M -0.092(is to be cr)W
(ea)S
-0.092(ted \(if )W
FmE
212 0 :M
f125 sf
( )S
214 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
134.216 599.666 M (\337)S
(ag)S
FmE
214 0 :M
f57 sf
( )S
216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
149.216 599.666 M -0.092( is non-z)W
(er)S
-0.092(o\) or deleted \(if )W
FmE
217 0 :M
f125 sf
( )S
219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.822 599.666 M (\337)S
(ag)S
FmE
219 0 :M
f57 sf
( )S
221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.822 599.666 M -0.092( is z)W
(er)S
-0.092(o\). )W
-0.181 N (T)S
-0.092(he )W
FmE
222 0 :M
f125 sf
( )S
224 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.519 599.666 M (size)S
FmE
224 0 :M
f57 sf
( )S
226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
340.514 599.666 M -0.092( par)W
-0.092(ameter g)W
(i)S
-0.251 N (v)S
-0.151 N -0.092(es the maxim)W
-0.092(um n)W
-0.092(umber of inte-)W
60 611.666 M (g)S
(er)S
(s to be allo)S
-0.251 N (w)S
(ed in the queue)S
(. Suppose a caller inter)S
(c)S
(hang)S
(ed the tw)S
-0.1 N (o:)S
FmE
227 0 :M
f216 sf
( )S
233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228 626.666 M 0 0 132(qmanage\(&qptr, 85, 1\);)FmTx
FmE
233 0 :M
f57 sf
( )S
235 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 641.666 M (T)S
0.123(he )W
FmE
235 0 :M
f125 sf
( )S
237 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78.17 641.666 M (qmanage)S
FmE
238 0 :M
f57 sf
( )S
240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114.827 641.666 M 0.123( r)W
0.123(outine w)W
-0.1 N 0.123(ould not detect this as an er)W
(r)S
(or)S
-0.4 N (,)S
0.123( and will alloca)W
0.123(te a queue with r)W
0.123(oom f)W
0.123(or 1 element r)W
(a)S
0.123(ther than)W
60 653.666 M (85. )S
-0.181 N (T)S
(his ease of confusion in the par)S
(ameter)S
(s is the \336)S
(r)S
(st pr)S
(ob)S
(lem,)S
( and one tha)S
(t cannot be c)S
(hec)S
(k)S
-0.1 N (ed f)S
(or easil)S
(y)S
-0.652 N (.)S
FmE
240 0 :M
f286 sf
( )S
242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 668.666 M (+)S
FmE
243 0 :M
f57 sf
( )S
245 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 668.666 M (T)S
(he or)S
(der of elements in the par)S
(ameter list is not c)S
(hec)S
(k)S
-0.1 N (ed)S
(.)S
60 683.666 M (Ne)S
-0.151 N (xt,)S
0.055( consider the )W
FmE
245 0 :M
f125 sf
( )S
247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.537 683.666 M (\337)S
(ag)S
FmE
248 0 :M
f57 sf
( )S
250 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.537 683.666 M 0.055( ar)W
-0.181 N 0.055(gument. )W
-0.3 N (W)S
0.055(hen does it mean to cr)W
(ea)S
0.055(te a queue and w)W
0.055(hen does it mean to delete a queue? F)W
-0.151 N (or)S
60 695.666 M 0.396(this function,)W
0.396( the intention is tha)W
0.396(t 1 means cr)W
(ea)S
0.396(te and 0 means delete)W
(,)S
0.396( b)W
-0.2 N 0.396(ut the coding style has c)W
(hang)S
0.396(ed this to allo)W
-0.251 N (w)S
FmE
endp
showpage
%%Page: 4 4
%%BeginPageSetup
initializepage
(Matt Bishop; page: 4 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
250 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
250 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
250 0 :M
f57 sf
( )S
252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
253 0 :M
f70 sf
( )S
255 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
255 0 :M
f57 sf
( )S
257 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (4)S
60 66.667 M (an)S
-0.151 N 0.305(y non-z)W
(er)S
0.305(o v)W
-0.251 N 0.305(alue to mean cr)W
(ea)S
(te)S
0.305(. But ther)W
0.305(e is little connection betw)W
0.305(een 1 and cr)W
(ea)S
(te)S
(,)S
0.305( and 0 and delete)W
0.305(. So psyc)W
(ho-)S
60 78.667 M (lo)S
(g)S
(icall)S
(y)S
-0.652 N (,)S
-0.178( the pr)W
(o)S
(g)S
(r)S
-0.178(ammer ma)W
-0.178(y not r)W
-0.178(emember w)W
(hic)S
-0.178(h n)W
-0.178(umber to use and this can cause a queue to be destr)W
(o)S
-0.1 N (y)S
-0.178(ed w)W
-0.178(hen it)W
60 90.667 M 0.052(should ha)W
-0.2 N (v)S
-0.151 N 0.052(e been cr)W
(ea)S
(ted)S
0.052(. Using )W
FmE
257 0 :M
f125 sf
( )S
259 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.079 90.667 M (enum)S
FmE
260 0 :M
f57 sf
( )S
262 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.736 90.667 M 0.052(s w)W
-0.1 N 0.052(ould help her)W
0.052(e if the libr)W
(ar)S
0.052(y is compiled with the pr)W
(o)S
(g)S
(r)S
(am,)S
0.052( b)W
-0.2 N 0.052(ut if the libr)W
(ar)S
(y)S
60 102.667 M (is simpl)S
(y loaded)S
(,)S
( )S
FmE
262 0 :M
f125 sf
( )S
264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
130.547 102.667 M (enum)S
FmE
265 0 :M
f57 sf
( )S
267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
152.205 102.667 M (s do not help as the elements ar)S
(e tr)S
(ansla)S
(ted into inte)S
-0.151 N (g)S
(er)S
(s \(so no type c)S
(hec)S
(king can be done\).)S
FmE
267 0 :M
f286 sf
( )S
269 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 117.667 M (+)S
FmE
270 0 :M
f57 sf
( )S
272 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 117.667 M (T)S
(he v)S
-0.251 N (alue of the \337)S
(a)S
(g par)S
(ameter is arbitr)S
(ar)S
(y)S
-0.652 N (.)S
60 132.667 M (T)S
0.346(he \336)W
(r)S
0.346(st par)W
0.346(ameter is a pointer to a pointer \320 necessar)W
0.346(y w)W
0.346(hen a v)W
-0.251 N 0.346(alue is r)W
(etur)S
0.346(ned thr)W
0.346(ough the par)W
0.346(ameter list,)W
0.346( as all C)W
60 144.667 M 0.098(function ar)W
-0.181 N 0.098(guments ar)W
0.098(e passed b)W
0.098(y v)W
-0.251 N (alue)S
0.098(. P)W
-0.151 N 0.098(assing a pointer pr)W
(o)S
-0.151 N 0.098(vides the call b)W
0.098(y r)W
(ef)S
(er)S
0.098(ence mec)W
0.098(hanism. Ho)W
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
0.098( a call)W
60 156.667 M (b)S
0.352(y r)W
(ef)S
(er)S
0.352(ence usuall)W
0.352(y uses a singl)W
0.352(y indir)W
0.352(ect pointer; if a doub)W
(l)S
0.352(y indir)W
0.352(ect pointer is used)W
(,)S
0.352( pr)W
(o)S
(g)S
(r)S
(ammer)S
0.352(s will mak)W
-0.1 N 0.352(e mis-)W
60 168.667 M (tak)S
-0.1 N 0.371(es \(speci\336)W
(call)S
(y)S
-0.652 N (,)S
0.371( pass a singl)W
0.371(y indir)W
0.371(ect pointer\). In g)W
(ener)S
(al,)S
0.371( it is better to a)W
-0.2 N (v)S
-0.2 N 0.371(oid call b)W
0.371(y r)W
(ef)S
(er)S
0.371(ence; w)W
0.371(hen it is neces-)W
60 180.667 M (sar)S
(y)S
-0.652 N (,)S
( do not use m)S
(ultiple le)S
-0.251 N (v)S
-0.151 N (els of indir)S
(ection unless a)S
(bsolutel)S
(y necessar)S
(y)S
-0.652 N (.)S
FmE
272 0 :M
f286 sf
( )S
274 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 195.667 M (+)S
FmE
275 0 :M
f57 sf
( )S
277 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 195.667 M (Using pointer)S
(s to pointer)S
(s causes er)S
(r)S
(or)S
(s in function calls.)S
60 210.666 M (T)S
1.065(he thir)W
1.065(d set of pr)W
(ob)S
1.065(lems ar)W
1.065(ises fr)W
1.065(om a f)W
-0.1 N (ailur)S
1.065(e to c)W
(hec)S
1.065(k par)W
(ameter)S
1.065(s. F)W
(ir)S
1.065(st look a)W
1.065(t queue cr)W
(ea)S
1.065(tion. Suppose )W
FmE
278 0 :M
f125 sf
( )S
280 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
501.1 210.666 M (qptr)S
FmE
280 0 :M
f57 sf
( )S
282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
517.767 210.666 M 1.065( is)W
FmE
283 0 :M
f151 sf
( )S
286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 222.666 M (NULL)S
FmE
286 0 :M
f57 sf
( )S
288 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.108 222.666 M 0.496( or an in)W
-0.4 N (v)S
-0.251 N 0.496(alid pointer)W
-0.552 N 0.496(. )W
-0.181 N (T)S
0.496(hen the line containing )W
FmE
288 0 :M
f125 sf
( )S
290 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.021 222.666 M (malloc)S
FmE
291 0 :M
f57 sf
( )S
293 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.235 222.666 M 0.496( will cause a se)W
-0.151 N (gmenta)S
0.496(tion f)W
-0.1 N 0.496(ault. )W
-0.552 N (Also,)S
0.496( suppose )W
FmE
293 0 :M
f125 sf
( )S
295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
503.341 222.666 M (size)S
FmE
296 0 :M
f57 sf
( )S
298 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
518.336 222.666 M 0.496( is)W
60 234.666 M (non-positi)S
-0.251 N (v)S
-0.151 N (e)S
0.277(. )W
-0.3 N (W)S
(ha)S
0.277(t ha)W
0.277(ppens w)W
0.277(hen the queue is alloca)W
0.277(ted \(the second )W
FmE
298 0 :M
f125 sf
( )S
300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
337.796 234.666 M (malloc)S
FmE
301 0 :M
f57 sf
( )S
303 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.01 234.666 M 0.277(\)? If )W
FmE
303 0 :M
f125 sf
( )S
305 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384.985 234.666 M (size)S
FmE
306 0 :M
f57 sf
( )S
308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
399.98 234.666 M 0.277( is 0,)W
0.277( most )W
FmE
308 0 :M
f125 sf
( )S
310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
444.701 234.666 M (malloc)S
FmE
311 0 :M
f57 sf
( )S
313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
471.915 234.666 M 0.277(s will r)W
(etur)S
0.277(n a)W
FmE
313 0 :M
f151 sf
( )S
316 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 246.666 M (NULL)S
FmE
317 0 :M
f57 sf
( )S
319 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
91.108 246.666 M 0.338( pointer)W
-0.4 N (,)S
0.338( b)W
-0.2 N 0.338(ut this is not uni)W
-0.251 N (v)S
-0.151 N (er)S
0.338(sal. If )W
FmE
319 0 :M
f125 sf
( )S
321 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.104 246.666 M (size)S
FmE
322 0 :M
f57 sf
( )S
324 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
251.099 246.666 M 0.338( is ne)W
-0.151 N (g)S
-0.051 N (a)S
(ti)S
-0.251 N (v)S
-0.151 N (e)S
(,)S
0.338( the r)W
0.338(esult is implementa)W
0.338(tion de)W
0.338(pendent and ma)W
0.338(y cause a)W
60 258.666 M (se)S
-0.151 N (gmenta)S
(tion viola)S
(tion. In either case)S
(,)S
( the r)S
(esult is unpr)S
(edicta)S
(b)S
(le)S
(.)S
60 273.666 M (No)S
-0.251 N 0.154(w look a)W
0.154(t queue deletion. )W
-0.181 N (T)S
0.154(he par)W
0.154(ameter )W
FmE
324 0 :M
f125 sf
( )S
326 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
236.679 273.666 M (size)S
FmE
327 0 :M
f57 sf
( )S
329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
251.674 273.666 M 0.154( is ir)W
(r)S
(ele)S
-0.251 N (v)S
-0.251 N (ant,)S
0.154( b)W
-0.2 N 0.154(ut suppose )W
FmE
329 0 :M
f125 sf
( )S
331 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
356.708 273.666 M (qptr)S
FmE
332 0 :M
f57 sf
( )S
334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.376 273.666 M 0.154( or )W
FmE
334 0 :M
f125 sf
( )S
336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
387.011 273.666 M (*qptr)S
FmE
337 0 :M
f57 sf
( )S
339 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
408.679 273.666 M 0.154( is )W
FmE
339 0 :M
f151 sf
( )S
342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
420.654 273.666 M (NULL)S
FmE
343 0 :M
f57 sf
( )S
345 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
451.762 273.666 M 0.154(. )W
-0.181 N (T)S
0.154(hen the r)W
0.154(esult of)W
FmE
345 0 :M
f125 sf
( )S
347 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 285.666 M (fr)S
-0.371 N (ee)S
FmE
348 0 :M
f57 sf
( )S
350 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
75.173 285.666 M 0.604( is unde\336)W
0.604(ned and ma)W
0.604(y r)W
0.604(esult in a se)W
-0.151 N (gmenta)S
0.604(tion f)W
-0.1 N 0.604(ault. )W
-0.3 N (W)S
-0.801 N (or)S
(se)S
(,)S
0.604( ima)W
(g)S
0.604(ine the par)W
0.604(ameter is not )W
FmE
350 0 :M
f151 sf
( )S
353 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
442.241 285.666 M (NULL)S
FmE
353 0 :M
f57 sf
( )S
355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
473.35 285.666 M 0.604( b)W
-0.2 N 0.604(ut instead a)W
60 297.666 M 0.019(meaningless ad)W
(dr)S
0.019(ess. )W
-0.181 N (T)S
0.019(his is almost impossib)W
0.019(le to ca)W
(tc)S
0.019(h bef)W
(or)S
0.019(e the call,)W
0.019( and causes se)W
-0.151 N (gmenta)S
0.019(tion viola)W
0.019(tions \(if luc)W
(k)S
-0.151 N (y\))S
60 309.666 M (or v)S
-0.151 N (er)S
(y od)S
(d beha)S
-0.2 N (vior afterw)S
-0.1 N (ar)S
(ds \(if not\).)S
FmE
356 0 :M
f286 sf
( )S
358 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 324.666 M (+)S
FmE
359 0 :M
f57 sf
( )S
361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 324.666 M (T)S
(he par)S
(ameter v)S
-0.251 N (alues ar)S
(e not sanity c)S
(hec)S
(k)S
-0.1 N (ed)S
(.)S
60 339.666 M (T)S
(he calling sequence is not c)S
(hec)S
(k)S
-0.1 N (ed either)S
-0.552 N (. Suppose one deletes a queue bef)S
(or)S
(e cr)S
(ea)S
(ting it:)S
FmE
361 0 :M
f216 sf
( )S
367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 354.666 M 0 0 126(qmanage\(&qptr, 0, 1\);)FmTx
96 366.666 M 0 0 84(     /* ... */)FmTx
96 378.666 M 0 0 138(qmanage\(&qptr, 1, 100\);)FmTx
FmE
367 0 :M
f57 sf
( )S
369 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 393.666 M (T)S
0.529(his w)W
-0.1 N 0.529(ould either cause a se)W
-0.151 N (gmenta)S
0.529(tion viola)W
0.529(tion w)W
0.529(hen called)W
(,)S
0.529( or the r)W
0.529(eleasing of unalloca)W
0.529(ted memor)W
0.529(y; in the la)W
(tter)S
60 405.666 M (case)S
(,)S
0.015( the pr)W
(o)S
(g)S
(r)S
0.015(am will pr)W
(oba)S
(b)S
(l)S
0.015(y cr)W
0.015(ash la)W
0.015(ter on,)W
0.015( with little indica)W
0.015(tion of w)W
(h)S
-0.051 N (y)S
-0.652 N 0.015(. )W
-0.552 N (Ag)S
-0.051 N (ain,)S
0.015( the pr)W
(ob)S
0.015(lem is tha)W
0.015(t )W
FmE
370 0 :M
f125 sf
( )S
372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
470.499 405.666 M (qmanage)S
FmE
372 0 :M
f57 sf
( )S
374 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
507.156 405.666 M 0.015( does)W
60 417.666 M (not c)S
(hec)S
(k tha)S
(t )S
FmE
375 0 :M
f125 sf
( )S
377 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.589 417.666 M (qptr)S
FmE
377 0 :M
f57 sf
( )S
379 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
135.256 417.666 M ( r)S
(ef)S
(er)S
(s to a v)S
-0.251 N (alid queue)S
(. Ho)S
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
( her)S
(e\325)S
-0.552 N (s a mor)S
(e subtle v)S
-0.251 N (ar)S
(ia)S
(tion of this pr)S
(ob)S
(lem:)S
FmE
380 0 :M
f216 sf
( )S
386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 432.666 M 0 0 138(qmanage\(&qptr, 1, 100\);)FmTx
96 444.666 M 0 0 54(/* ... */)FmTx
96 456.666 M 0 0 126(qmanage\(&qptr, 0, 1\);)FmTx
96 468.666 M 0 0 54(/* ... */)FmTx
96 480.666 M 0 0 126(qmanage\(&qptr, 0, 1\);)FmTx
FmE
386 0 :M
f57 sf
( )S
388 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 495.666 M (No)S
-0.251 N 0.089(w a queue is deleted twice)W
0.089(. )W
-0.552 N 0.089(Attempting to )W
FmE
388 0 :M
f125 sf
( )S
390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240.682 495.666 M (fr)S
-0.371 N (ee)S
FmE
391 0 :M
f57 sf
( )S
393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
255.855 495.666 M 0.089( space tha)W
0.089(t has alr)W
(ead)S
0.089(y been dealloca)W
0.089(ted causes an unde\336)W
0.089(ned action,)W
60 507.666 M (usuall)S
(y a se)S
-0.151 N (gmenta)S
(tion viola)S
(tion.)S
FmE
393 0 :M
f286 sf
( )S
395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 522.666 M (+)S
FmE
396 0 :M
f57 sf
( )S
398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 522.666 M (T)S
(he user can delete an unalloca)S
(ted queue)S
(,)S
( or a pr)S
(e)S
-0.251 N (viousl)S
(y deleted queue)S
(.)S
60 537.666 M -0.154(Consider the bod)W
-0.154(y of the r)W
(outine)S
-0.154(. )W
-0.3 N (W)S
(ha)S
-0.154(t ha)W
-0.154(ppens if either )W
FmE
398 0 :M
f125 sf
( )S
400 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
286.139 537.666 M (malloc)S
FmE
401 0 :M
f57 sf
( )S
403 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.353 537.666 M -0.154( f)W
-0.1 N (ails,)S
-0.154( and r)W
(etur)S
-0.154(ns )W
FmE
403 0 :M
f151 sf
( )S
406 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
384.55 537.666 M (NULL)S
FmE
407 0 :M
f57 sf
( )S
409 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
415.658 537.666 M -0.154(? )W
-0.181 N (T)S
-0.154(he subsequent r)W
(ef)S
(er)S
(ences)S
60 549.666 M (to )S
FmE
409 0 :M
f125 sf
( )S
411 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
70.278 549.666 M (qptr)S
FmE
412 0 :M
f57 sf
( )S
414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
86.946 549.666 M ( to f)S
-0.1 N (ault,)S
( as the)S
-0.151 N (y ar)S
(e r)S
(ef)S
(er)S
(ences thr)S
(ough a )S
FmE
414 0 :M
f151 sf
( )S
417 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252.153 549.666 M (NULL)S
FmE
418 0 :M
f57 sf
( )S
420 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.262 549.666 M ( pointer)S
-0.552 N (. Hence:)S
FmE
420 0 :M
f286 sf
( )S
422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 564.666 M (+)S
FmE
423 0 :M
f57 sf
( )S
425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 564.666 M (Chec)S
(k all r)S
(etur)S
(n v)S
-0.251 N (alues.)S
60 579.666 M (One subtle pr)S
(ob)S
(lem ar)S
(ises fr)S
(om o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w)S
-0.652 N (. Consider the e)S
-0.151 N (xpr)S
(ession)S
FmE
425 0 :M
f216 sf
( )S
431 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 594.666 M 0 0 108(size * sizeof\(int\))FmTx
FmE
431 0 :M
f57 sf
( )S
433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 612.333 M -0.076(in the \336)W
(r)S
-0.076(st call to )W
FmE
434 0 :M
f125 sf
( )S
436 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
129.879 612.333 M (malloc)S
FmE
436 0 :M
f57 sf
( )S
438 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
157.094 612.333 M -0.076(. Suppose )W
FmE
439 0 :M
f125 sf
( )S
441 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.328 612.333 M (size)S
FmE
441 0 :M
f57 sf
( )S
443 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.323 612.333 M -0.076( is 2)W
FmE
444 0 :M
f70 sf
( )S
446 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
229.838 608.333 M (31)S
FmE
446 0 :M
f57 sf
( )S
448 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
237.838 612.333 M (,)S
-0.076( and an inte)W
-0.151 N (g)S
-0.076(er is 4 b)W
-0.076(ytes \(a common v)W
-0.251 N -0.076(alue\). )W
-0.181 N (T)S
-0.076(hen this e)W
-0.151 N (xpr)S
-0.076(ession e)W
-0.251 N (v)S
-0.251 N (alu-)S
60 626.999 M (a)S
0.092(tes to 2)W
FmE
448 0 :M
f70 sf
( )S
450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
93.507 622.999 M (33)S
FmE
450 0 :M
f57 sf
( )S
452 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.507 626.999 M 0.092(. On a 32 bit mac)W
(hine)S
(,)S
0.092( this o)W
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (ws,)S
0.092( and \(most lik)W
-0.1 N (el)S
0.092(y\) pr)W
0.092(oduces a v)W
-0.251 N 0.092(alue of 0. Suc)W
0.092(h a \337)W
(a)S
-0.151 N 0.092(w will most lik)W
-0.1 N (el)S
(y)S
60 638.999 M 0.695(not cause an)W
-0.151 N 0.695(y pr)W
(ob)S
0.695(lems dur)W
0.695(ing the call,)W
0.695( b)W
-0.2 N 0.695(ut will cause the pr)W
(o)S
(g)S
(r)S
0.695(am to pr)W
0.695(oduce a se)W
-0.151 N (gmenta)S
0.695(tion f)W
-0.1 N 0.695(ault in a seemingl)W
(y)S
60 650.999 M (unr)S
(ela)S
0.221(ted place la)W
0.221(ter on. Ov)W
-0.151 N (er\337)S
(o)S
-0.251 N 0.221(w \(and under\337)W
(o)S
-0.251 N (w)S
-0.652 N (,)S
0.221( in \337)W
(oa)S
0.221(ting point calcula)W
0.221(tions\) ar)W
0.221(e v)W
-0.151 N (er)S
0.221(y per)W
0.221(nicious and nasty pr)W
(ob-)S
60 662.999 M (lems; w)S
-0.1 N (a)S
(tc)S
(h out f)S
(or them.)S
FmE
453 0 :M
f286 sf
( )S
455 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 677.999 M (+)S
FmE
456 0 :M
f57 sf
( )S
458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 677.999 M (Look out f)S
(or inte)S
-0.151 N (g)S
(er \(or \337)S
(oa)S
(ting point\) o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w \(and under\337)S
(o)S
-0.251 N (w)S
-0.652 N (,)S
( w)S
(hen a)S
(ppr)S
(opr)S
(ia)S
(te\).)S
FmE
endp
showpage
%%Page: 5 5
%%BeginPageSetup
initializepage
(Matt Bishop; page: 5 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
458 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
458 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
458 0 :M
f57 sf
( )S
460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
461 0 :M
f70 sf
( )S
463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
463 0 :M
f57 sf
( )S
465 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (5)S
FmE
465 0 :M
f151 sf
( )S
468 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 66.667 M (Ex)S
(er)S
-0.181 N (cise 3-1. )S
FmE
468 0 :M
f57 sf
( )S
470 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
179.394 66.667 M (T)S
(he ob)S
-0.151 N (vious w)S
-0.1 N (a)S
(y to test f)S
(or o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w is to m)S
(ultipl)S
(y the a)S
(bsolute v)S
-0.251 N (alue of )S
FmE
471 0 :M
f125 sf
( )S
473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
469.931 66.667 M (size)S
FmE
473 0 :M
f57 sf
( )S
475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
484.926 66.667 M ( and )S
FmE
476 0 :M
f125 sf
( )S
478 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 78.667 M (sizeof\(int\))S
FmE
478 0 :M
f57 sf
( )S
480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.985 78.667 M ( and see if the r)S
(esult is smaller than )S
FmE
481 0 :M
f125 sf
( )S
483 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
294.538 78.667 M (size)S
FmE
483 0 :M
f57 sf
( )S
485 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.533 78.667 M (  \(because if )S
FmE
486 0 :M
f216 sf
( )S
492 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.609 78.667 M 0 0 54(a * b < a)FmTx
FmE
492 0 :M
f57 sf
( )S
494 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
414.609 78.667 M ( w)S
(hen )S
FmE
494 0 :M
f216 sf
( )S
500 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
441.267 78.667 M 0 0 30(a > 0)FmTx
FmE
500 0 :M
f57 sf
( )S
502 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
471.267 78.667 M ( and )S
FmE
503 0 :M
f216 sf
( )S
509 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
490.706 78.667 M 0 0 30(b > 0)FmTx
FmE
509 0 :M
f57 sf
( )S
511 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
520.706 78.667 M (,)S
( )S
111 90.667 M (then o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w has occur)S
(r)S
(ed\). Does this al)S
-0.1 N (w)S
-0.1 N (a)S
(ys w)S
-0.1 N (or)S
(k? )S
-0.3 N (W)S
(ha)S
(t pr)S
(ob)S
(lems does it intr)S
(oduce? \()S
FmE
511 0 :M
f125 sf
( )S
513 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
465.253 90.667 M (Hint)S
FmE
514 0 :M
f57 sf
( )S
516 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
483.029 90.667 M (:)S
( think )S
111 102.667 M (a)S
(bout ar)S
(c)S
(hitectur)S
(es allo)S
-0.251 N (wing ar)S
(ithmetic o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w to cause a tr)S
(a)S
(p.\) Sug)S
(g)S
(est an alter)S
(na)S
(te method without )S
111 114.667 M (these pr)S
(ob)S
(lems.)S
FmE
516 0 :M
f138 sf
( )S
519 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 140 M (3.3. )S
-0.662 N (Ad)S
(ding to a Queue)S
FmE
520 0 :M
f57 sf
( )S
522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 155.667 M (T)S
0.581(his function ad)W
0.581(ds an element to the queue)W
0.581(. It ad)W
0.581(ds the inde)W
-0.151 N 0.581(x of the head element to the cur)W
(r)S
0.581(ent count \(modulo the)W
60 167.667 M (queue siz)S
(e\),)S
( and places the ne)S
-0.251 N (w element a)S
(t tha)S
(t loca)S
(tion; it then incr)S
(ements the count:)S
FmE
523 0 :M
f216 sf
( )S
529 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 182.667 M 0 0 12(/*)FmTx
60 194.667 M 0 0 228( * add an element to an existing queue)FmTx
60 206.667 M 0 0 12( *)FmTx
60 218.667 M 0 0 84( * PARAMETERS:)FmTx
24 N 0 0 66(QUEUE *qptr)FmTx
6 N 0 0 156(pointer for queue involved)FmTx
60 230.666 M 0 0 12( *)FmTx
96 N 0 0 30(int n)FmTx
42 N 0 0 132(element to be appended)FmTx
60 242.666 M 0 0 18( */)FmTx
60 254.666 M 0 0 222(void put_on_queue\(QUEUE *qptr, int n\))FmTx
60 266.666 M 0 0 6({)FmTx
96 278.666 M 0 0 228(/* add new element to tail of queue */)FmTx
96 290.666 M 0 0 330(qptr->que[\(qptr->head + qptr->count\) % qptr->size] = n;)FmTx
96 302.666 M 0 0 84(qptr->count++;)FmTx
60 314.666 M 0 0 6(})FmTx
FmE
529 0 :M
f57 sf
( )S
531 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 329.666 M (T)S
-0.801 N (w)S
-0.1 N -0.108(o basic pr)W
(ob)S
-0.108(lems ar)W
(ise)S
-0.108(. F)W
(ir)S
(st,)S
-0.108( the )W
FmE
531 0 :M
f125 sf
( )S
533 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.957 329.666 M (qptr)S
FmE
534 0 :M
f57 sf
( )S
536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
220.625 329.666 M -0.108( par)W
-0.108(ameter is not c)W
(hec)S
(k)S
-0.1 N -0.108(ed to ensur)W
-0.108(e it r)W
(ef)S
(er)S
-0.108(s to a v)W
-0.251 N -0.108(alid queue; it ma)W
-0.108(y r)W
(ef)S
-0.108(er to a)W
60 341.666 M -0.049(queue tha)W
-0.049(t has been deleted)W
(,)S
-0.049( or to r)W
-0.049(andom memor)W
(y)S
-0.652 N (,)S
-0.049( or ma)W
-0.049(y be )W
FmE
536 0 :M
f151 sf
( )S
539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.669 341.666 M (NULL)S
FmE
540 0 :M
f57 sf
( )S
542 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
339.778 341.666 M -0.049(. )W
-0.552 N (An)S
-0.151 N -0.049(y of these will cause pr)W
(ob)S
-0.049(lems; if the caller)W
60 353.666 M -0.217(is luc)W
(k)S
-0.151 N (y)S
-0.652 N (,)S
-0.217( the pr)W
(ob)S
-0.217(lem will ar)W
-0.217(ise in this r)W
-0.217(outine; if the caller is unluc)W
(k)S
-0.151 N (y)S
-0.652 N (,)S
-0.217( the symptom will not a)W
-0.217(ppear until la)W
-0.217(ter on in the)W
60 365.666 M (pr)S
(o)S
(g)S
(r)S
(am,)S
( with no indica)S
(tion of w)S
(ha)S
(t caused it.)S
FmE
542 0 :M
f286 sf
( )S
544 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 380.666 M (+)S
FmE
545 0 :M
f57 sf
( )S
547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 380.666 M (Chec)S
(k all par)S
(ameter)S
(s.)S
60 395.666 M (As an of)S
-0.251 N (fshoot of this,)S
( suppose )S
FmE
547 0 :M
f125 sf
( )S
549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.108 395.666 M (qptr)S
FmE
550 0 :M
f57 sf
( )S
552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.776 395.666 M ( is v)S
-0.251 N (alid b)S
-0.2 N (ut )S
FmE
552 0 :M
f125 sf
( )S
554 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
251.765 395.666 M (que)S
FmE
555 0 :M
f57 sf
( )S
557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.204 395.666 M ( is not. )S
-0.181 N (T)S
(hen the r)S
(outine will not w)S
-0.1 N (or)S
(k cor)S
(r)S
(ectl)S
(y:)S
FmE
557 0 :M
f286 sf
( )S
559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 410.666 M (+)S
FmE
560 0 :M
f57 sf
( )S
562 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 410.666 M (Chec)S
(k f)S
(or incor)S
(r)S
(ect v)S
-0.251 N (alues in str)S
(uctur)S
(es and v)S
-0.251 N (ar)S
(ia)S
(b)S
(les.)S
60 425.666 M (Second)S
(,)S
0.359( suppose the queue is full \(tha)W
0.359(t is,)W
0.359( )W
FmE
563 0 :M
f125 sf
( )S
565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
231.16 425.666 M (qptr)S
-0.2 N (->count)S
FmE
565 0 :M
f57 sf
( )S
567 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.92 425.666 M 0.359( equals )W
FmE
568 0 :M
f125 sf
( )S
570 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.182 425.666 M (qptr)S
-0.2 N (->size)S
FmE
570 0 :M
f57 sf
( )S
572 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
352.72 425.666 M 0.359(\). If this function is called)W
(,)S
0.359( it will o)W
-0.151 N (v)S
-0.151 N (erwr)S
(ite)S
60 437.666 M 0.635(the head of the queue)W
0.635(. )W
-0.181 N (T)S
(her)S
0.635(e is no c)W
(hec)S
0.635(k f)W
0.635(or an o)W
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N 0.635(wing queue)W
(,)S
0.635( doubtless because the author assumed it w)W
-0.1 N (ould)S
60 449.666 M (ne)S
-0.251 N (v)S
-0.151 N (er ha)S
(ppen.)S
FmE
573 0 :M
f286 sf
( )S
575 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 464.666 M (+)S
FmE
575 0 :M
f57 sf
( )S
577 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 464.666 M (Chec)S
(k f)S
(or ar)S
(r)S
(a)S
(y o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w w)S
(hen inser)S
(ting items.)S
60 479.666 M 0.479(A mor)W
0.479(e sophistica)W
0.479(ted pr)W
(ob)S
0.479(lem is the placing of tr)W
0.479(ust in the v)W
-0.251 N 0.479(alues of the queue str)W
(uctur)S
(e)S
0.479(. )W
-0.181 N (T)S
0.479(he inte)W
-0.151 N (g)S
(r)S
0.479(ity of the queue)W
60 491.666 M (str)S
(uctur)S
0.71(e de)W
0.71(pends on the consistenc)W
-0.151 N 0.71(y of the )W
FmE
578 0 :M
f125 sf
( )S
580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
239.473 491.666 M (count)S
FmE
580 0 :M
f57 sf
( )S
582 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.69 491.666 M (,)S
0.71( )W
FmE
583 0 :M
f125 sf
( )S
585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.4 491.666 M (size)S
FmE
585 0 :M
f57 sf
( )S
587 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.395 491.666 M (,)S
0.71( and )W
FmE
588 0 :M
f125 sf
( )S
590 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.753 491.666 M (head)S
FmE
590 0 :M
f57 sf
( )S
592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
325.192 491.666 M 0.71( \336)W
0.71(elds. If )W
FmE
593 0 :M
f125 sf
( )S
595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.642 491.666 M (size)S
FmE
595 0 :M
f57 sf
( )S
597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380.637 491.666 M 0.71( incr)W
0.71(eases betw)W
0.71(een calls,)W
0.71( the r)W
(outine)S
60 503.666 M 0.616(will think tha)W
0.616(t the queue has been alloca)W
0.616(ted mor)W
0.616(e space than it actuall)W
0.616(y has,)W
0.616( leading to a se)W
-0.151 N (gmenta)S
0.616(tion f)W
-0.1 N 0.616(ault. If )W
FmE
598 0 :M
f125 sf
( )S
600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
513.004 503.666 M (size)S
FmE
600 0 :M
f57 sf
( )S
602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 515.666 M (decr)S
(eases betw)S
(een calls,)S
( some elements might be lost.)S
FmE
603 0 :M
f151 sf
( )S
606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 530.666 M (Ex)S
(er)S
-0.181 N -0.517(cise 3-2. )W
FmE
606 0 :M
f57 sf
( )S
608 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.36 530.666 M (Wr)S
-0.388(ite a pr)W
(o)S
(g)S
(r)S
-0.388(am tha)W
-0.388(t demonstr)W
(a)S
-0.388(tes w)W
-0.388(hen decr)W
-0.388(easing )W
FmE
609 0 :M
f125 sf
( )S
611 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
386.375 530.666 M (size)S
FmE
611 0 :M
f57 sf
( )S
613 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
401.37 530.666 M -0.388( betw)W
-0.388(een calls to )W
FmE
614 0 :M
f125 sf
( )S
616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
469.232 530.666 M (add_to_queue)S
FmE
616 0 :M
f57 sf
( )S
618 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
525.888 530.666 M -0.388( )W
111 542.666 M (causes elements pr)S
(e)S
-0.251 N (viousl)S
(y ad)S
(ded to the queue to become inaccessib)S
(le)S
(. Descr)S
(ibe the pr)S
(ob)S
(lems tha)S
(t can )S
111 554.666 M (ar)S
(ise if the v)S
-0.251 N (alues of )S
FmE
619 0 :M
f125 sf
( )S
621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.315 554.666 M (head)S
FmE
621 0 :M
f57 sf
( )S
623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
213.754 554.666 M ( and/or )S
FmE
624 0 :M
f125 sf
( )S
626 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.298 554.666 M (count)S
FmE
626 0 :M
f57 sf
( )S
628 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.515 554.666 M ( ar)S
(e c)S
(hang)S
(ed acr)S
(oss calls to )S
FmE
629 0 :M
f125 sf
( )S
631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.119 554.666 M (put_on_queue)S
FmE
631 0 :M
f57 sf
( )S
633 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
434.774 554.666 M (. )S
60 584.666 M (Gi)S
-0.251 N (v)S
-0.151 N 1.077(en the accessibility of the queue str)W
(uctur)S
1.077(e elements to the caller)W
(s,)S
1.077( these elements ma)W
1.077(y c)W
(hang)S
1.077(e \(accidentall)W
1.077(y or)W
60 596.666 M (deliber)S
(a)S
(tel)S
(y\).)S
FmE
634 0 :M
f138 sf
( )S
637 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 621.999 M (3.4. Remo)S
-0.12 N (ving Elements fr)S
-0.217 N (om the Queue)S
FmE
638 0 :M
f57 sf
( )S
640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 637.666 M (T)S
-0.801 N 0.408(aking elements of)W
-0.251 N 0.408(f the queue be)W
-0.151 N (g)S
0.408(ins b)W
0.408(y g)W
0.408(etting the element a)W
0.408(t inde)W
-0.151 N 0.408(x )W
FmE
640 0 :M
f125 sf
( )S
642 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
342.334 637.666 M (head)S
FmE
643 0 :M
f57 sf
( )S
645 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
361.773 637.666 M 0.408(. )W
-0.181 N (T)S
0.408(hen count is decr)W
(emented)S
(,)S
0.408( and )W
FmE
645 0 :M
f125 sf
( )S
647 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
498.986 637.666 M (head)S
FmE
648 0 :M
f57 sf
( )S
650 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
518.425 637.666 M 0.408( is)W
60 649.666 M (incr)S
(emented \(modulo )S
FmE
650 0 :M
f125 sf
( )S
652 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
148.301 649.666 M (size)S
FmE
653 0 :M
f57 sf
( )S
655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
163.296 649.666 M (\):)S
FmE
655 0 :M
f216 sf
( )S
661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 664.666 M 0 0 12(/*)FmTx
60 676.666 M 0 0 318( * take an element off the front of an existing queue)FmTx
60 688.666 M 0 0 12( *)FmTx
60 700.666 M 0 0 84( * PARAMETERS:)FmTx
24 N 0 0 66(QUEUE *qptr)FmTx
6 N 0 0 156(pointer for queue involved)FmTx
FmE
60 60 45 50 rC
661 0 :M
FrMacBegin
60 60 45 49.032 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
:imsv 39 39 1 5 [45 0 0 48.486 60 60] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
661 0 :M
false
EndFrame5Picture
FmE
gR
gS 60 523 45 43 rC
661 0 :M
FrMacBegin
60 523.999 45 42 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 524 45 42 rC
:imsv 39 39 1 5 [45 0 0 47.432 60 524] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
661 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 6 6
%%BeginPageSetup
initializepage
(Matt Bishop; page: 6 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
661 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
661 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
661 0 :M
f57 sf
( )S
663 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
664 0 :M
f70 sf
( )S
666 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
666 0 :M
f57 sf
( )S
668 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (6)S
FmE
668 0 :M
f216 sf
( )S
674 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 66.667 M 0 0 12( *)FmTx
96 N 0 0 36(int *n)FmTx
36 N 0 0 180(storage for the return element)FmTx
60 78.667 M 0 0 18( */)FmTx
60 90.667 M 0 0 240(void take_off_queue\(QUEUE *qptr, int *n\))FmTx
60 102.667 M 0 0 6({)FmTx
96 114.667 M 0 0 294(/* return the element at the head of the queue */)FmTx
96 126.667 M 0 0 174(*n = qptr->que[qptr->head++];)FmTx
96 138.667 M 0 0 84(qptr->count--;)FmTx
96 150.667 M 0 0 126(qptr->head %= MAXELT;)FmTx
60 162.667 M 0 0 6(})FmTx
FmE
674 0 :M
f57 sf
( )S
676 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 177.667 M (T)S
0.148(he par)W
0.148(ameter pr)W
(ob)S
0.148(lems descr)W
0.148(ibed in the pr)W
(e)S
-0.251 N 0.148(vious section e)W
-0.151 N 0.148(xist her)W
0.148(e too; )W
FmE
677 0 :M
f125 sf
( )S
679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
354.16 177.667 M (qptr)S
FmE
679 0 :M
f57 sf
( )S
681 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.827 177.667 M 0.148( ma)W
0.148(y be in)W
-0.4 N (v)S
-0.251 N (alid)S
(,)S
0.148( )W
FmE
682 0 :M
f151 sf
( )S
685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
437.697 177.667 M (NULL)S
FmE
685 0 :M
f57 sf
( )S
687 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
468.806 177.667 M (,)S
0.148( or point to an)W
60 189.667 M (in)S
-0.4 N (v)S
-0.251 N (alid queue)S
(. Mor)S
(eo)S
-0.151 N (v)S
-0.151 N (er)S
-0.4 N (,)S
( )S
FmE
687 0 :M
f125 sf
( )S
689 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.217 189.667 M (n)S
FmE
690 0 :M
f57 sf
( )S
692 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
167.217 189.667 M ( ma)S
(y also be an in)S
-0.4 N (v)S
-0.251 N (alid inte)S
-0.151 N (g)S
(er pointer)S
-0.552 N (. So:)S
FmE
692 0 :M
f286 sf
( )S
694 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 204.666 M (+)S
FmE
695 0 :M
f57 sf
( )S
697 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 204.666 M (Chec)S
(k all par)S
(ameter)S
(s.)S
FmE
698 0 :M
f286 sf
( )S
700 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 219.666 M (+)S
FmE
700 0 :M
f57 sf
( )S
702 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 219.666 M (Chec)S
(k f)S
(or incor)S
(r)S
(ect v)S
-0.251 N (alues in str)S
(uctur)S
(es and v)S
-0.251 N (ar)S
(ia)S
(b)S
(les.)S
60 234.666 M (Her)S
(e)S
-0.181(. the dang)W
-0.181(er is under\337)W
(o)S
-0.251 N (w)S
-0.652 N (,)S
-0.181( not o)W
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w)S
-0.652 N -0.181(. Suppose ther)W
-0.181(e ar)W
-0.181(e no elements in the queue)W
-0.181(. )W
-0.181 N (T)S
-0.181(he v)W
-0.251 N -0.181(alue r)W
(etur)S
-0.181(ned thr)W
-0.181(ough )W
FmE
703 0 :M
f125 sf
( )S
705 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
522.999 234.666 M (n)S
FmE
705 0 :M
f57 sf
( )S
707 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 246.666 M (will be g)S
-0.051 N (arba)S
(g)S
(e)S
(,)S
( and )S
FmE
708 0 :M
f125 sf
( )S
710 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.523 246.666 M (count)S
FmE
710 0 :M
f57 sf
( )S
712 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
165.74 246.666 M ( will be set to a bo)S
(gus v)S
-0.251 N (alue)S
(. Hence:)S
FmE
713 0 :M
f286 sf
( )S
715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 261.666 M (+)S
FmE
716 0 :M
f57 sf
( )S
718 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 261.666 M (Chec)S
(k f)S
(or ar)S
(r)S
(a)S
(y under\337)S
(o)S
-0.251 N (w w)S
(hen e)S
-0.151 N (xtr)S
(acting items.)S
60 276.666 M (T)S
(he pr)S
(ob)S
(lem of v)S
-0.251 N (ar)S
(ia)S
(b)S
(le consistenc)S
-0.151 N (y acr)S
(oss calls occur)S
(s in this r)S
(outine)S
(,)S
( also.)S
FmE
718 0 :M
f151 sf
( )S
721 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 291.666 M (Ex)S
(er)S
-0.181 N (cise 3-3. )S
FmE
722 0 :M
f57 sf
( )S
724 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
179.394 291.666 M (W)S
(ha)S
(t pr)S
(ob)S
(lems might an in)S
-0.4 N (v)S
-0.251 N (alid pointer f)S
(or )S
FmE
724 0 :M
f125 sf
( )S
726 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
355.634 291.666 M (n)S
FmE
727 0 :M
f57 sf
( )S
729 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.634 291.666 M ( cause? Speci\336)S
(call)S
(y)S
-0.652 N (,)S
( suppose in the call)S
FmE
729 0 :M
f216 sf
( )S
735 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.5 306.666 M 0 0 150( take_off_queue\(qptr, c\) )FmTx
FmE
735 0 :M
f57 sf
( )S
737 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 321.666 M 0.787(the v)W
-0.251 N (ar)S
(ia)S
(b)S
0.787(le c is dec)W
(lar)S
0.787(ed as a )W
FmE
738 0 :M
f125 sf
( )S
740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
235.903 321.666 M 0.787(char *)W
FmE
740 0 :M
f57 sf
( )S
742 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.517 321.666 M 0.787( or a )W
FmE
743 0 :M
f125 sf
( )S
745 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.143 321.666 M (\337)S
0.787(oat *)W
FmE
745 0 :M
f57 sf
( )S
747 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.208 321.666 M 0.787(? Ho)W
-0.251 N 0.787(w w)W
-0.1 N 0.787(ould y)W
0.787(ou solv)W
-0.151 N 0.787(e these pr)W
(ob)S
0.787(lems in a por)W
(ta)S
(b)S
(le)S
111 333.666 M (manner?)S
FmE
748 0 :M
f138 sf
( )S
751 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 359 M (3.5. Summar)S
(y)S
FmE
751 0 :M
f57 sf
( )S
753 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 374.666 M (T)S
(he libr)S
(ar)S
(y )S
FmE
754 0 :M
f125 sf
( )S
756 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
107.197 374.666 M (fqlib.c)S
FmE
756 0 :M
f57 sf
( )S
758 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.471 374.666 M (,)S
( the contents of w)S
(hic)S
(h ar)S
(e pr)S
(esented in this section,)S
( is v)S
-0.151 N (er)S
(y fr)S
(a)S
(g)S
(ile code)S
(. )S
-0.552 N (Among its \337)S
(a)S
-0.151 N (ws ar)S
(e:)S
60 389.666 M (\245)S
14.501 N (T)S
(he caller)S
(s ha)S
-0.2 N (v)S
-0.151 N (e access to the inter)S
(nal elements of the queue str)S
(uctur)S
(e)S
(.)S
60 401.666 M (\245)S
14.501 N (T)S
(he or)S
(der of elements in par)S
(ameter lists is not c)S
(hec)S
(k)S
-0.1 N (ed)S
(.)S
60 413.666 M (\245)S
14.501 N (T)S
(he v)S
-0.251 N (alue of command par)S
(ameter)S
(s \(w)S
(hic)S
(h tell the function w)S
(ha)S
(t oper)S
(a)S
(tion to perf)S
(or)S
(m\) is arbitr)S
(ar)S
(y)S
-0.652 N (.)S
60 425.666 M (\245)S
14.501 N (Using pointer)S
(s to pointer)S
(s causes er)S
(r)S
(or)S
(s in function calls.)S
60 437.666 M (\245)S
14.501 N (T)S
(he par)S
(ameter v)S
-0.251 N (alues ar)S
(e not sanity c)S
(hec)S
(k)S
-0.1 N (ed)S
(.)S
60 449.666 M (\245)S
14.501 N (T)S
(he user can delete an unalloca)S
(ted queue)S
(,)S
( or a pr)S
(e)S
-0.251 N (viousl)S
(y deleted queue)S
(.)S
60 461.666 M (\245)S
14.501 N (Retur)S
(n v)S
-0.251 N (alues fr)S
(om libr)S
(ar)S
(y functions ar)S
(e not c)S
(hec)S
(k)S
-0.1 N (ed)S
(.)S
60 473.666 M (\245)S
14.501 N (Inte)S
-0.151 N (g)S
(er \(or \337)S
(oa)S
(ting point\) o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w \(and under\337)S
(o)S
-0.251 N (w)S
-0.652 N (,)S
( w)S
(hen a)S
(ppr)S
(opr)S
(ia)S
(te\) is ignor)S
(ed)S
(.)S
60 485.666 M (\245)S
14.501 N (T)S
(he v)S
-0.251 N (alues in str)S
(uctur)S
(es and v)S
-0.251 N (ar)S
(ia)S
(b)S
(les ar)S
(e not sanity c)S
(hec)S
(k)S
-0.1 N (ed)S
(.)S
60 497.666 M (\245)S
14.501 N (Neither ar)S
(r)S
(a)S
(y under\337)S
(o)S
-0.251 N (w nor o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w is c)S
(hec)S
(k)S
-0.1 N (ed f)S
(or)S
-0.552 N (.)S
60 512.666 M (All these \337)S
(a)S
-0.151 N (ws mak)S
-0.1 N (e the libr)S
(ar)S
(y susce)S
(ptib)S
(le to f)S
-0.1 N (ailur)S
(e)S
(.)S
FmE
759 0 :M
f138 sf
( )S
762 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 536 M (4. Example of a Rob)S
-0.24 N (ust Libr)S
(ar)S
(y)S
FmE
763 0 :M
f57 sf
( )S
765 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 553.666 M -0.062(In this section,)W
-0.062( w)W
-0.062(e stud)W
-0.062(y an alter)W
(na)S
-0.062(te implementa)W
-0.062(tion of the same libr)W
(ar)S
(y)S
-0.652 N -0.062(. )W
-0.181 N (T)S
-0.062(his v)W
-0.151 N (er)S
(sion,)S
-0.062( ho)W
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
-0.062( is v)W
-0.151 N (er)S
-0.062(y r)W
(ob)S
-0.2 N -0.062(ust; it per)W
-0.2 N (-)S
60 565.666 M (f)S
(or)S
0.163(ms sanity c)W
(hec)S
(king)S
(,)S
0.163( and a)W
0.163(ttempts to anticipa)W
0.163(te pr)W
(ob)S
0.163(lems and handle them g)W
(r)S
(acefull)S
(y)S
-0.652 N 0.163(. If the libr)W
(ar)S
0.163(y cannot r)W
(eco)S
-0.151 N (v)S
-0.151 N (er)S
-0.4 N (,)S
60 577.666 M 0.396(it r)W
(etur)S
0.396(ns an er)W
(r)S
0.396(or code to the caller indica)W
0.396(ting the pr)W
(ob)S
0.396(lem. )W
-0.181 N (T)S
0.396(his code is mor)W
0.396(e comple)W
-0.151 N 0.396(x to wr)W
(ite)S
(,)S
0.396( b)W
-0.2 N 0.396(ut \320 as the caller)W
(s)S
60 589.666 M (can r)S
(el)S
(y on it \320 mak)S
-0.1 N (es de)S
(b)S
-0.2 N (ug)S
(g)S
(ing the calling a)S
(pplica)S
(tions m)S
(uc)S
(h simpler)S
-0.552 N (.)S
FmE
765 0 :M
f138 sf
( )S
768 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 614.999 M (4.1. )S
-0.36 N (T)S
(he Queue Str)S
(uctur)S
-0.217 N (e)S
FmE
769 0 :M
f57 sf
( )S
771 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 630.666 M (T)S
-0.055(he queue str)W
(uctur)S
-0.055(e is to be una)W
-0.2 N (v)S
-0.251 N (aila)S
(b)S
-0.055(le to the caller)W
-0.4 N (,)S
-0.055( so w)W
-0.055(e need to de\336)W
-0.055(ne tw)W
-0.1 N -0.055(o items:)W
-0.055( the str)W
(uctur)S
-0.055(e itself)W
(,)S
-0.055( and an inter)W
-0.2 N (-)S
60 642.666 M (f)S
-0.1 N (ace to it. )S
-0.3 N (W)S
-0.801 N (e deal with the interf)S
-0.1 N (ace \336)S
(r)S
(st. )S
-0.181 N (T)S
(he object tha)S
(t the caller uses to r)S
(e)S
(pr)S
(esent a queue will be called a )S
FmE
772 0 :M
f125 sf
( )S
774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
494.685 642.666 M (token)S
FmE
774 0 :M
f57 sf
( )S
776 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
516.34 642.666 M (.)S
60 657.666 M 0.79(If w)W
0.79(e mak)W
-0.1 N 0.79(e the tok)W
-0.1 N 0.79(en a pointer to a str)W
(uctur)S
(e)S
(,)S
0.79( the user will be a)W
(b)S
0.79(le to manipula)W
0.79(te the da)W
0.79(ta in the str)W
(uctur)S
0.79(e dir)W
(ectl)S
(y)S
-0.652 N (.)S
60 669.666 M -0.055(Hence w)W
-0.055(e need some other mec)W
(hanism,)S
-0.055( and inde)W
-0.151 N -0.055(xing into an ar)W
(r)S
(a)S
-0.055(y is the ob)W
-0.151 N -0.055(vious solution. Ho)W
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
-0.055( if w)W
-0.055(e use simple)W
60 681.666 M (indices,)S
-0.021( then the user can r)W
(ef)S
-0.021(er to queue 0,)W
-0.021( and ha)W
-0.2 N (v)S
-0.151 N -0.021(e a high de)W
-0.151 N (g)S
(r)S
-0.021(ee of cer)W
-0.021(tainty of g)W
-0.021(etting a v)W
-0.251 N -0.021(alid queue)W
-0.021(. So instead w)W
(e)S
60 693.666 M -0.132(use a function of the inde)W
-0.151 N -0.132(x suc)W
-0.132(h tha)W
-0.132(t 0 is not in the r)W
(ang)S
-0.132(e of the function. )W
-0.181 N (T)S
(hus,)S
-0.132( w)W
-0.132(e will r)W
(e)S
(pr)S
-0.132(esent the queues as entr)W
(ies)S
FmE
60 284 45 44 rC
777 0 :M
FrMacBegin
60 285 45 42 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 285 45 43 rC
:imsv 39 39 1 5 [45 0 0 47.432 60 285] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
777 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 7 7
%%BeginPageSetup
initializepage
(Matt Bishop; page: 7 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
777 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
777 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
777 0 :M
f57 sf
( )S
779 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
780 0 :M
f70 sf
( )S
782 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
782 0 :M
f57 sf
( )S
784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (7)S
60 66.667 M (in an ar)S
(r)S
(a)S
(y of queues,)S
( and the tok)S
-0.1 N (en will be an in)S
-0.4 N (v)S
-0.151 N (er)S
(tib)S
(le ma)S
(thema)S
(tical function of their inde)S
-0.151 N (x.)S
60 81.667 M -0.152(In ad)W
(dition,)S
-0.152( w)W
-0.152(e m)W
-0.152(ust pr)W
(e)S
-0.251 N (v)S
-0.151 N -0.152(ent a )W
-0.152(\322dangling r)W
(ef)S
(er)S
(ence\323)S
-0.152( pr)W
(ob)S
-0.152(lem \(in w)W
(hic)S
-0.152(h a pr)W
(o)S
(g)S
(r)S
-0.152(am r)W
(ef)S
(er)S
-0.152(ences queue )W
-0.552 N -0.152(A after tha)W
-0.152(t queue)W
60 93.667 M 0.27(is deleted\). Suppose a pr)W
(o)S
(g)S
(r)S
0.27(ammer uses the libr)W
(ar)S
0.27(y to cr)W
(ea)S
0.27(te queue )W
-0.552 N 0.27(A. Queue )W
-0.552 N 0.27(A is subsequentl)W
0.27(y deleted and queue B)W
60 105.667 M (cr)S
(ea)S
0.474(ted; queue B ha)W
0.474(ppens to occup)W
-0.1 N 0.474(y the same slot in the ar)W
(r)S
(a)S
0.474(y of queues as queue )W
-0.552 N 0.474(A did)W
0.474(. )W
-0.552 N 0.474(A subsequent r)W
(ef)S
(er)S
0.474(ence to)W
60 117.667 M 0.533(queue )W
-0.552 N 0.533(A b)W
0.533(y tok)W
-0.1 N 0.533(en will g)W
0.533(et queue B)W
0.533(. )W
-0.181 N (T)S
-0.801 N 0.533(o a)W
-0.2 N (v)S
-0.2 N 0.533(oid this pr)W
(ob)S
(lem,)S
0.533( w)W
0.533(e associa)W
0.533(te with eac)W
0.533(h queue a unique inte)W
-0.151 N (g)S
0.533(er \(called a)W
FmE
784 0 :M
f125 sf
( )S
786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 129.667 M (nonce)S
FmE
787 0 :M
f57 sf
( )S
789 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
83.877 129.667 M 0.646(\) and mer)W
-0.181 N (g)S
0.646(e this into the tok)W
-0.1 N 0.646(en. In the a)W
(bo)S
-0.151 N (v)S
-0.151 N 0.646(e e)W
-0.151 N (xample)S
(,)S
0.646( queue might ha)W
-0.2 N (v)S
-0.151 N 0.646(e nonce 124 and queue B might ha)W
-0.2 N (v)S
-0.151 N (e)S
60 141.667 M -0.034(nonce 3086. )W
-0.181 N (T)S
-0.034(he tok)W
-0.1 N -0.034(en f)W
-0.034(or queue )W
-0.552 N -0.034(A is )W
FmE
789 0 :M
f125 sf
( )S
791 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
212.455 141.667 M (f)S
FmE
792 0 :M
f57 sf
( )S
794 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.233 141.667 M (\(7,)S
-0.034( 124\) and the tok)W
-0.1 N -0.034(en f)W
-0.034(or queue B is )W
FmE
794 0 :M
f125 sf
( )S
796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
364.224 141.667 M (f)S
FmE
797 0 :M
f57 sf
( )S
799 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
367.002 141.667 M (\(7,)S
-0.034( 3085\). )W
-0.552 N -0.034(As these v)W
-0.251 N -0.034(alues dif)W
-0.251 N (f)S
(er)S
-0.4 N (,)S
-0.034( the r)W
(ef-)S
60 153.667 M (er)S
(ence to queue )S
-0.552 N (A will be detected and r)S
(ejected)S
(.)S
60 168.667 M (W)S
-0.801 N (e c)S
(hoose as our function the f)S
(ollo)S
-0.251 N (wing:)S
FmE
799 0 :M
f125 sf
( )S
801 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
171.169 183.667 M (f)S
FmE
802 0 :M
f57 sf
( )S
804 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.948 183.667 M (\()S
FmE
804 0 :M
f125 sf
( )S
806 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.275 183.667 M (index)S
FmE
807 0 :M
f57 sf
( )S
809 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198.93 183.667 M (,)S
( )S
FmE
809 0 :M
f125 sf
( )S
811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
203.93 183.667 M (nonce)S
FmE
812 0 :M
f57 sf
( )S
814 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.807 183.667 M (\) = \(\()S
FmE
814 0 :M
f125 sf
( )S
816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
248.43 183.667 M (index)S
FmE
817 0 :M
f57 sf
( )S
819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270.085 183.667 M ( + 0x1221\)<<16\) | \()S
FmE
819 0 :M
f125 sf
( )S
821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.987 183.667 M (nonce)S
FmE
822 0 :M
f57 sf
( )S
824 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
372.864 183.667 M ( + 0x0502\))S
60 198.667 M (w)S
(her)S
0.25(e << and | ar)W
0.25(e the usual C oper)W
(a)S
(tor)S
0.25(s. )W
-0.3 N (W)S
-0.801 N 0.25(e emphasiz)W
(e)S
(,)S
0.25( ho)W
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
0.25( tha)W
0.25(t )W
FmE
824 0 :M
f181 sf
( )S
827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.128 198.667 M (an)S
(y)S
FmE
827 0 :M
f57 sf
( )S
829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
365.623 198.667 M 0.25( function in)W
-0.4 N (v)S
-0.151 N (er)S
(tib)S
0.25(le in either ar)W
-0.181 N 0.25(gument is)W
60 210.666 M (acce)S
(pta)S
(b)S
(le)S
(. In the a)S
(bo)S
-0.151 N (v)S
-0.151 N (e)S
(,)S
FmE
830 0 :M
f246 sf
( )S
836 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
174 225.666 M 0 0 30(index)FmTx
FmE
836 0 :M
f216 sf
( )S
842 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 225.666 M 0 0 24( = \()FmTx
FmE
842 0 :M
f246 sf
( )S
848 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228 225.666 M 0 0 6(f)FmTx
FmE
848 0 :M
f216 sf
( )S
854 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234 225.666 M 0 0 6(\()FmTx
FmE
854 0 :M
f246 sf
( )S
860 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
240 225.666 M 0 0 30(index)FmTx
FmE
860 0 :M
f216 sf
( )S
866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
270 225.666 M 0 0 12(, )FmTx
FmE
866 0 :M
f246 sf
( )S
872 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282 225.666 M 0 0 30(nonce)FmTx
FmE
872 0 :M
f216 sf
( )S
878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
312 225.666 M 0 0 102(\) >> 16\) & 0xffff)FmTx
FmE
878 0 :M
f57 sf
( )S
880 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 240.666 M (and)S
FmE
880 0 :M
f246 sf
( )S
886 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
198 255.666 M 0 0 30(nonce)FmTx
FmE
886 0 :M
f216 sf
( )S
892 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228 255.666 M 0 0 18( = )FmTx
FmE
892 0 :M
f246 sf
( )S
898 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246 255.666 M 0 0 6(f)FmTx
FmE
898 0 :M
f216 sf
( )S
904 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
252 255.666 M 0 0 6(\()FmTx
FmE
904 0 :M
f246 sf
( )S
910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258 255.666 M 0 0 30(index)FmTx
FmE
910 0 :M
f216 sf
( )S
916 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288 255.666 M 0 0 12(, )FmTx
FmE
916 0 :M
f246 sf
( )S
922 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
300 255.666 M 0 0 30(nonce)FmTx
FmE
922 0 :M
f216 sf
( )S
928 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
330 255.666 M 0 0 60(\) & 0xffff)FmTx
FmE
928 0 :M
f57 sf
( )S
930 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 270.666 M (w)S
(her)S
(e & and >> ar)S
(e the usual C oper)S
(a)S
(tor)S
(s.)S
60 285.666 M (T)S
0.06(his simpli\336)W
0.06(es the interf)W
-0.1 N 0.06(ace consider)W
(a)S
(b)S
(l)S
(y)S
-0.652 N (,)S
0.06( b)W
-0.2 N 0.06(ut a)W
0.06(t the cost of assuming a 32-bit quantity \(or g)W
(r)S
(ea)S
0.06(ter\). F)W
-0.151 N (or)S
(tuna)S
(tel)S
(y)S
-0.652 N (,)S
0.06( most)W
60 297.666 M (systems ha)S
-0.2 N (v)S
-0.151 N (e a da)S
(ta)S
(type suppor)S
(ting inte)S
-0.151 N (g)S
(er)S
(s of this length. So,)S
( in the header \336)S
(le)S
(,)S
( w)S
(e put:)S
FmE
931 0 :M
f216 sf
( )S
937 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 312.666 M 0 0 438(/* queue identifier; contains internal index and nonce mashed together */)FmTx
60 324.666 M 0 0 150(typedef long int QTICKET;)FmTx
FmE
937 0 :M
f57 sf
( )S
939 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 339.666 M (W)S
-0.4 N (ith this tok)S
-0.1 N (en de\336)S
(ned)S
(,)S
( calling r)S
(outines need kno)S
-0.251 N (w nothing a)S
(bout the inter)S
(nal str)S
(uctur)S
(es.)S
FmE
939 0 :M
f286 sf
( )S
941 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 354.666 M (+)S
FmE
942 0 :M
f57 sf
( )S
944 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 354.666 M (Don\325)S
-0.181 N (t hand out pointer)S
(s to inter)S
(nal da)S
(ta str)S
(uctur)S
(es; use tok)S
-0.1 N (ens instead)S
(.)S
60 369.666 M (T)S
0.294(he second issue is er)W
(r)S
(or)S
0.294(s; ho)W
-0.251 N 0.294(w to handle them?  )W
-0.3 N (W)S
-0.801 N 0.294(e can pr)W
0.294(int er)W
(r)S
0.294(or messa)W
(g)S
0.294(es \(and tak)W
-0.1 N 0.294(e action,)W
0.294( possib)W
(l)S
0.294(y e)W
-0.251 N (v)S
-0.151 N 0.294(en ter)W
(mi-)S
60 381.666 M (na)S
(ting\),)S
0.127( w)W
0.127(e can r)W
(etur)S
0.127(n er)W
(r)S
0.127(or r)W
0.127(esults and allo)W
-0.251 N 0.127(w the caller to handle the er)W
(r)S
(or)S
-0.4 N (,)S
0.127( or w)W
0.127(e can set up special er)W
(r)S
0.127(or handler)W
0.127(s \(if)W
60 393.666 M 0.26(the langua)W
(g)S
0.26(e suppor)W
0.26(ts these; the)W
-0.151 N 0.26(y ar)W
0.26(e typicall)W
0.26(y wr)W
0.26(itten as tr)W
(a)S
0.26(p or e)W
-0.151 N (xce)S
0.26(ption handler)W
0.26(s\). Unf)W
(or)S
(tuna)S
(tel)S
(y)S
-0.652 N (,)S
0.26( C does not pr)W
(o-)S
60 405.666 M 0.526(vide e)W
-0.151 N (xce)S
0.526(ption handler)W
0.526(s f)W
0.526(or er)W
(r)S
(or)S
0.526(s. )W
-0.181 N (T)S
0.526(he method of r)W
(etur)S
0.526(ning er)W
(r)S
0.526(or codes to the caller allo)W
-0.251 N 0.526(ws m)W
(uc)S
0.526(h g)W
(r)S
(ea)S
0.526(ter \337)W
(e)S
-0.151 N (xibility)S
60 417.666 M 0.279(than handling the er)W
(r)S
0.279(or in the r)W
(outine)S
(,)S
0.279( and is equall)W
0.279(y simple to perf)W
(or)S
0.279(m. )W
-0.181 N (T)S
0.279(he complica)W
0.279(tion is tha)W
0.279(t a set of er)W
(r)S
0.279(or codes)W
60 429.666 M (m)S
0.013(ust indica)W
0.013(te the er)W
(r)S
(or)S
0.013(s tha)W
0.013(t could occur)W
-0.552 N 0.013(. So,)W
0.013( as w)W
0.013(e pr)W
0.013(oceed thr)W
0.013(ough our libr)W
(ar)S
(y)S
-0.652 N (,)S
0.013( w)W
0.013(e shall tr)W
(ac)S
0.013(k er)W
(r)S
(or)S
0.013(s and de\336)W
0.013(ne er)W
(r)S
(or)S
60 441.666 M (codes. )S
FmE
945 0 :M
f286 sf
( )S
947 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 456.666 M (+)S
FmE
947 0 :M
f57 sf
( )S
949 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 456.666 M (Handle er)S
(r)S
(or)S
(s in a consistent manner:)S
( either pr)S
(int er)S
(r)S
(or messa)S
(g)S
(es fr)S
(om a centr)S
(aliz)S
(ed pr)S
(inting r)S
(outine)S
(,)S
( or r)S
(etur)S
(n )S
78 468.666 M (er)S
(r)S
(or codes to the caller and let the caller r)S
(e)S
(por)S
(t the er)S
(r)S
(or)S
-0.552 N (.)S
60 483.666 M (W)S
-0.801 N 0.144(e mak)W
-0.1 N 0.144(e some decisions a)W
0.144(bout the libr)W
(ar)S
0.144(y functions f)W
0.144(or this pur)W
(pose)S
0.144(. )W
-0.181 N (T)S
0.144(he r)W
(etur)S
0.144(n v)W
-0.251 N 0.144(alue will indica)W
0.144(te w)W
0.144(hether an er)W
(r)S
(or)S
60 495.666 M -0.245(has occur)W
(r)S
-0.245(ed; if so,)W
-0.245( the function r)W
(etur)S
-0.245(ns an er)W
(r)S
-0.245(or code and an e)W
-0.151 N -0.245(xpositor messa)W
(g)S
-0.245(e in a b)W
-0.2 N (uf)S
-0.251 N (f)S
(er)S
-0.552 N -0.245(. If not,)W
-0.245( it r)W
(etur)S
-0.245(ns a \337)W
(a)S
-0.245(g indi-)W
60 507.666 M (ca)S
(ting no er)S
(r)S
(or)S
-0.552 N (. So,)S
( w)S
(e de\336)S
(ne all er)S
(r)S
(or codes to be ne)S
-0.151 N (g)S
-0.051 N (a)S
(ti)S
-0.251 N (v)S
-0.151 N (e:)S
FmE
950 0 :M
f216 sf
( )S
956 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 522.666 M 0 0 12(/*)FmTx
60 534.666 M 0 0 132( * error return values)FmTx
60 546.666 M 0 0 318( * all the queue manipulation functions return these;)FmTx
60 558.666 M 0 0 324( * you can interpret them yourself, or print the error)FmTx
60 570.666 M 0 0 312( * message in qe_errbuf, which describes these codes)FmTx
60 582.666 M 0 0 18( */)FmTx
60 594.666 M 0 0 126(#define QE_ISERROR\(x\))FmTx
18 N 0 0 54(\(\(x\) < 0\))FmTx
18 N 0 0 216(/* true if x is a qlib error code */)FmTx
60 606.666 M 0 0 90(#define QE_NONE)FmTx
0 0 6( )FmTx
48 N 0 0 6(0)FmTx
66 N 0 0 90(/* no errors */)FmTx
60 618.666 M 0 0 12(/*)FmTx
60 630.666 M 0 0 390( * the error buffer; contains a message describing the last queue)FmTx
60 642.666 M 0 0 414( * error \(but is NUL if no error encountered\); not cleared on success)FmTx
60 654.666 M 0 0 18( */)FmTx
60 666.666 M 0 0 162(extern char qe_errbuf[256];)FmTx
FmE
956 0 :M
f57 sf
( )S
958 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 681.666 M (Lik)S
-0.1 N 0.053(e the UNIX system v)W
-0.251 N (ar)S
(ia)S
(b)S
0.053(le )W
FmE
958 0 :M
f125 sf
( )S
960 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
187.913 681.666 M (er)S
(rno)S
FmE
961 0 :M
f57 sf
( )S
963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.13 681.666 M (\(3\),)S
0.053( )W
FmE
963 0 :M
f125 sf
( )S
965 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.838 681.666 M (qe_er)S
(rbuf)S
FmE
966 0 :M
f57 sf
( )S
968 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.271 681.666 M 0.053( is set on an er)W
(r)S
0.053(or b)W
-0.2 N 0.053(ut not c)W
(lear)S
0.053(ed on success. )W
-0.181 N (T)S
0.053(he b)W
-0.2 N (uf)S
-0.251 N (f)S
0.053(er will con-)W
60 693.666 M -0.037(tain ad)W
-0.037(ditional inf)W
(or)S
(ma)S
-0.037(tion \(suc)W
-0.037(h as in w)W
(hic)S
-0.037(h r)W
-0.037(outine the er)W
(r)S
-0.037(or occur)W
(r)S
-0.037(ed and r)W
(ele)S
-0.251 N (v)S
-0.251 N -0.037(ant n)W
(umber)S
-0.037(s\). )W
-0.181 N (T)S
-0.037(he f)W
(ollo)S
-0.251 N -0.037(wing macr)W
(os)S
FmE
endp
showpage
%%Page: 8 8
%%BeginPageSetup
initializepage
(Matt Bishop; page: 8 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
968 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
968 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
968 0 :M
f57 sf
( )S
970 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
971 0 :M
f70 sf
( )S
973 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
973 0 :M
f57 sf
( )S
975 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (8)S
60 66.667 M (aid this pr)S
(ocess:)S
FmE
975 0 :M
f216 sf
( )S
981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
168 81.667 M 0 0 180(/* macros to fill qe_errbuf */)FmTx
60 93.667 M 0 0 114(#define ERRBUF\(str\))FmTx
30 N 0 0 294(\(void\) strncpy\(qe_errbuf, str, sizeof\(qe_errbuf\)\))FmTx
60 105.667 M 0 0 132(#define ERRBUF2\(str,n\))FmTx
12 N 0 0 198(\(void\) sprintf\(qe_errbuf, str, n\))FmTx
60 117.667 M 0 0 144(#define ERRBUF3\(str,n,m\))FmTx
0 0 216(\(void\) sprintf\(qe_errbuf, str, n, m\))FmTx
FmE
981 0 :M
f57 sf
( )S
983 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 132.667 M (T)S
0.098(hese ar)W
0.098(e de\336)W
0.098(ned in )W
FmE
984 0 :M
f125 sf
( )S
986 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
143.684 132.667 M (qlib.c)S
FmE
986 0 :M
f57 sf
( )S
988 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.179 132.667 M 0.098( because the)W
-0.151 N 0.098(y f)W
(or)S
(ma)S
0.098(t messa)W
(g)S
0.098(es placed in )W
FmE
989 0 :M
f125 sf
( )S
991 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
331.354 132.667 M (qe_er)S
(rbuf)S
FmE
991 0 :M
f57 sf
( )S
993 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.788 132.667 M 0.098(; the functions tha)W
0.098(t call the libr)W
(ar)S
0.098(y ha)W
-0.2 N (v)S
-0.151 N (e)S
60 144.667 M (no use f)S
(or them. )S
60 159.667 M (W)S
-0.801 N (e also r)S
(ede\336)S
(ne the function interf)S
-0.1 N (ace to elimina)S
(te the lo)S
-0.251 N (w cohesion of the )S
FmE
994 0 :M
f125 sf
( )S
996 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
362.327 159.667 M (qmanage)S
FmE
996 0 :M
f57 sf
( )S
998 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.984 159.667 M ( r)S
(outine:)S
FmE
999 0 :M
f216 sf
( )S
1005 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 174.667 M 0 0 168(int create_queue\(QTICKET *\);)FmTx
48 N 0 0 120(/* create a queue */)FmTx
60 186.667 M 0 0 156(int delete_queue\(QTICKET\);)FmTx
60 N 0 0 120(/* delete a queue */)FmTx
60 198.667 M 0 0 186(int put_on_queue\(QTICKET, int\);)FmTx
30 N 0 0 192(/* put number on end of queue */)FmTx
60 210.666 M 0 0 210(int take_off_queue\(QTICKET, int *\);)FmTx
6 N 0 0 216(/* pull number off front of queue */)FmTx
FmE
1005 0 :M
f57 sf
( )S
1007 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 225.666 M (T)S
(his elimina)S
(tes the use of a \337)S
(a)S
(g v)S
-0.251 N (ar)S
(ia)S
(b)S
(le to mana)S
(g)S
(e cr)S
(ea)S
(tion or deletion.)S
60 240.666 M (In the )S
FmE
1007 0 :M
f125 sf
( )S
1009 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.544 240.666 M (qlib.c)S
FmE
1010 0 :M
f57 sf
( )S
1012 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.04 240.666 M ( \336)S
(le w)S
(e place the de\336)S
(nition of the queue str)S
(uctur)S
(e and the r)S
(ela)S
(ted v)S
-0.251 N (ar)S
(ia)S
(b)S
(les:)S
FmE
1012 0 :M
f216 sf
( )S
1018 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 255.666 M 0 0 270(/* macros for the queue structure \(limits\) */)FmTx
60 267.666 M 0 0 72(#define MAXQ)FmTx
36 N 0 0 24(1024)FmTx
84 N 0 0 156(/* max number of queues */)FmTx
60 279.666 M 0 0 84(#define MAXELT)FmTx
24 N 0 0 24(1024)FmTx
84 N 0 0 228(/* max number of elements per queue */)FmTx
60 303.666 M 0 0 150(/* the queue structure */)FmTx
60 315.666 M 0 0 102(typedef int QELT;)FmTx
114 N 0 0 204(/* type of element being queued */)FmTx
60 327.666 M 0 0 132(typedef struct queue {)FmTx
96 339.666 M 0 0 90(QTICKET ticket;)FmTx
90 N 0 0 180(/* contains unique queue ID */)FmTx
96 351.666 M 0 0 102(QELT que[MAXELT];)FmTx
78 N 0 0 132(/* the actual queue */)FmTx
96 363.666 M 0 0 54(int head;)FmTx
126 N 0 0 216(/* head index in que of the queue */)FmTx
96 375.666 M 0 0 60(int count;)FmTx
120 N 0 0 198(/* number of elements in queue */)FmTx
60 387.666 M 0 0 48(} QUEUE;)FmTx
60 399.666 M 0 0 252(/* variables shared by library routines */)FmTx
60 411.666 M 0 0 162(static QUEUE *queues[MAXQ];)FmTx
54 N 0 0 150(/* the array of queues */)FmTx
312 423.666 M 0 0 174(/* nonce generator -- this */)FmTx
60 435.666 M 0 0 234(static unsigned int noncectr = NOFFSET;)FmTx
18 N 0 0 174(/* MUST be non-zero always */)FmTx
FmE
1018 0 :M
f57 sf
( )S
1020 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 450.666 M (W)S
-0.801 N 0.186(e made one c)W
(hang)S
0.186(e to the queue de\336)W
(nition:)S
0.186( all queues ar)W
0.186(e to be of \336)W
(x)S
-0.151 N 0.186(ed siz)W
(e)S
0.186(. )W
-0.181 N (T)S
0.186(his w)W
-0.1 N 0.186(as f)W
0.186(or simplicity \(see the e)W
-0.151 N (x)S
-0.151 N (er)S
-0.2 N (-)S
60 462.666 M (cise belo)S
-0.251 N (w\). )S
-0.552 N (Also,)S
( all globals ar)S
(e dec)S
(lar)S
(ed )S
FmE
1021 0 :M
f125 sf
( )S
1023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
228.835 462.666 M (static)S
FmE
1023 0 :M
f57 sf
( )S
1025 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.498 462.666 M ( so the)S
-0.151 N (y ar)S
(e not accessib)S
(le to an)S
-0.151 N (y functions outside the libr)S
(ar)S
(y \336)S
(le)S
(.)S
60 477.666 M (W)S
-0.801 N -0.014(e distinguish betw)W
-0.014(een an )W
FmE
1026 0 :M
f125 sf
( )S
1028 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.664 477.666 M (empty)S
FmE
1028 0 :M
f57 sf
( )S
1030 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
193.538 477.666 M -0.014( queue and a )W
FmE
1031 0 :M
f125 sf
( )S
1033 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
246.237 477.666 M (nonexistent)S
FmE
1033 0 :M
f57 sf
( )S
1035 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
291.776 477.666 M -0.014( queue)W
-0.014(. )W
-0.181 N (T)S
-0.014(he f)W
(or)S
-0.014(mer has its )W
FmE
1036 0 :M
f125 sf
( )S
1038 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
398.409 477.666 M (count)S
FmE
1038 0 :M
f57 sf
( )S
1040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
420.626 477.666 M -0.014( \336)W
-0.014(eld set to 0 \(so the queue)W
60 489.666 M (e)S
-0.151 N 0.561(xists b)W
-0.2 N 0.561(ut contains no elements\); the la)W
0.561(tter has the r)W
(ele)S
-0.251 N (v)S
-0.251 N 0.561(ant element in )W
FmE
1041 0 :M
f125 sf
( )S
1043 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346.332 489.666 M (queues)S
FmE
1043 0 :M
f57 sf
( )S
1045 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
374.099 489.666 M 0.561( set to )W
FmE
1046 0 :M
f151 sf
( )S
1049 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
402.167 489.666 M (NULL)S
FmE
1049 0 :M
f57 sf
( )S
1051 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
433.276 489.666 M 0.561( \(so the queue does not)W
60 501.666 M (e)S
-0.151 N (xist\).)S
FmE
1051 0 :M
f151 sf
( )S
1054 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 516.666 M (Ex)S
(er)S
-0.181 N -1.12(cise 4-1. )W
FmE
1055 0 :M
f57 sf
( )S
1057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.153 516.666 M (T)S
-0.84(he macr)W
-0.84(os )W
FmE
1057 0 :M
f125 sf
( )S
1059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
224.892 516.666 M (ERRBUF2)S
FmE
1060 0 :M
f57 sf
( )S
1062 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
267.653 516.666 M -0.84( and )W
FmE
1062 0 :M
f125 sf
( )S
1064 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
285.411 516.666 M (ERRBUF3)S
FmE
1065 0 :M
f57 sf
( )S
1067 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.172 516.666 M -0.84( use )W
FmE
1067 0 :M
f125 sf
( )S
1069 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
344.819 516.666 M (sprintf)S
FmE
1070 0 :M
f57 sf
( )S
1072 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.933 516.666 M -0.84( to f)W
(or)S
(ma)S
-0.84(t the er)W
(r)S
-0.84(or messa)W
(g)S
(e)S
-0.84(. )W
-0.3 N (W)S
(ha)S
-0.84(t pr)W
(ob-)S
111 528.666 M (lem does this function not guar)S
(d a)S
(g)S
-0.051 N (ainst? )S
-0.3 N (W)S
(h)S
-0.051 N (y can w)S
(e ignor)S
(e this pr)S
(ob)S
(lem in our libr)S
(ar)S
(y?)S
FmE
1072 0 :M
f151 sf
( )S
1075 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 543.666 M (Ex)S
(er)S
-0.181 N -1.097(cise 4-2. )W
FmE
1075 0 :M
f57 sf
( )S
1077 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
176.899 543.666 M (W)S
(ha)S
-0.823(t pr)W
(ob)S
-0.823(lems does sta)W
-0.823(tic alloca)W
-0.823(tion of space f)W
-0.823(or eac)W
-0.823(h queue\325)W
-0.552 N -0.823(s contents and f)W
-0.823(or all queues )W
111 555.666 M (intr)S
(oduce? )S
-0.3 N (W)S
(ha)S
(t ad)S
(v)S
-0.251 N (anta)S
(g)S
(es?)S
FmE
1078 0 :M
f138 sf
( )S
1081 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 580.999 M (4.2. )S
-0.36 N (T)S
-1.104 N (ok)S
-0.12 N (en Cr)S
-0.217 N (ea)S
(tion and )S
-0.662 N (Anal)S
(ysis)S
FmE
1082 0 :M
f57 sf
( )S
1084 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 596.666 M 0.181(One function inter)W
0.181(nal to the libr)W
(ar)S
0.181(y cr)W
(ea)S
0.181(tes a tok)W
-0.1 N 0.181(en fr)W
0.181(om an inde)W
-0.151 N (x,)S
0.181( and another tak)W
-0.1 N 0.181(es a tok)W
-0.1 N (en,)S
0.181( v)W
-0.251 N (alida)S
0.181(tes it,)W
0.181( and r)W
(etur)S
(ns)S
60 608.666 M (the a)S
(ppr)S
(opr)S
(ia)S
(te inde)S
-0.151 N (x.)S
60 623.666 M (T)S
0.111(hese ar)W
0.111(e se)W
(par)S
(a)S
0.111(te r)W
0.111(outines because w)W
0.111(e need to be a)W
(b)S
0.111(le to c)W
(hang)S
0.111(e the tok)W
-0.1 N (en\325)S
-0.552 N 0.111(s r)W
(e)S
(pr)S
(esenta)S
0.111(tion if the libr)W
(ar)S
0.111(y is por)W
0.111(ted to)W
60 635.666 M 1.23(a system without a 32-bit quantity to stor)W
1.23(e the tok)W
-0.1 N 1.23(en in. Or)W
-0.4 N (,)S
1.23( w)W
1.23(e ma)W
1.23(y pr)W
(ef)S
1.23(er to modify the ma)W
(thema)S
1.23(tical function)W
60 647.666 M (in)S
-0.4 N (v)S
-0.2 N (olv)S
-0.151 N (ed)S
-0.136(. In either case)W
(,)S
-0.136( this incr)W
-0.136(eases cohesion and decr)W
-0.136(eases coupling)W
(,)S
-0.136( lauda)W
(b)S
-0.136(le g)W
-0.136(oals fr)W
-0.136(om the softw)W
-0.1 N (ar)S
-0.136(e eng)W
(ineer)S
(ing)S
60 659.666 M (\(and maintenance!\) per)S
(specti)S
-0.251 N (v)S
-0.151 N (es.)S
60 674.666 M -0.044(In w)W
(ha)S
-0.044(t f)W
(ollo)S
-0.251 N (ws,)S
-0.044( )W
FmE
1084 0 :M
f125 sf
( )S
1086 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
127.374 674.666 M (IOFFSET)S
FmE
1087 0 :M
f57 sf
( )S
1089 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
166.805 674.666 M -0.044( is the of)W
-0.251 N -0.044(fset ad)W
-0.044(ded to the inde)W
-0.151 N -0.044(x of the element and )W
FmE
1089 0 :M
f125 sf
( )S
1091 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
370.244 674.666 M (NOFFSET)S
FmE
1092 0 :M
f57 sf
( )S
1094 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
413.018 674.666 M -0.044( is the initial nonce)W
-0.044(. Both ar)W
(e)S
60 686.666 M (de\336)S
(ned in )S
FmE
1094 0 :M
f125 sf
( )S
1096 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102.214 686.666 M (qlib.c)S
FmE
1097 0 :M
f57 sf
( )S
1099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
124.709 686.666 M (:)S
FmE
1099 0 :M
f216 sf
( )S
1105 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 701.666 M 0 0 90(#define IOFFSET)FmTx
18 N 0 0 36(0x1221)FmTx
36 N 0 0 246(/* used to hide index number in ticket */)FmTx
FmE
60 509 45 49 rC
1105 0 :M
FrMacBegin
60 509.999 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 510 45 48 rC
:imsv 39 39 1 5 [45 0 0 47.432 60 510] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1105 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 9 9
%%BeginPageSetup
initializepage
(Matt Bishop; page: 9 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1105 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1105 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1105 0 :M
f57 sf
( )S
1107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1108 0 :M
f70 sf
( )S
1110 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1110 0 :M
f57 sf
( )S
1112 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
154.837 N (9)S
FmE
1112 0 :M
f216 sf
( )S
1118 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 66.667 M 0 0 90(#define NOFFSET)FmTx
18 N 0 0 36(0x0502)FmTx
36 N 0 0 114(/* initial nonce */)FmTx
FmE
1118 0 :M
f57 sf
( )S
1120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 81.667 M (Her)S
(e is the function to g)S
(ener)S
(a)S
(te a tok)S
-0.1 N (en:)S
FmE
1121 0 :M
f216 sf
( )S
1127 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 96.667 M 0 0 12(/*)FmTx
60 108.667 M 0 0 414( * generate a token; this is an integer: index number + OFFSET,,nonce)FmTx
60 120.667 M 0 0 282( * WARNING: each quantity must fit into 16 bits)FmTx
60 132.667 M 0 0 12( *)FmTx
60 144.667 M 0 0 84( * PARAMETERS:)FmTx
24 N 0 0 54(int index)FmTx
18 N 0 0 72(index number)FmTx
60 156.667 M 0 0 66( * RETURNED)FmTx
0 0 6(:)FmTx
36 N 0 0 42(QTICKET)FmTx
30 N 0 0 174(ticket of corresponding queue)FmTx
60 168.667 M 0 0 60( * ERRORS:)FmTx
48 N 0 0 66(QE_INTINCON)FmTx
6 N 0 0 162(* index + OFFSET is too big)FmTx
60 180.667 M 0 0 12( *)FmTx
168 N 0 0 108(* nonce is too big)FmTx
60 192.667 M 0 0 12( *)FmTx
168 N 0 0 138(* index is out of range)FmTx
60 204.666 M 0 0 12( *)FmTx
168 N 0 0 222(\(qe_errbuf has disambiguating string\))FmTx
60 216.666 M 0 0 78( * EXCEPTIONS)FmTx
0 0 6(:)FmTx
24 N 0 0 24(none)FmTx
60 228.666 M 0 0 18( */)FmTx
60 240.666 M 0 0 252(static QTICKET qtktref\(unsigned int index\))FmTx
60 252.666 M 0 0 6({)FmTx
96 264.666 M 0 0 108(unsigned int high;)FmTx
36 N 0 0 216(/* high 16 bits of ticket \(index\) */)FmTx
96 276.666 M 0 0 102(unsigned int low;)FmTx
42 N 0 0 210(/* low 16 bits of ticket \(nonce\) */)FmTx
96 300.666 M 0 0 300(/* sanity check argument; called internally ... */)FmTx
96 312.666 M 0 0 108(if \(index > MAXQ\){)FmTx
132 324.666 M 0 0 318(ERRBUF3\(\"qtktref: index %u exceeds %d\", index, MAXQ\);)FmTx
132 336.666 M 0 0 120(return\(QE_INTINCON\);)FmTx
96 348.666 M 0 0 6(})FmTx
96 372.666 M 0 0 12(/*)FmTx
96 384.666 M 0 0 360( * get the high part of the ticket \(index into queues array,)FmTx
96 396.666 M 0 0 222( *   offset by some arbitrary amount\))FmTx
96 408.666 M 0 0 414( * SANITY CHECK: be sure index + OFFSET fits into 16 bits as positive)FmTx
96 420.666 M 0 0 18( */)FmTx
96 432.666 M 0 0 192(high = \(index + IOFFSET\)&0x7fff;)FmTx
96 444.666 M 0 0 174(if \(high != index + IOFFSET\){)FmTx
132 456.666 M 0 0 300(ERRBUF3\(\"qtktref: index %u larger than %u\", index,)FmTx
384 468.666 M 0 0 108(0x7fff - IOFFSET\);)FmTx
132 480.666 M 0 0 120(return\(QE_INTINCON\);)FmTx
96 492.666 M 0 0 6(})FmTx
96 516.666 M 0 0 12(/*)FmTx
96 528.666 M 0 0 246( * get the low part of the ticket \(nonce\))FmTx
96 540.666 M 0 0 288( * SANITY CHECK: be sure nonce fits into 16 bits)FmTx
96 552.666 M 0 0 18( */)FmTx
96 564.666 M 0 0 144(low = noncectr & 0xffff;)FmTx
96 576.666 M 0 0 222(if \(\(low != noncectr++\) || low == 0\){)FmTx
132 588.666 M 0 0 318(ERRBUF3\(\"qtktref: generation number %u exceeds %u\\n\",)FmTx
312 600.666 M 0 0 192(noncectr - 1, 0xffff - NOFFSET\);)FmTx
132 612.666 M 0 0 120(return\(QE_INTINCON\);)FmTx
96 624.666 M 0 0 6(})FmTx
96 648.666 M 0 0 222(/* construct and return the ticket */)FmTx
96 660.666 M 0 0 234(return\(\(QTICKET\) \(\(high << 16\) | low\)\);)FmTx
60 672.666 M 0 0 6(})FmTx
FmE
1127 0 :M
f57 sf
( )S
1129 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 687.666 M (T)S
(he function is dec)S
(lar)S
(ed )S
FmE
1129 0 :M
f125 sf
( )S
1131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
159.397 687.666 M (static)S
FmE
1132 0 :M
f57 sf
( )S
1134 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
181.06 687.666 M ( so tha)S
(t onl)S
(y functions in the libr)S
(ar)S
(y ma)S
(y access it.)S
60 702.666 M (Ra)S
0.337(ther than r)W
(etur)S
0.337(n a v)W
-0.251 N 0.337(alue thr)W
0.337(ough the par)W
0.337(ameter list,)W
0.337( w)W
0.337(e compute the tok)W
-0.1 N 0.337(en and r)W
(etur)S
0.337(n it as the function v)W
-0.251 N (alue)S
0.337(. )W
-0.181 N (T)S
(his)S
FmE
endp
showpage
%%Page: 10 10
%%BeginPageSetup
initializepage
(Matt Bishop; page: 10 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1134 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1134 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1134 0 :M
f57 sf
( )S
1136 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1137 0 :M
f70 sf
( )S
1139 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1139 0 :M
f57 sf
( )S
1141 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (10)S
60 66.667 M (allo)S
-0.251 N 0.023(ws us to r)W
(etur)S
0.023(n er)W
(r)S
0.023(or codes as w)W
0.023(ell \(since tok)W
-0.1 N 0.023(ens ar)W
0.023(e al)W
-0.1 N (w)S
-0.1 N (a)S
0.023(ys positi)W
-0.251 N (v)S
-0.151 N (e)S
(,)S
0.023( and er)W
(r)S
0.023(or codes al)W
-0.1 N (w)S
-0.1 N (a)S
0.023(ys ne)W
-0.151 N (g)S
-0.051 N (a)S
(ti)S
-0.251 N (v)S
-0.151 N 0.023(e\). )W
-0.181 N (T)S
0.023(he single)W
60 78.667 M (par)S
(ameter is an inde)S
-0.151 N (x f)S
(or w)S
(hic)S
(h the tok)S
-0.1 N (en is to be computed)S
(.)S
FmE
1141 0 :M
f286 sf
( )S
1143 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 93.667 M (+)S
FmE
1144 0 :M
f57 sf
( )S
1146 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 93.667 M (Mak)S
-0.1 N (e interf)S
-0.1 N (aces simple)S
(,)S
( e)S
-0.251 N (v)S
-0.151 N (en if the)S
-0.151 N (y ar)S
(e f)S
(or r)S
(outines inter)S
(nal to the libr)S
(ar)S
(y)S
-0.652 N (.)S
60 108.667 M 0.472( )W
-0.181 N (T)S
0.472(he ne)W
-0.151 N 0.472(xt )W
FmE
1146 0 :M
f125 sf
( )S
1148 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
101.347 108.667 M (if)S
FmE
1149 0 :M
f57 sf
( )S
1151 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
106.904 108.667 M 0.472( sta)W
0.472(tement c)W
(hec)S
0.472(ks the v)W
-0.251 N 0.472(alue of the par)W
0.472(ameter; in this case)W
(,)S
0.472( it m)W
0.472(ust be a v)W
-0.251 N 0.472(alid ar)W
(r)S
(a)S
0.472(y inde)W
-0.151 N 0.472(x \(betw)W
0.472(een 0 and)W
FmE
1151 0 :M
f125 sf
( )S
1153 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 120.667 M (MAXQ)S
FmE
1154 0 :M
f57 sf
( )S
1156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
87.764 120.667 M 0.652( inc)W
(lusi)S
-0.251 N (v)S
-0.151 N 0.652(e\). )W
-0.552 N 0.652(As the par)W
0.652(ameter is unsigned)W
(,)S
0.652( onl)W
0.652(y the upper bound need be c)W
(hec)S
(k)S
-0.1 N (ed)S
0.652(. )W
-0.181 N (T)S
0.652(his ma)W
0.652(y seem e)W
-0.151 N (xcessi)S
-0.251 N (v)S
-0.151 N (e;)S
60 132.667 M 0.775(after all,)W
0.775( this function is onl)W
0.775(y called within our libr)W
(ar)S
(y)S
-0.652 N (,)S
0.775( so can\325)W
-0.181 N 0.775(t w)W
0.775(e ensur)W
0.775(e the par)W
0.775(ameter is al)W
-0.1 N (w)S
-0.1 N (a)S
0.775(ys in the e)W
-0.151 N (xpected)S
60 144.667 M (r)S
(ang)S
-0.002(e? )W
-0.181 N (T)S
-0.002(he pr)W
-0.002(inciple of )W
(\322can\325)S
-0.181 N -0.002(t ha)W
(ppen\323)S
-0.002( a)W
-0.002(pplies her)W
(e)S
-0.002(. )W
-0.3 N (W)S
-0.801 N -0.002(e can indeed assur)W
-0.002(e the inde)W
-0.151 N -0.002(x al)W
-0.1 N (w)S
-0.1 N (a)S
-0.002(ys lies within the r)W
(ang)S
(e)S
(,)S
-0.002( b)W
-0.2 N (ut)S
60 156.667 M -0.055(suppose someone else one da)W
-0.055(y modi\336)W
-0.055(es our code and mak)W
-0.1 N -0.055(es an er)W
(r)S
(or)S
-0.552 N -0.055(. )W
-0.181 N (T)S
(ha)S
-0.055(t er)W
(r)S
-0.055(or could cause the libr)W
(ar)S
-0.055(y to f)W
-0.1 N -0.055(ail. So it\325)W
-0.552 N (s)S
60 168.667 M (best to pr)S
(o)S
(g)S
(r)S
(am def)S
(ensi)S
-0.251 N (v)S
-0.151 N (el)S
(y)S
-0.652 N (.)S
FmE
1156 0 :M
f286 sf
( )S
1158 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 183.667 M (+)S
FmE
1159 0 :M
f57 sf
( )S
1161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 183.667 M (Al)S
-0.1 N (w)S
-0.1 N (a)S
(ys c)S
(hec)S
(k par)S
(ameter)S
(s to mak)S
-0.1 N (e sur)S
(e the)S
-0.151 N (y ar)S
(e r)S
(easona)S
(b)S
(le)S
(.)S
60 198.667 M 0.255(If an er)W
(r)S
0.255(or occur)W
(s,)S
0.255( it should be identi\336)W
0.255(ed pr)W
(ecisel)S
(y)S
-0.652 N 0.255(. )W
-0.181 N (T)S
-0.801 N (w)S
-0.1 N 0.255(o tec)W
0.255(hniques ar)W
0.255(e combined her)W
(e)S
0.255(. )W
-0.181 N (T)S
0.255(he \336)W
(r)S
0.255(st is an er)W
(r)S
0.255(or messa)W
(g)S
(e)S
(,)S
60 210.666 M (g)S
(i)S
-0.251 N 0.245(ving the name of the r)W
0.245(outine and an e)W
-0.151 N 0.245(xact descr)W
0.245(iption of the pr)W
(ob)S
0.245(lem. It is in )W
FmE
1162 0 :M
f125 sf
( )S
1164 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
378.124 210.666 M (qe_er)S
(rbuf)S
FmE
1164 0 :M
f57 sf
( )S
1166 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
417.558 210.666 M (,)S
0.245( and a)W
-0.2 N (v)S
-0.251 N (aila)S
(b)S
0.245(le to the caller)W
-0.552 N (.)S
60 222.666 M (T)S
(he second is a r)S
(etur)S
(n v)S
-0.251 N (alue indica)S
(ting an er)S
(r)S
(or \(speci\336)S
(call)S
(y)S
-0.652 N (,)S
( an inter)S
(nal inconsistenc)S
-0.151 N (y\):)S
FmE
1167 0 :M
f216 sf
( )S
1173 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 237.666 M 0 0 114(#define QE_INTINCON)FmTx
30 N 0 0 12(-8)FmTx
24 N 0 0 168(/* internal inconsistency */)FmTx
FmE
1173 0 :M
f57 sf
( )S
1175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 252.666 M (T)S
(he calling r)S
(outine m)S
(ust detect this er)S
(r)S
(or and act accor)S
(dingl)S
(y)S
-0.652 N (.)S
FmE
1175 0 :M
f286 sf
( )S
1177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 267.666 M (+)S
FmE
1178 0 :M
f57 sf
( )S
1180 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 267.666 M (Gi)S
-0.251 N (v)S
-0.151 N (e useful and inf)S
(or)S
(ma)S
(ti)S
-0.251 N (v)S
-0.151 N (e er)S
(r)S
(or messa)S
(g)S
(es. Inc)S
(lude the name of the r)S
(outine in w)S
(hic)S
(h the er)S
(r)S
(or occur)S
(s. )S
-0.552 N (Allo)S
-0.251 N (w )S
78 279.666 M (n)S
(umber)S
(s in the er)S
(r)S
(or messa)S
(g)S
(e)S
(. Use er)S
(r)S
(or codes tha)S
(t pr)S
(ecisel)S
(y descr)S
(ibe the er)S
(r)S
(or)S
-0.552 N (.)S
60 294.666 M (.T)S
0.403(he er)W
(r)S
0.403(or code her)W
0.403(e indica)W
0.403(tes an inter)W
0.403(nal inconsistenc)W
-0.151 N 0.403(y \(because an er)W
(r)S
0.403(or indica)W
0.403(tes another libr)W
(ar)S
0.403(y r)W
0.403(outine is calling)W
FmE
1180 0 :M
f125 sf
( )S
1182 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 306.666 M (qtktr)S
-0.371 N (ef)S
FmE
1183 0 :M
f57 sf
( )S
1185 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
85.73 306.666 M 0.234( incor)W
(r)S
(ectl)S
0.234(y\). )W
-0.552 N 0.234(An er)W
(r)S
0.234(or messa)W
(g)S
0.234(e or code simpl)W
0.234(y indica)W
0.234(ting an er)W
(r)S
0.234(or occur)W
(r)S
0.234(ed w)W
-0.1 N 0.234(ould be less helpful,)W
0.234( because w)W
(e)S
60 318.666 M (w)S
-0.1 N (ould not kno)S
-0.251 N (w w)S
(h)S
-0.051 N (y the er)S
(r)S
(or occur)S
(r)S
(ed)S
(,)S
( or \(de)S
(pending on the er)S
(r)S
(or messa)S
(g)S
(e\) w)S
(her)S
(e)S
(.)S
60 333.666 M 0.27( )W
-0.181 N (T)S
0.27(he ne)W
-0.151 N 0.27(xt sta)W
0.27(tements ad)W
0.27(d the of)W
-0.251 N 0.27(fset to the inde)W
-0.151 N 0.27(x. )W
-0.552 N 0.27(As this is to be the upper half of a 32-bit n)W
(umber)S
-0.4 N (,)S
0.27( it m)W
0.27(ust \336)W
0.27(t into 16)W
60 345.666 M -0.022(bits as a signed n)W
(umber)S
-0.552 N -0.022(. )W
-0.181 N (T)S
-0.022(he code c)W
(hec)S
-0.022(ks tha)W
-0.022(t this r)W
(equir)S
-0.022(ement is met. )W
-0.552 N (Ag)S
-0.051 N (ain,)S
-0.022( if it is not met,)W
-0.022( a detailed er)W
(r)S
-0.022(or messa)W
(g)S
(e)S
60 357.666 M (is g)S
(i)S
-0.251 N (v)S
-0.151 N (en.)S
FmE
1185 0 :M
f151 sf
( )S
1188 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 372.666 M (Ex)S
(er)S
-0.181 N (cise 4-3. )S
FmE
1189 0 :M
f57 sf
( )S
1191 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
179.394 372.666 M (Explain ho)S
-0.251 N (w the c)S
(hec)S
(k w)S
-0.1 N (or)S
(ks,)S
( in detail.)S
FmE
1191 0 :M
f151 sf
( )S
1194 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 387.666 M (Ex)S
(er)S
-0.181 N -0.915(cise 4-4. )W
FmE
1195 0 :M
f57 sf
( )S
1197 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.383 387.666 M (T)S
-0.686(he code uses )W
(0x7fff)S
-0.686( to mask )W
FmE
1197 0 :M
f125 sf
( )S
1199 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.772 387.666 M (index)S
FmE
1200 0 :M
f57 sf
( )S
1202 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
315.428 387.666 M -0.686( f)W
-0.686(or the compar)W
-0.686(ison instead of using )W
(0xffff)S
-0.686(. )W
-0.3 N (W)S
(h)S
-0.051 N -0.686(y is the )W
111 399.666 M (mask 15 bits instead of 16? )S
FmE
1202 0 :M
f151 sf
( )S
1205 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 414.666 M (Ex)S
(er)S
-0.181 N -0.696(cise 4-5. )W
FmE
1205 0 :M
f57 sf
( )S
1207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.822 414.666 M (T)S
-0.522(he c)W
(hec)S
-0.522(k f)W
-0.522(or )W
FmE
1208 0 :M
f125 sf
( )S
1210 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
234.274 414.666 M (noncectr)S
FmE
1210 0 :M
f57 sf
( )S
1212 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
269.257 414.666 M -0.522( is similar)W
-0.4 N (,)S
-0.522( b)W
-0.2 N -0.522(ut uses 0xf)W
-0.251 N (f)S
-0.251 N (f)S
-0.251 N -0.522(f as a mask. Explain w)W
(h)S
-0.051 N -0.522(y it does not need )W
111 426.666 M (to use 0x7f)S
-0.251 N (f)S
-0.251 N (f)S
(.)S
60 441.666 M (T)S
(he r)S
(outine to br)S
(eak do)S
-0.251 N (wn a tok)S
-0.1 N (en into its component par)S
(ts,)S
( and c)S
(hec)S
(k the queue)S
(,)S
( is similar:)S
FmE
1213 0 :M
f216 sf
( )S
1219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 456.666 M 0 0 12(/*)FmTx
60 468.666 M 0 0 300( * check a ticket number and turn it into an index)FmTx
60 480.666 M 0 0 12( *)FmTx
60 492.666 M 0 0 84( * PARAMETERS:)FmTx
24 N 0 0 66(QTICKET qno)FmTx
42 N 0 0 156(queue ticket from the user)FmTx
60 504.666 M 0 0 72( * RETURNED:)FmTx
36 N 0 0 18(int)FmTx
90 N 0 0 126(index from the ticket)FmTx
60 516.666 M 0 0 60( * ERRORS:)FmTx
48 N 0 0 72(QE_BADTICKET)FmTx
36 N 0 0 192(queue ticket is invalid because:)FmTx
60 528.666 M 0 0 12( *)FmTx
204 N 0 0 192(* index out of range [0 .. MAXQ\))FmTx
60 540.666 M 0 0 12( *)FmTx
204 N 0 0 156(* index is for unused slot)FmTx
60 552.666 M 0 0 12( *)FmTx
204 N 0 0 138(* nonce is of old queue)FmTx
60 564.666 M 0 0 12( *)FmTx
204 N 0 0 222(\(qe_errbuf has disambiguating string\))FmTx
60 576.666 M 0 0 12( *)FmTx
96 N 0 0 66(QE_INTINCON)FmTx
42 N 0 0 246(queue is internally inconsistent because:)FmTx
60 588.666 M 0 0 12( *)FmTx
204 N 0 0 222(* one of head, count is uninitialized)FmTx
60 600.666 M 0 0 12( *)FmTx
204 N 0 0 72(* nonce is 0)FmTx
60 612.666 M 0 0 12( *)FmTx
204 N 0 0 222(\(qe_errbuf has disambiguating string\))FmTx
60 624.666 M 0 0 84( * EXCEPTIONS:)FmTx
24 N 0 0 24(none)FmTx
60 636.666 M 0 0 18( */)FmTx
60 648.666 M 0 0 186(static int readref\(QTICKET qno\))FmTx
60 660.666 M 0 0 6({)FmTx
96 672.666 M 0 0 144(register unsigned index;)FmTx
36 N 0 0 168(/* index of current queue */)FmTx
96 684.666 M 0 0 108(register QUEUE *q;)FmTx
72 N 0 0 192(/* pointer to queue structure */)FmTx
FmE
60 365 45 49 rC
1219 0 :M
FrMacBegin
60 366 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 366 45 48 rC
:imsv 39 39 1 5 [45 0 0 56.919 60 366] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1219 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 11 11
%%BeginPageSetup
initializepage
(Matt Bishop; page: 11 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1219 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1219 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1219 0 :M
f57 sf
( )S
1221 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1222 0 :M
f70 sf
( )S
1224 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1224 0 :M
f57 sf
( )S
1226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (11)S
FmE
1226 0 :M
f216 sf
( )S
1232 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 66.667 M 0 0 312(/* get the index number and check it for validity */)FmTx
96 78.667 M 0 0 246(index = \(\(qno >> 16\) & 0xffff\) - IOFFSET;)FmTx
96 90.667 M 0 0 114(if \(index >= MAXQ\){)FmTx
132 102.667 M 0 0 318(ERRBUF3\(\"readref: index %u exceeds %d\", index, MAXQ\);)FmTx
132 114.667 M 0 0 126(return\(QE_BADTICKET\);)FmTx
96 126.667 M 0 0 6(})FmTx
96 138.667 M 0 0 162(if \(queues[index] == NULL\){)FmTx
132 150.667 M 0 0 348(ERRBUF2\(\"readref: ticket refers to unused queue index %u\",)FmTx
384 162.667 M 0 0 42(index\);)FmTx
132 174.667 M 0 0 126(return\(QE_BADTICKET\);)FmTx
96 186.667 M 0 0 6(})FmTx
96 210.666 M 0 0 12(/*)FmTx
96 222.666 M 0 0 348( * you have a valid index; now validate the nonce; note we)FmTx
96 234.666 M 0 0 348( * store the ticket in the queue, so just check that \(same)FmTx
96 246.666 M 0 0 54( * thing\))FmTx
96 258.666 M 0 0 18( */)FmTx
96 270.666 M 0 0 204(if \(queues[index]->ticket != qno\){)FmTx
132 282.666 M 0 0 384(ERRBUF3\(\"readref: ticket refers to old queue \(new=%u, old=%u\)\", )FmTx
204 294.666 M 0 0 258(\(\(queues[index]->ticket\)&0xffff\) - IOFFSET,)FmTx
204 306.666 M 0 0 144(\(qno&0xffff\) - NOFFSET\);)FmTx
132 318.666 M 0 0 126(return\(QE_BADTICKET\);)FmTx
96 330.666 M 0 0 6(})FmTx
96 354.666 M 0 0 12(/*)FmTx
96 366.666 M 0 0 210( * check for internal consistencies)FmTx
96 378.666 M 0 0 18( */)FmTx
96 390.666 M 0 0 342(if \(\(q = queues[index]\)->head < 0 || q->head >= MAXELT ||)FmTx
240 402.666 M 0 0 210(q->count < 0 || q->count > MAXELT\){)FmTx
132 414.666 M 0 0 360(ERRBUF3\(\"readref: internal inconsistency: head=%u,count=%u\",)FmTx
240 426.666 M 0 0 114(q->head, q->count\);)FmTx
132 438.666 M 0 0 120(return\(QE_INTINCON\);)FmTx
96 450.666 M 0 0 6(})FmTx
96 462.666 M 0 0 186(if \(\(\(q->ticket\)&0xffff\) == 0\){)FmTx
132 474.666 M 0 0 306(ERRBUF\(\"readref: internal inconsistency: nonce=0\"\);)FmTx
132 486.666 M 0 0 120(return\(QE_INTINCON\);)FmTx
96 498.666 M 0 0 6(})FmTx
96 522.666 M 0 0 192(/* all\'s well -- return index */)FmTx
96 534.666 M 0 0 84(return\(index\);)FmTx
60 546.666 M 0 0 6(})FmTx
FmE
1232 0 :M
f57 sf
( )S
1234 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 561.666 M (T)S
0.578(he ar)W
-0.181 N 0.578(gument f)W
0.578(or this function is a tok)W
-0.1 N 0.578(en r)W
(e)S
(pr)S
0.578(esenting a queue; the pur)W
0.578(pose of this function is to v)W
-0.251 N (alida)S
0.578(te the tok)W
-0.1 N (en)S
60 573.666 M 0.067(and r)W
(etur)S
0.067(n the cor)W
(r)S
0.067(esponding inde)W
-0.151 N 0.067(x. )W
-0.181 N (T)S
0.067(he \336)W
(r)S
0.067(st section of )W
FmE
1235 0 :M
f125 sf
( )S
1237 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
282.966 573.666 M (r)S
-0.371 N (eadr)S
-0.371 N (ef)S
FmE
1237 0 :M
f57 sf
( )S
1239 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
311.658 573.666 M 0.067( does this; it der)W
(i)S
-0.251 N (v)S
-0.151 N 0.067(es the inde)W
-0.151 N 0.067(x n)W
0.067(umber fr)W
0.067(om the tok)W
-0.1 N (en,)S
60 585.666 M 0.027(and c)W
(hec)S
0.027(ks \336)W
(r)S
0.027(st tha)W
0.027(t the inde)W
-0.151 N 0.027(x is a le)W
-0.151 N (g)S
-0.051 N 0.027(al inde)W
-0.151 N (x,)S
0.027( then tha)W
0.027(t ther)W
0.027(e is a queue with tha)W
0.027(t inde)W
-0.151 N 0.027(x. If either f)W
-0.1 N (ails,)S
0.027( an a)W
(ppr)S
(opr)S
(ia)S
(te)S
60 597.666 M (er)S
(r)S
0.407(or messa)W
(g)S
0.407(e is g)W
(i)S
-0.251 N (v)S
-0.151 N 0.407(en. Notice tha)W
0.407(t the er)W
(r)S
0.407(or code simpl)W
0.407(y indica)W
0.407(tes a pr)W
(ob)S
0.407(lem with the par)W
(ameter)S
-0.4 N (,)S
0.407( although the mes-)W
60 609.666 M (sa)S
(g)S
(e in )S
FmE
1240 0 :M
f125 sf
( )S
1242 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
90.544 609.666 M (qe_er)S
(rbuf )S
FmE
1242 0 :M
f57 sf
( )S
1244 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.478 609.666 M (distinguishes betw)S
(een the tw)S
-0.1 N (o.)S
FmE
1245 0 :M
f286 sf
( )S
1247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 624.666 M (+)S
FmE
1247 0 :M
f57 sf
( )S
1249 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 624.666 M (Mak)S
-0.1 N (e par)S
(ameter)S
(s quantities tha)S
(t can be c)S
(hec)S
(k)S
-0.1 N (ed f)S
(or v)S
-0.251 N (alidity)S
-0.652 N (,)S
( and c)S
(hec)S
(k them.)S
60 639.666 M -0.058(As the caller of the libr)W
(ar)S
-0.058(y has supplied the tok)W
-0.1 N (en,)S
-0.058( a bo)W
-0.058(gus tok)W
-0.1 N -0.058(en is not an inter)W
-0.058(nal er)W
(r)S
(or)S
-0.552 N -0.058(. So w)W
-0.058(e use another er)W
(r)S
-0.058(or code)W
60 651.666 M (to indica)S
(te the pr)S
(ob)S
(lem:)S
FmE
1250 0 :M
f216 sf
( )S
1256 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 666.666 M 0 0 120(#define QE_BADTICKET)FmTx
24 N 0 0 12(-3)FmTx
24 N 0 0 180(/* bad ticket for the queue */)FmTx
FmE
1256 0 :M
f57 sf
( )S
1258 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 681.666 M (Ne)S
-0.151 N (xt,)S
0.059( w)W
0.059(e c)W
(hec)S
0.059(k tha)W
0.059(t the queue with the same inde)W
-0.151 N 0.059(x as the tok)W
-0.1 N 0.059(en is the queue the tok)W
-0.1 N 0.059(en r)W
(ef)S
(er)S
0.059(s to. )W
-0.181 N (T)S
0.059(his is the )W
(\322dangling)S
60 693.666 M (r)S
(ef)S
(er)S
(ence\323)S
1.295( pr)W
(ob)S
1.295(lem mentioned ear)W
(lier)S
-0.552 N 1.295(. )W
-0.181 N (T)S
1.295(he cur)W
(r)S
1.295(ent queue\325)W
-0.552 N 1.295(s tok)W
-0.1 N 1.295(en is stor)W
1.295(ed in eac)W
1.295(h queue str)W
(uctur)S
(e)S
(,)S
1.295( so w)W
1.295(e simpl)W
(y)S
FmE
endp
showpage
%%Page: 12 12
%%BeginPageSetup
initializepage
(Matt Bishop; page: 12 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1258 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1258 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1258 0 :M
f57 sf
( )S
1260 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1261 0 :M
f70 sf
( )S
1263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1263 0 :M
f57 sf
( )S
1265 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (12)S
60 66.667 M (ensur)S
(e the cur)S
(r)S
(ent tok)S
-0.1 N (en is the queue\325)S
-0.552 N (s tok)S
-0.1 N (en. If not,)S
( w)S
(e handle the er)S
(r)S
(or a)S
(ppr)S
(opr)S
(ia)S
(tel)S
(y)S
-0.652 N (.)S
FmE
1265 0 :M
f286 sf
( )S
1267 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 81.667 M (+)S
FmE
1268 0 :M
f57 sf
( )S
1270 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 81.667 M (Chec)S
(k f)S
(or r)S
(ef)S
(er)S
(ences to outda)S
(ted da)S
(ta str)S
(uctur)S
(es.)S
60 96.667 M (T)S
0.356(he last section of code c)W
(hec)S
0.356(ks f)W
0.356(or inter)W
0.356(nal consistenc)W
-0.151 N (y)S
-0.652 N 0.356(. )W
-0.181 N (T)S
0.356(he g)W
0.356(oal is to detect pr)W
(ob)S
0.356(lems inter)W
0.356(nal to the queue libr)W
(ar)S
(y)S
-0.652 N (.)S
60 108.667 M (T)S
(he consistenc)S
-0.151 N (y c)S
(hec)S
(ks ar)S
(e:)S
60 123.667 M (1.)S
10.5 N (T)S
(he position of the queue )S
FmE
1270 0 :M
f125 sf
( )S
1272 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
182.692 123.667 M (head)S
FmE
1273 0 :M
f57 sf
( )S
1275 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
202.131 123.667 M ( m)S
(ust lie betw)S
(een 0 and )S
FmE
1275 0 :M
f151 sf
( )S
1278 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
299.323 123.667 M (MAXEL)S
-0.92 N (T)S
FmE
1279 0 :M
f57 sf
( )S
1281 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
346.542 123.667 M (.)S
60 135.667 M (2.)S
10.5 N (T)S
(he )S
FmE
1281 0 :M
f125 sf
( )S
1283 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96.047 135.667 M (count)S
FmE
1284 0 :M
f57 sf
( )S
1286 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
118.264 135.667 M ( of elements in the queue m)S
(ust be nonne)S
-0.151 N (g)S
-0.051 N (a)S
(ti)S
-0.251 N (v)S
-0.151 N (e and no g)S
(r)S
(ea)S
(ter than )S
FmE
1286 0 :M
f151 sf
( )S
1289 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.058 135.667 M (MAXEL)S
-0.92 N (T)S
FmE
1289 0 :M
f57 sf
( )S
1291 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432.277 135.667 M (.)S
60 147.667 M (3.)S
10.5 N (T)S
(he nonce can ne)S
-0.251 N (v)S
-0.151 N (er be 0. )S
-0.181 N (T)S
(his pr)S
(e)S
-0.251 N (v)S
-0.151 N (ents a r)S
(andom inte)S
-0.151 N (g)S
(er 0 fr)S
(om being tak)S
-0.1 N (en as a v)S
-0.251 N (alid tok)S
-0.1 N (en.)S
60 162.667 M (W)S
(hen an)S
-0.151 N (y of these ar)S
(e detected)S
(,)S
( the r)S
(outine r)S
(e)S
(por)S
(ts an er)S
(r)S
(or)S
-0.552 N (.)S
60 177.667 M -0.199(An alter)W
(na)S
-0.199(te a)W
(ppr)S
(oac)S
(h,)S
-0.199( f)W
-0.1 N (a)S
-0.2 N (v)S
-0.2 N (or)S
-0.199(ed b)W
-0.199(y some e)W
-0.151 N (xper)S
(ts,)S
-0.199( is to mak)W
-0.1 N -0.199(e this code conditionall)W
-0.199(y compila)W
(b)S
(le)S
(,)S
-0.199( and omit it on pr)W
(oduc-)S
60 189.667 M (tion v)S
-0.151 N (er)S
(sions. )S
-0.181 N (T)S
(he)S
-0.151 N (y either use #ifdefs to sur)S
(r)S
(ound the code:)S
FmE
1292 0 :M
f216 sf
( )S
1298 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 204.667 M 0 0 72(#ifdef DEBUG)FmTx
96 216.666 M 0 0 144(/* the code goes here */)FmTx
60 228.666 M 0 0 36(#endif)FmTx
FmE
1298 0 :M
f57 sf
( )S
1300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 243.666 M 0.247(or use the )W
FmE
1300 0 :M
f125 sf
( )S
1302 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
102.114 243.666 M (asser)S
(t\(\))S
FmE
1303 0 :M
f57 sf
( )S
1305 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132.654 243.666 M 0.247( macr)W
0.247(o. )W
-0.181 N (T)S
0.247(his sa)W
-0.2 N (v)S
-0.151 N 0.247(es space w)W
0.247(hen the libr)W
(ar)S
0.247(y is pr)W
(o)S
-0.151 N 0.247(vided f)W
0.247(or pr)W
(oduction,)S
0.247( b)W
-0.2 N 0.247(ut can mak)W
-0.1 N 0.247(e tr)W
(ac)S
0.247(king do)W
-0.251 N (wn)S
60 255.666 M (an)S
-0.151 N 0.462(y pr)W
(ob)S
0.462(lems mor)W
0.462(e dif)W
-0.251 N (\336)S
0.462(cult w)W
0.462(hen the)W
-0.151 N 0.462(y occur in pr)W
0.462(oduction softw)W
-0.1 N (ar)S
(e)S
(,)S
0.462( because less inf)W
(or)S
(ma)S
0.462(tion is pr)W
(o)S
-0.151 N 0.462(vided than in a)W
60 267.666 M (de)S
-0.251 N (v)S
-0.151 N (elopment en)S
-0.4 N (vir)S
(onment.)S
FmE
1305 0 :M
f286 sf
( )S
1307 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 282.666 M (+)S
FmE
1308 0 :M
f57 sf
( )S
1310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 282.666 M (Assume )S
(\322de)S
(b)S
-0.2 N (ug)S
(g)S
(ed code\323)S
( isn\325)S
-0.181 N (t. )S
-0.3 N (W)S
(hen it\325)S
-0.552 N (s mo)S
-0.151 N (v)S
-0.151 N (ed to other en)S
-0.4 N (vir)S
(onments,)S
( pr)S
(e)S
-0.251 N (viousl)S
(y unkno)S
-0.251 N (wn b)S
-0.2 N (ugs ma)S
(y a)S
(ppear)S
-0.552 N (.)S
60 297.666 M (T)S
0.045(he )W
FmE
1311 0 :M
f125 sf
( )S
1313 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78.091 297.666 M (asser)S
(t\(\))S
FmE
1313 0 :M
f57 sf
( )S
1315 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.631 297.666 M 0.045( macr)W
0.045(o is \(descr)W
0.045(ibed in the man)W
0.045(ual as )W
FmE
1316 0 :M
f125 sf
( )S
1318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
260.032 297.666 M (asser)S
(t)S
FmE
1318 0 :M
f57 sf
( )S
1320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.917 297.666 M 0.045(\(3\) Its ar)W
-0.181 N 0.045(gument is an e)W
-0.151 N (xpr)S
(ession,)S
0.045( and tha)W
0.045(t e)W
-0.151 N (xpr)S
0.045(ession is e)W
-0.251 N (v)S
-0.251 N (al-)S
60 309.666 M (ua)S
(ted)S
-0.211(. If the e)W
-0.151 N (xpr)S
-0.211(ession is f)W
-0.1 N (alse)S
(,)S
-0.211( the macr)W
-0.211(o wr)W
-0.211(ites a messa)W
(g)S
-0.211(e to the standar)W
-0.211(d er)W
(r)S
(or)S
-0.4 N (,)S
-0.211( a)W
(bor)S
-0.211(ts the pr)W
(o)S
(g)S
(r)S
-0.211(am and f)W
(or)S
-0.211(ces a cor)W
(e)S
60 321.666 M (dump f)S
(or de)S
(b)S
-0.2 N (ug)S
(g)S
(ing pur)S
(poses. F)S
-0.151 N (or e)S
-0.151 N (xample)S
(,)S
( the inter)S
(nal consistenc)S
-0.151 N (y c)S
(hec)S
(king code could be r)S
(e)S
(placed with:)S
FmE
1321 0 :M
f216 sf
( )S
1327 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 336.666 M 0 0 354(assert\(\(q = queues[index]\)->head < 0 || q->head >= MAXELT\);)FmTx
96 348.666 M 0 0 252(assert\(q->count < 0 || q->count > MAXELT\);)FmTx
96 360.666 M 0 0 198(assert\(\(q->ticket\)&0xffff\) != 0\);)FmTx
FmE
1327 0 :M
f57 sf
( )S
1329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 375.666 M (If the mid)S
(dle )S
FmE
1329 0 :M
f125 sf
( )S
1331 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
114.146 375.666 M (asser)S
(t)S
FmE
1332 0 :M
f57 sf
( )S
1334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
138.03 375.666 M ( e)S
-0.151 N (xpr)S
(ession w)S
(er)S
(e f)S
-0.1 N (alse)S
(,)S
( the er)S
(r)S
(or messa)S
(g)S
(e w)S
-0.1 N (ould be:)S
FmE
1334 0 :M
f216 sf
( )S
1340 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
66 390.666 M 0 0 456(assertion \322q->count < 0 || q->count > MAXELT\323 failed file \322qlib.c\323, line 178)FmTx
FmE
1340 0 :M
f57 sf
( )S
1342 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 405.666 M -0.458(If the compile-time constant )W
FmE
1343 0 :M
f151 sf
( )S
1346 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
173.677 405.666 M (NDEB)S
-0.1 N (UG)S
FmE
1346 0 :M
f57 sf
( )S
1348 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
221.348 405.666 M -0.458( is de\336)W
(ned)S
(,)S
-0.458( all )W
FmE
1349 0 :M
f125 sf
( )S
1351 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
278.116 405.666 M (asser)S
(t\(\))S
FmE
1351 0 :M
f57 sf
( )S
1353 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
308.656 405.666 M -0.458( macr)W
-0.458(os ar)W
-0.458(e empty)W
-0.652 N (,)S
-0.458( so the)W
-0.151 N -0.458(y ar)W
-0.458(e in ef)W
-0.251 N (f)S
-0.458(ect deleted fr)W
-0.458(om the)W
60 417.666 M (pr)S
(o)S
(g)S
(r)S
(am.)S
FmE
1354 0 :M
f151 sf
( )S
1357 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 432.666 M (Ex)S
(er)S
-0.181 N -0.982(cise 4-6. )W
FmE
1357 0 :M
f57 sf
( )S
1359 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.43 432.666 M (T)S
-0.737(he )W
FmE
1359 0 :M
f125 sf
( )S
1361 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
194.74 432.666 M (asser)S
(t)S
FmE
1362 0 :M
f57 sf
( )S
1364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
218.625 432.666 M -0.737( macr)W
-0.737(o a)W
(bor)S
-0.737(ts the pr)W
(o)S
(g)S
(r)S
-0.737(am if the condition f)W
-0.1 N -0.737(ails. It a)W
-0.737(pplies the theor)W
-0.737(y tha)W
-0.737(t )W
-0.737(\322if the )W
111 444.666 M (libr)S
(ar)S
-0.182(y is inter)W
(nall)S
-0.182(y inconsistent,)W
-0.182( the entir)W
-0.182(e set of queues cannot be tr)W
(usted)S
(.)S
-0.701 N (\323)S
-0.182( )W
-0.181 N (T)S
-0.182(he other methods allo)W
-0.251 N -0.182(w the )W
111 456.666 M (caller to a)S
(ttempt to r)S
(eco)S
-0.151 N (v)S
-0.151 N (er)S
-0.552 N (. )S
-0.3 N (W)S
(hic)S
(h is better? )S
-0.3 N (W)S
(hen?)S
FmE
1364 0 :M
f151 sf
( )S
1367 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 471.666 M (Ex)S
(er)S
-0.181 N -0.777(cise 4-7. )W
FmE
1368 0 :M
f57 sf
( )S
1370 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.288 471.666 M -0.583(Assume )W
FmE
1370 0 :M
f125 sf
( )S
1372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
211.419 471.666 M (IOFFSET)S
FmE
1373 0 :M
f57 sf
( )S
1375 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
250.85 471.666 M -0.583( w)W
(er)S
-0.583(e not ad)W
-0.583(ded to indices. )W
-0.3 N (W)S
(ha)S
-0.583(t er)W
(r)S
-0.583(or messa)W
(g)S
-0.583(e w)W
-0.1 N -0.583(ould be pr)W
-0.583(inted if the )W
111 483.666 M (QTICKET w)S
(er)S
(e 0? )S
-0.3 N (W)S
(h)S
-0.051 N (y is this misleading?)S
FmE
1375 0 :M
f138 sf
( )S
1378 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 509 M (4.3. Queue Cr)S
-0.217 N (ea)S
(tion)S
FmE
1379 0 :M
f57 sf
( )S
1381 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 524.666 M (T)S
(he r)S
(outine )S
FmE
1382 0 :M
f125 sf
( )S
1384 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
108.87 524.666 M (cr)S
-0.371 N (eate_queue)S
FmE
1384 0 :M
f57 sf
( )S
1386 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.358 524.666 M ( cr)S
(ea)S
(tes queues:)S
FmE
1387 0 :M
f216 sf
( )S
1393 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 539.666 M 0 0 12(/*)FmTx
60 551.666 M 0 0 126( * create a new queue)FmTx
60 563.666 M 0 0 12( *)FmTx
60 575.666 M 0 0 78( * PARAMETERS)FmTx
0 0 6(:)FmTx
24 N 0 0 24(none)FmTx
60 587.666 M 0 0 72( * RETURNED:)FmTx
36 N 0 0 42(QTICKET)FmTx
66 N 0 0 222(token \(if > 0\); error number \(if < 0\))FmTx
60 599.666 M 0 0 60( * ERRORS:)FmTx
48 N 0 0 66(QE_BADPARAM)FmTx
42 N 0 0 102(parameter is NULL)FmTx
60 611.666 M 0 0 12( *)FmTx
96 N 0 0 72(QE_TOOMANYQS)FmTx
36 N 0 0 198(too many queues allocated already)FmTx
60 623.666 M 0 0 12( *)FmTx
96 N 0 0 54(QE_NOROOM)FmTx
54 N 0 0 186(no memory to allocate new queue)FmTx
60 635.666 M 0 0 12( *)FmTx
204 N 0 0 204(\(qe_errbuf has descriptive string\))FmTx
60 647.666 M 0 0 84( * EXCEPTIONS:)FmTx
24 N 0 0 24(none)FmTx
60 659.666 M 0 0 18( */)FmTx
60 671.666 M 0 0 156(QTICKET create_queue\(void\))FmTx
60 683.666 M 0 0 6({)FmTx
96 695.666 M 0 0 102(register int cur;)FmTx
42 N 0 0 168(/* index of current queue */)FmTx
FmE
60 425 45 49 rC
1393 0 :M
FrMacBegin
60 426 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 426 45 48 rC
:imsv 39 39 1 5 [45 0 0 56.919 60 426] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1393 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 13 13
%%BeginPageSetup
initializepage
(Matt Bishop; page: 13 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1393 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1393 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1393 0 :M
f57 sf
( )S
1395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1396 0 :M
f70 sf
( )S
1398 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1398 0 :M
f57 sf
( )S
1400 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (13)S
FmE
1400 0 :M
f216 sf
( )S
1406 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 66.667 M 0 0 126(register QTICKET tkt;)FmTx
18 N 0 0 204(/* new ticket for current queue */)FmTx
96 90.667 M 0 0 156(/* check for array full */)FmTx
96 102.667 M 0 0 186(for\(cur = 0; cur < MAXQ; cur++\))FmTx
132 114.667 M 0 0 144(if \(queues[cur] == NULL\))FmTx
168 126.667 M 0 0 36(break;)FmTx
96 138.667 M 0 0 102(if \(cur == MAXQ\){)FmTx
132 150.667 M 0 0 336(ERRBUF2\(\"create_queue: too many queues \(max %d\)\", MAXQ\);)FmTx
132 162.667 M 0 0 126(return\(QE_TOOMANYQS\);)FmTx
96 174.667 M 0 0 6(})FmTx
96 198.666 M 0 0 156(/* allocate a new queue */)FmTx
96 210.666 M 0 0 306(if \(\(queues[cur] = malloc\(sizeof\(QUEUE\)\)\) == NULL\){)FmTx
132 222.666 M 0 0 282(ERRBUF\(\"create_queue: malloc: no more memory\"\);)FmTx
132 234.666 M 0 0 108(return\(QE_NOROOM\);)FmTx
96 246.666 M 0 0 6(})FmTx
96 270.666 M 0 0 126(/* generate ticket */)FmTx
96 282.666 M 0 0 216(if \(QE_ISERROR\(tkt = qtktref\(cur\)\)\){)FmTx
132 294.666 M 0 0 330(/* error in ticket generation -- clean up and return */)FmTx
132 306.666 M 0 0 150(\(void\) free\(queues[cur]\);)FmTx
132 318.666 M 0 0 114(queues[cur] = NULL;)FmTx
132 330.666 M 0 0 72(return\(tkt\);)FmTx
96 342.666 M 0 0 6(})FmTx
96 366.666 M 0 0 192(/* now initialize queue entry */)FmTx
96 378.666 M 0 0 258(queues[cur]->head = queues[cur]->count = 0;)FmTx
96 390.666 M 0 0 156(queues[cur]->ticket = tkt;)FmTx
96 414.666 M 0 0 72(return\(tkt\);)FmTx
60 426.666 M 0 0 6(})FmTx
FmE
1406 0 :M
f57 sf
( )S
1408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 441.666 M (T)S
0.917(he par)W
0.917(ameter list f)W
0.917(or this r)W
0.917(outine is empty; all inf)W
(or)S
(ma)S
0.917(tion is r)W
(etur)S
0.917(ned as a function v)W
-0.251 N (alue)S
0.917(. )W
-0.552 N 0.917(An alter)W
(na)S
0.917(te a)W
(ppr)S
(oac)S
(h)S
60 453.666 M (w)S
-0.1 N (ould be to pass the QTICKET bac)S
(k thr)S
(ough the par)S
(ameter list with the dec)S
(lar)S
(a)S
(tion)S
FmE
1409 0 :M
f216 sf
( )S
1415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
204 468.666 M 0 0 180(int create_queue\(QTICKET *tkt\))FmTx
FmE
1415 0 :M
f57 sf
( )S
1417 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 483.666 M 0.273(and ha)W
-0.2 N (v)S
-0.151 N 0.273(e the r)W
(etur)S
0.273(n v)W
-0.251 N 0.273(alue be the er)W
(r)S
0.273(or code)W
0.273(. But this can lead to confusion. Some libr)W
(ar)S
0.273(y r)W
0.273(outines r)W
(equir)S
0.273(e pointer)W
0.273(s as)W
60 495.666 M (ar)S
-0.181 N -0.203(guments; other)W
-0.203(s do not. Pr)W
(o)S
(g)S
(r)S
(ammer)S
-0.203(s ma)W
-0.203(y become confused)W
(,)S
-0.203( or suf)W
-0.251 N (f)S
-0.203(er memor)W
-0.203(y la)W
(pses,)S
-0.203( a)W
-0.203(bout w)W
(hic)S
-0.203(h r)W
-0.203(outines r)W
(equir)S
(e)S
60 507.666 M (pointer)S
(s and w)S
(hic)S
(h do not. )S
-0.181 N (T)S
(he r)S
(outine should guar)S
(d a)S
(g)S
-0.051 N (ainst these potential pr)S
(ob)S
(lems.)S
FmE
1417 0 :M
f286 sf
( )S
1419 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 522.666 M (+)S
FmE
1420 0 :M
f57 sf
( )S
1422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 522.666 M (K)S
-0.251 N (ee)S
(p par)S
(ameter lists consistent.)S
60 537.666 M 1.377(Making all par)W
(ameter)S
1.377(s be pointer)W
1.377(s is not suita)W
(b)S
(le)S
1.377(. F)W
(ir)S
(st,)S
1.377( pointer)W
1.377(s ar)W
1.377(e dif)W
-0.251 N (\336)S
1.377(cult to c)W
(hec)S
1.377(k f)W
1.377(or v)W
-0.251 N 1.377(alidity; one can \(and)W
60 549.666 M -0.432(should\) c)W
(hec)S
-0.432(k f)W
-0.432(or )W
FmE
1422 0 :M
f151 sf
( )S
1425 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
131.17 549.666 M (NULL)S
FmE
1426 0 :M
f57 sf
( )S
1428 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
162.279 549.666 M -0.432( pointer)W
(s,)S
-0.432( b)W
-0.2 N -0.432(ut ho)W
-0.251 N -0.432(w can one por)W
(ta)S
(b)S
(l)S
-0.432(y deter)W
-0.432(mine if a non-)W
FmE
1428 0 :M
f151 sf
( )S
1431 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
377.706 549.666 M (NULL)S
FmE
1431 0 :M
f57 sf
( )S
1433 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
408.814 549.666 M -0.432( pointer contains an ad)W
(dr)S
-0.432(ess in)W
60 561.666 M 0.068(the pr)W
(ocess\325)S
-0.742 N 0.068( ad)W
(dr)S
0.068(ess space or tha)W
0.068(t the ad)W
(dr)S
0.068(ess is not pr)W
(oper)S
(l)S
0.068(y aligned f)W
0.068(or the quantity to be stor)W
0.068(ed ther)W
0.068(e \(on some sys-)W
60 573.666 M (tems,)S
-0.096( nota)W
(b)S
(l)S
-0.096(y RISC systems,)W
-0.096( this can cause an alignment f)W
-0.1 N -0.096(ault and ter)W
(mina)S
-0.096(te the pr)W
(o)S
(g)S
(r)S
-0.096(am\)? Using a style of pr)W
(o)S
(g)S
(r)S
(am-)S
60 585.666 M (ming akin to functional pr)S
(o)S
(g)S
(r)S
(amming langua)S
(g)S
(es a)S
-0.2 N (v)S
-0.2 N (oids these pr)S
(ob)S
(lems.)S
FmE
1434 0 :M
f286 sf
( )S
1436 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 600.666 M (+)S
FmE
1437 0 :M
f57 sf
( )S
1439 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 600.666 M (A)S
-0.742 N (v)S
-0.2 N (oid c)S
(hang)S
(ing v)S
-0.251 N (ar)S
(ia)S
(b)S
(les thr)S
(ough a par)S
(ameter list; w)S
(hene)S
-0.251 N (v)S
-0.151 N (er possib)S
(le)S
(,)S
( a)S
-0.2 N (v)S
-0.2 N (oid passing pointer)S
(s.)S
60 615.666 M (T)S
0.109(his r)W
0.109(outine c)W
(hec)S
0.109(ks if ther)W
0.109(e is r)W
0.109(oom f)W
0.109(or another queue; if so,)W
0.109( it deter)W
0.109(mines the inde)W
-0.151 N 0.109(x of the queue; if not,)W
0.109( it r)W
(e)S
(por)S
0.109(ts an)W
60 627.666 M (er)S
(r)S
(or and r)S
(etur)S
(ns an er)S
(r)S
(or code)S
(. )S
-0.181 N (T)S
(he er)S
(r)S
(or code is r)S
(etur)S
(ned to the calling r)S
(outine)S
(,)S
( w)S
(hic)S
(h is not a par)S
(t of the libr)S
(ar)S
(y:)S
FmE
1439 0 :M
f216 sf
( )S
1445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 642.666 M 0 0 120(#define QE_TOOMANYQS)FmTx
24 N 0 0 12(-7)FmTx
24 N 0 0 228(/* too many queues in use \(max 100\) */)FmTx
FmE
1445 0 :M
f57 sf
( )S
1447 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 657.666 M 0.468(In the er)W
(r)S
0.468(or messa)W
(g)S
0.468(e w)W
0.468(e suppl)W
0.468(y helpful inf)W
(or)S
(ma)S
(tion,)S
0.468( namel)W
0.468(y the maxim)W
0.468(um n)W
0.468(umber of queues allo)W
-0.251 N (w)S
(ed)S
0.468(. )W
-0.181 N (T)S
0.468(his ena)W
(b)S
(les)S
60 669.666 M (the pr)S
(o)S
(g)S
(r)S
(ammer)S
(s to kno)S
-0.251 N (w w)S
(h)S
-0.051 N (y the r)S
(outine f)S
-0.1 N (ailed and tailor their code accor)S
(dingl)S
(y)S
-0.652 N (.)S
FmE
1448 0 :M
f286 sf
( )S
1450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 684.666 M (+)S
FmE
1451 0 :M
f57 sf
( )S
1453 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 684.666 M (Chec)S
(k f)S
(or ar)S
(r)S
(a)S
(y o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w and r)S
(e)S
(por)S
(t an er)S
(r)S
(or w)S
(hen it w)S
-0.1 N (ould occur \(or tak)S
-0.1 N (e other cor)S
(r)S
(ecti)S
-0.251 N (v)S
-0.151 N (e action\).)S
60 699.666 M (T)S
0.299(he ne)W
-0.151 N 0.299(xt par)W
0.299(t alloca)W
0.299(tes space f)W
0.299(or the queue)W
0.299(. )W
-0.552 N (Ag)S
-0.051 N (ain,)S
0.299( the r)W
0.299(outine c)W
(hec)S
0.299(ks f)W
0.299(or a f)W
-0.1 N (ailur)S
0.299(e in )W
FmE
1453 0 :M
f125 sf
( )S
1455 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
404.31 699.666 M (malloc)S
FmE
1456 0 :M
f57 sf
( )S
1458 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
431.524 699.666 M (,)S
0.299( and r)W
(e)S
(por)S
0.299(ts it should it)W
FmE
endp
showpage
%%Page: 14 14
%%BeginPageSetup
initializepage
(Matt Bishop; page: 14 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1458 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1458 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1458 0 :M
f57 sf
( )S
1460 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1461 0 :M
f70 sf
( )S
1463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1463 0 :M
f57 sf
( )S
1465 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (14)S
60 66.667 M (ha)S
-0.206(ppen. )W
-0.552 N (Ag)S
-0.051 N (ain,)S
-0.206( a special er)W
(r)S
-0.206(or code is used)W
-0.206(. )W
-0.181 N (T)S
-0.206(his is of special impor)W
-0.206(tance since a )W
FmE
1465 0 :M
f125 sf
( )S
1467 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
380.426 66.667 M (malloc)S
FmE
1468 0 :M
f57 sf
( )S
1470 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
407.64 66.667 M -0.206( f)W
-0.1 N (ailur)S
-0.206(e is usuall)W
-0.206(y due to a sys-)W
60 78.667 M 0.453(tem call f)W
-0.1 N (ailur)S
(e)S
(,)S
0.453( and )W
FmE
1470 0 :M
f125 sf
( )S
1472 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144.169 78.667 M (per)S
(r)S
-0.371 N (or)S
FmE
1473 0 :M
f57 sf
( )S
1475 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
169.904 78.667 M 0.453(\(3\) will pr)W
0.453(int a mor)W
0.453(e inf)W
(or)S
(ma)S
(ti)S
-0.251 N (v)S
-0.151 N 0.453(e messa)W
(g)S
0.453(e tha)W
0.453(t the caller ma)W
0.453(y desir)W
(e)S
0.453(. )W
-0.181 N (T)S
0.453(he queue libr)W
(ar)S
(y\325)S
-0.552 N (s)S
60 90.667 M (er)S
(r)S
(or indica)S
(tor is:)S
FmE
1475 0 :M
f216 sf
( )S
1481 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 105.667 M 0 0 102(#define QE_NOROOM)FmTx
42 N 0 0 12(-6)FmTx
24 N 0 0 216(/* can\'t allocate space \(sys err\) */)FmTx
FmE
1481 0 :M
f286 sf
( )S
1483 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 120.667 M (+)S
FmE
1484 0 :M
f57 sf
( )S
1486 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 120.667 M (Chec)S
(k f)S
(or f)S
-0.1 N (ailur)S
(e in C libr)S
(ar)S
(y functions and system calls.)S
60 135.667 M (T)S
0.537(he r)W
0.537(outine then obtains a tok)W
-0.1 N 0.537(en f)W
0.537(or the ne)W
-0.251 N 0.537(w queue)W
(,)S
0.537( c)W
(hec)S
0.537(king a)W
(g)S
-0.051 N 0.537(ain f)W
0.537(or f)W
-0.1 N (ailur)S
(e)S
0.537(. If the tok)W
-0.1 N 0.537(en cannot be obtained)W
(,)S
0.537( the)W
60 147.667 M (ne)S
-0.251 N -0.055(w queue is deleted and an er)W
(r)S
-0.055(or is r)W
(etur)S
(ned)S
-0.055(. No er)W
(r)S
-0.055(or messa)W
(g)S
-0.055(e is pr)W
(o)S
-0.151 N -0.055(vided; the tok)W
-0.1 N -0.055(en g)W
(ener)S
(a)S
-0.055(tor )W
FmE
1486 0 :M
f125 sf
( )S
1488 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
445.602 147.667 M (qtktr)S
-0.371 N (ef)S
FmE
1489 0 :M
f57 sf
( )S
1491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
471.332 147.667 M -0.055( pr)W
(o)S
-0.151 N -0.055(vides tha)W
(t.)S
FmE
1491 0 :M
f286 sf
( )S
1493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 162.667 M (+)S
FmE
1494 0 :M
f57 sf
( )S
1496 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 162.667 M (Chec)S
(k f)S
(or f)S
-0.1 N (ailur)S
(e in other libr)S
(ar)S
(y functions in y)S
(our libr)S
(ar)S
(y)S
-0.652 N (.)S
60 177.667 M (F)S
(inall)S
(y)S
-0.652 N (,)S
0.138( all quantities in the queue str)W
(uctur)S
0.138(e ar)W
0.138(e set to def)W
-0.1 N 0.138(ault v)W
-0.251 N 0.138(alues \(her)W
(e)S
(,)S
0.138( indica)W
0.138(ting an empty queue\),)W
0.138( and the tok)W
-0.1 N (en)S
60 189.667 M 0.007(is r)W
(etur)S
(ned)S
0.007(. )W
-0.181 N (T)S
0.007(his w)W
-0.1 N (a)S
(y)S
-0.652 N (,)S
0.007( w)W
0.007(e need not w)W
-0.1 N (or)S
(r)S
0.007(y a)W
0.007(bout initializa)W
0.007(tion la)W
0.007(ter in the libr)W
(ar)S
(y)S
-0.652 N (,)S
0.007( w)W
0.007(hen it might be har)W
0.007(der to deter)W
(mine)S
60 201.667 M (if initializa)S
(tion is needed)S
(.)S
FmE
1497 0 :M
f286 sf
( )S
1499 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 216.666 M (+)S
FmE
1499 0 :M
f57 sf
( )S
1501 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 216.666 M (Initializ)S
(e on cr)S
(ea)S
(tion.)S
FmE
1502 0 :M
f151 sf
( )S
1505 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 231.666 M (Ex)S
(er)S
-0.181 N -0.781(cise 4-8. )W
FmE
1505 0 :M
f57 sf
( )S
1507 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.832 231.666 M -0.586(If a tok)W
-0.1 N -0.586(en can\325)W
-0.181 N -0.586(t be g)W
(ener)S
(a)S
(ted)S
(,)S
-0.586( then the er)W
(r)S
-0.586(or messa)W
(g)S
-0.586(e in )W
FmE
1508 0 :M
f125 sf
( )S
1510 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
393.208 231.666 M (qe_er)S
(rbuf)S
FmE
1510 0 :M
f57 sf
( )S
1512 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432.641 231.666 M -0.586( comes fr)W
-0.586(om )W
FmE
1513 0 :M
f125 sf
( )S
1515 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
483.363 231.666 M (qtktr)S
-0.371 N (ef)S
FmE
1515 0 :M
f57 sf
( )S
1517 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
509.093 231.666 M (,)S
-0.586( b)W
-0.2 N -0.586(ut )W
111 243.666 M (ther)S
(e is no indica)S
(tion of w)S
(ha)S
(t r)S
(outine called )S
FmE
1518 0 :M
f125 sf
( )S
1520 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
287.599 243.666 M (qtktr)S
-0.371 N (ef)S
FmE
1520 0 :M
f57 sf
( )S
1522 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.329 243.666 M (. )S
-0.3 N (Wr)S
(ite a macr)S
(o tha)S
(t will a)S
(ppend this to the er)S
(r)S
(or mes-)S
111 255.666 M (sa)S
(g)S
(e in )S
FmE
1523 0 :M
f125 sf
( )S
1525 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.544 255.666 M (qe_er)S
(rbuf)S
FmE
1525 0 :M
f57 sf
( )S
1527 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
180.978 255.666 M (. Remember to c)S
(hec)S
(k f)S
(or bounds pr)S
(ob)S
(lems w)S
(hen y)S
(ou a)S
(ppend to the contents of )S
FmE
1528 0 :M
f125 sf
( )S
1530 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 267.666 M (qe_er)S
(rbuf)S
FmE
1530 0 :M
f57 sf
( )S
1532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
150.434 267.666 M (.)S
FmE
1533 0 :M
f138 sf
( )S
1536 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 308 M (4.4. Queue Deletion)S
FmE
1537 0 :M
f57 sf
( )S
1539 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 323.666 M (T)S
(his r)S
(outine deletes queues.)S
FmE
1539 0 :M
f216 sf
( )S
1545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 338.666 M 0 0 12(/*)FmTx
60 350.666 M 0 0 162( * delete an existing queue)FmTx
60 362.666 M 0 0 12( *)FmTx
60 374.666 M 0 0 84( * PARAMETERS:)FmTx
24 N 0 0 66(QTICKET qno)FmTx
42 N 0 0 204(ticket for the queue to be deleted)FmTx
60 386.666 M 0 0 72( * RETURNED:)FmTx
36 N 0 0 18(int)FmTx
90 N 0 0 60(error code)FmTx
60 398.666 M 0 0 60( * ERRORS:)FmTx
48 N 0 0 66(QE_BADPARAM)FmTx
42 N 0 0 246(parameter refers to deleted, unallocated,)FmTx
60 410.666 M 0 0 12( *)FmTx
204 N 0 0 204(or invalid queue \(from readref\(\)\).)FmTx
60 422.666 M 0 0 12( *)FmTx
96 N 0 0 66(QE_INTINCON)FmTx
42 N 0 0 228(queue is internally inconsistent \(from)FmTx
60 434.666 M 0 0 12( *)FmTx
204 N 0 0 66(readref\(\)\).)FmTx
60 446.666 M 0 0 84( * EXCEPTIONS:)FmTx
24 N 0 0 24(none)FmTx
60 458.666 M 0 0 18( */)FmTx
60 470.666 M 0 0 174(int delete_queue\(QTICKET qno\))FmTx
60 482.666 M 0 0 6({)FmTx
96 494.666 M 0 0 102(register int cur;)FmTx
42 N 0 0 168(/* index of current queue */)FmTx
96 518.666 M 0 0 12(/*)FmTx
96 530.666 M 0 0 276( * check that qno refers to an existing queue;)FmTx
96 542.666 M 0 0 156( * readref sets error code)FmTx
96 554.666 M 0 0 18( */)FmTx
96 566.666 M 0 0 210(if \(QE_ISERROR\(cur = readref\(qno\)\)\))FmTx
132 578.666 M 0 0 72(return\(cur\);)FmTx
96 602.666 M 0 0 12(/*)FmTx
96 614.666 M 0 0 270( * free the queue and reset the array element)FmTx
96 626.666 M 0 0 18( */)FmTx
96 638.666 M 0 0 150(\(void\) free\(queues[cur]\);)FmTx
96 650.666 M 0 0 114(queues[cur] = NULL;)FmTx
96 674.666 M 0 0 96(return\(QE_NONE\);)FmTx
60 686.666 M 0 0 6(})FmTx
FmE
1545 0 :M
f57 sf
( )S
1547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 701.666 M (T)S
0.488(his r)W
0.488(outine tak)W
-0.1 N 0.488(es as a par)W
0.488(ameter the tok)W
-0.1 N 0.488(en of the queue to be deleted)W
0.488(. It deter)W
0.488(mines if the tok)W
-0.1 N 0.488(en is v)W
-0.251 N (alid)S
(,)S
0.488( and if not)W
FmE
60 224 45 49 rC
1548 0 :M
FrMacBegin
60 225 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 225 45 48 rC
:imsv 39 39 1 5 [45 0 0 56.919 60 225] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1548 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 15 15
%%BeginPageSetup
initializepage
(Matt Bishop; page: 15 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1548 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1548 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1548 0 :M
f57 sf
( )S
1550 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1551 0 :M
f70 sf
( )S
1553 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1553 0 :M
f57 sf
( )S
1555 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (15)S
60 66.667 M (r)S
(etur)S
(ns the er)S
(r)S
(or code)S
(. )S
-0.181 N (T)S
(hus,)S
( a queue w)S
(hic)S
(h is not cr)S
(ea)S
(ted)S
(,)S
( or one tha)S
(t has alr)S
(ead)S
(y been deleted)S
(,)S
( will r)S
(e)S
(por)S
(t an er)S
(r)S
(or)S
-0.552 N (.)S
FmE
1555 0 :M
f286 sf
( )S
1557 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 81.667 M (+)S
FmE
1558 0 :M
f57 sf
( )S
1560 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 81.667 M (Chec)S
(k tha)S
(t the par)S
(ameter r)S
(ef)S
(er)S
(s to a v)S
-0.251 N (alid da)S
(ta str)S
(uctur)S
(e)S
(.)S
60 96.667 M (T)S
0.168(he queue is then fr)W
(eed)S
0.168(. )W
-0.181 N (T)S
0.168(he entr)W
0.168(y in the )W
FmE
1560 0 :M
f125 sf
( )S
1562 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
226.259 96.667 M (queues)S
FmE
1563 0 :M
f57 sf
( )S
1565 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
254.025 96.667 M 0.168( ar)W
(r)S
(a)S
0.168(y is r)W
0.168(eset to indica)W
0.168(te tha)W
0.168(t an element of the ar)W
(r)S
(a)S
0.168(y is a)W
-0.2 N (v)S
-0.251 N (aila)S
(b)S
0.168(le f)W
(or)S
60 108.667 M (r)S
(eassignment.)S
FmE
1565 0 :M
f286 sf
( )S
1567 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 123.667 M (+)S
FmE
1568 0 :M
f57 sf
( )S
1570 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 123.667 M (Al)S
-0.1 N (w)S
-0.1 N (a)S
(ys c)S
(lean up deleted inf)S
(or)S
(ma)S
(tion \320 it pr)S
(e)S
-0.251 N (v)S
-0.151 N (ents er)S
(r)S
(or)S
(s la)S
(ter on.)S
FmE
1571 0 :M
f151 sf
( )S
1574 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 138.667 M (Ex)S
(er)S
-0.181 N -1.069(cise 4-9. )W
FmE
1574 0 :M
f57 sf
( )S
1576 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.255 138.667 M -0.802(Do w)W
-0.802(e need to c)W
(hec)S
-0.802(k tha)W
-0.802(t )W
FmE
1576 0 :M
f125 sf
( )S
1578 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
276.286 138.667 M (queues)S
FmE
1579 0 :M
f57 sf
( )S
1581 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
304.052 138.667 M ([)S
FmE
1581 0 :M
f125 sf
( )S
1583 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
307.38 138.667 M (cur)S
FmE
1584 0 :M
f57 sf
( )S
1586 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
320.707 138.667 M -0.802(] is not )W
FmE
1586 0 :M
f151 sf
( )S
1589 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.574 138.667 M (NULL)S
FmE
1590 0 :M
f57 sf
( )S
1592 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
379.683 138.667 M -0.802( bef)W
(or)S
-0.802(e w)W
-0.802(e call )W
FmE
1592 0 :M
f125 sf
( )S
1594 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
438.098 138.667 M (fr)S
-0.371 N (ee)S
FmE
1595 0 :M
f57 sf
( )S
1597 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
453.272 138.667 M -0.802(? )W
-0.3 N (W)S
(h)S
-0.051 N -0.802(y or w)W
(h)S
-0.051 N -0.802(y not? )W
111 150.667 M (If w)S
(e do,)S
( w)S
(ha)S
(t er)S
(r)S
(or will occur in the a)S
(bo)S
-0.151 N (v)S
-0.151 N (e code? If w)S
(e do not,)S
( should w)S
(e? J)S
(ustify y)S
(our ans)S
(w)S
(er)S
-0.552 N (.)S
FmE
1597 0 :M
f151 sf
( )S
1600 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 165.667 M (Ex)S
(er)S
-0.181 N (cise 4-10. )S
FmE
1601 0 :M
f57 sf
( )S
1603 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
184.926 165.667 M (W)S
(ha)S
(t pr)S
(e)S
-0.251 N (v)S
-0.151 N (ents a caller fr)S
(om deleting the same queue twice?)S
FmE
1603 0 :M
f138 sf
( )S
1606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 206 M (4.5. )S
-0.662 N (Ad)S
(ding an Element to a Queue)S
FmE
1607 0 :M
f57 sf
( )S
1609 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 221.667 M (Ad)S
(ding an element to a queue r)S
(equir)S
(es tha)S
(t it be placed a)S
(t the tail:)S
FmE
1610 0 :M
f216 sf
( )S
1616 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 236.667 M 0 0 12(/*)FmTx
60 248.666 M 0 0 228( * add an element to an existing queue)FmTx
60 260.666 M 0 0 12( *)FmTx
60 272.666 M 0 0 84( * PARAMETERS:)FmTx
24 N 0 0 66(QTICKET qno)FmTx
42 N 0 0 174(ticket for the queue involved)FmTx
60 284.666 M 0 0 12( *)FmTx
96 N 0 0 30(int n)FmTx
78 N 0 0 132(element to be appended)FmTx
60 296.666 M 0 0 72( * RETURNED:)FmTx
36 N 0 0 18(int)FmTx
90 N 0 0 60(error code)FmTx
60 308.666 M 0 0 60( * ERRORS:)FmTx
48 N 0 0 66(QE_BADPARAM)FmTx
42 N 0 0 246(parameter refers to deleted, unallocated,)FmTx
60 320.666 M 0 0 12( *)FmTx
204 N 0 0 204(or invalid queue \(from readref\(\)\).)FmTx
60 332.666 M 0 0 18( * )FmTx
90 N 0 0 66(QE_INTINCON)FmTx
42 N 0 0 228(queue is internally inconsistent \(from)FmTx
60 344.666 M 0 0 12( *)FmTx
204 N 0 0 66(readref\(\)\).)FmTx
60 356.666 M 0 0 12( *)FmTx
96 N 0 0 60(QE_TOOFULL)FmTx
48 N 0 0 234(queue has MAXELT elements and a new one)FmTx
60 368.666 M 0 0 12( *)FmTx
204 N 0 0 84(can\325t be added)FmTx
60 380.666 M 0 0 78( * EXCEPTIONS)FmTx
0 0 6(:)FmTx
24 N 0 0 24(none)FmTx
60 392.666 M 0 0 18( */)FmTx
60 404.666 M 0 0 216(int put_on_queue\(QTICKET qno, int n\))FmTx
60 416.666 M 0 0 6({)FmTx
96 428.666 M 0 0 102(register int cur;)FmTx
42 N 0 0 168(/* index of current queue */)FmTx
96 440.666 M 0 0 108(register QUEUE *q;)FmTx
36 N 0 0 192(/* pointer to queue structure */)FmTx
96 464.666 M 0 0 12(/*)FmTx
96 476.666 M 0 0 276( * check that qno refers to an existing queue;)FmTx
96 488.666 M 0 0 156( * readref sets error code)FmTx
96 500.666 M 0 0 18( */)FmTx
96 512.666 M 0 0 210(if \(QE_ISERROR\(cur = readref\(qno\)\)\))FmTx
132 524.666 M 0 0 72(return\(cur\);)FmTx
96 548.666 M 0 0 12(/*)FmTx
96 560.666 M 0 0 210( * add new element to tail of queue)FmTx
96 572.666 M 0 0 18( */)FmTx
96 584.666 M 0 0 234(if \(\(q = queue[cur]\)->count == MAXELT\){)FmTx
132 596.666 M 0 0 186(/* queue is full; give error */)FmTx
132 608.666 M 0 0 348(ERRBUF2\(\"put_on_queue: queue full \(max %d elts\)\", MAXELT\);)FmTx
132 620.666 M 0 0 114(return\(QE_TOOFULL\);)FmTx
96 632.666 M 0 0 6(})FmTx
96 644.666 M 0 0 30(else{)FmTx
132 656.666 M 0 0 162(/* append element to end */)FmTx
132 668.666 M 0 0 228(q->que[\(q->head+q->count\)%MAXELT] = n;)FmTx
132 680.666 M 0 0 162(/* one more in the queue */)FmTx
132 692.666 M 0 0 66(q->count++;)FmTx
96 704.666 M 0 0 6(})FmTx
FmE
60 131 45 50 rC
1616 0 :M
FrMacBegin
60 132 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 132 45 49 rC
:imsv 39 39 1 5 [45 0 0 56.919 60 132] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1616 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 16 16
%%BeginPageSetup
initializepage
(Matt Bishop; page: 16 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1616 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1616 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1616 0 :M
f57 sf
( )S
1618 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1619 0 :M
f70 sf
( )S
1621 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1621 0 :M
f57 sf
( )S
1623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (16)S
FmE
1623 0 :M
f216 sf
( )S
1629 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
96 78.667 M 0 0 96(return\(QE_NONE\);)FmTx
60 90.667 M 0 0 6(})FmTx
FmE
1629 0 :M
f57 sf
( )S
1631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 105.667 M (T)S
0.032(he v)W
-0.251 N (ar)S
(ia)S
(b)S
0.032(les in the par)W
0.032(ameter list ar)W
0.032(e not pointer)W
0.032(s; all ar)W
0.032(e passed b)W
0.032(y v)W
-0.251 N (alue)S
0.032(. )W
-0.552 N 0.032(As bef)W
(or)S
(e)S
(,)S
0.032( the v)W
-0.251 N 0.032(alidity of the tok)W
-0.1 N 0.032(en is \336)W
(r)S
(st)S
60 117.667 M (c)S
(hec)S
(k)S
-0.1 N (ed)S
(,)S
( and as )S
FmE
1632 0 :M
f125 sf
( )S
1634 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
125.42 117.667 M (r)S
-0.371 N (eadr)S
-0.371 N (ef)S
FmE
1634 0 :M
f57 sf
( )S
1636 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
154.111 117.667 M ( b)S
-0.2 N (uilds the er)S
(r)S
(or messa)S
(g)S
(e and code)S
(,)S
( if the tok)S
-0.1 N (en is not v)S
-0.251 N (alid)S
(,)S
( the er)S
(r)S
(or is simpl)S
(y r)S
(etur)S
(ned)S
(.)S
60 132.667 M (Ad)S
0.459(ding an element to the queue r)W
(equir)S
0.459(es c)W
(hec)S
0.459(king tha)W
0.459(t the queue is not full. )W
-0.181 N (T)S
0.459(he \336)W
(r)S
0.459(st par)W
0.459(t of the )W
FmE
1637 0 :M
f125 sf
( )S
1639 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
453.41 132.667 M (if)S
FmE
1639 0 :M
f57 sf
( )S
1641 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
458.967 132.667 M 0.459( \311 )W
FmE
1642 0 :M
f125 sf
( )S
1644 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
474.886 132.667 M (else)S
FmE
1644 0 :M
f57 sf
( )S
1646 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
490.43 132.667 M 0.459( \311 sta)W
(te-)S
60 144.667 M -0.17(ment does this. )W
-0.181 N (T)S
-0.17(he er)W
(r)S
-0.17(or messa)W
(g)S
-0.17(e a)W
(g)S
-0.051 N -0.17(ain g)W
(i)S
-0.251 N (v)S
-0.151 N -0.17(es the maxim)W
-0.17(um n)W
-0.17(umber of elements tha)W
-0.17(t the queue can hold)W
-0.17(. If the queue)W
60 156.667 M (is full,)S
( an a)S
(ppr)S
(opr)S
(ia)S
(te er)S
(r)S
(or code is g)S
(ener)S
(a)S
(ted:)S
FmE
1647 0 :M
f216 sf
( )S
1653 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 171.667 M 0 0 90(#define QE_FULL)FmTx
54 N 0 0 12(-5)FmTx
24 N 0 0 186(/* append it to a full queue */)FmTx
FmE
1653 0 :M
f286 sf
( )S
1655 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 186.667 M (+)S
FmE
1655 0 :M
f57 sf
( )S
1657 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 186.667 M (Allo)S
-0.251 N (w er)S
(r)S
(or messa)S
(g)S
(es to contain n)S
(umber)S
(s or other v)S
-0.251 N (ar)S
(ia)S
(b)S
(le da)S
(ta.)S
FmE
1658 0 :M
f138 sf
( )S
1661 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 212 M (4.6. Remo)S
-0.12 N (ving an Element fr)S
-0.217 N (om the Queue)S
FmE
1662 0 :M
f57 sf
( )S
1664 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 227.667 M (W)S
-0.801 N (e r)S
(emo)S
-0.151 N (v)S
-0.151 N (e elements fr)S
(om the head of the queue:)S
FmE
1664 0 :M
f216 sf
( )S
1670 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 242.666 M 0 0 12(/*)FmTx
60 254.666 M 0 0 318( * take an element off the front of an existing queue)FmTx
60 266.666 M 0 0 12( *)FmTx
60 278.666 M 0 0 84( * PARAMETERS:)FmTx
24 N 0 0 66(QTICKET qno)FmTx
42 N 0 0 174(ticket for the queue involved)FmTx
60 290.666 M 0 0 72( * RETURNED:)FmTx
36 N 0 0 18(int)FmTx
90 N 0 0 114(error code or value)FmTx
60 302.666 M 0 0 60( * ERRORS:)FmTx
48 N 0 0 66(QE_BADPARAM)FmTx
42 N 0 0 144(bogus parameter because:)FmTx
60 314.666 M 0 0 12( *)FmTx
204 N 0 0 234(* parameter refers to deleted, invalid,)FmTx
60 326.666 M 0 0 12( *)FmTx
204 N 0 0 234(  or unallocated queue \(from readref\(\)\))FmTx
60 338.666 M 0 0 12( *)FmTx
204 N 0 0 216(* pointer points to NULL address for)FmTx
60 350.666 M 0 0 12( *)FmTx
204 N 0 0 108(  returned element)FmTx
60 362.666 M 0 0 12( *)FmTx
204 N 0 0 204(\(qe_errbuf has descriptive string\))FmTx
60 374.666 M 0 0 12( *)FmTx
96 N 0 0 66(QE_INTINCON)FmTx
42 N 0 0 228(queue is internally inconsistent \(from)FmTx
60 386.666 M 0 0 12( *)FmTx
204 N 0 0 66(readref\(\)\).)FmTx
60 398.666 M 0 0 12( *)FmTx
96 N 0 0 48(QE_EMPTY)FmTx
60 N 0 0 216(no elements so none can be retrieved)FmTx
60 410.666 M 0 0 84( * EXCEPTIONS:)FmTx
24 N 0 0 24(none)FmTx
60 422.666 M 0 0 18( */)FmTx
60 434.666 M 0 0 186(int take_off_queue\(QTICKET qno\))FmTx
60 446.666 M 0 0 6({)FmTx
96 458.666 M 0 0 102(register int cur;)FmTx
78 N 0 0 168(/* index of current queue */)FmTx
96 470.666 M 0 0 108(register QUEUE *q;)FmTx
72 N 0 0 192(/* pointer to queue structure */)FmTx
96 482.666 M 0 0 90(register int n;)FmTx
90 N 0 0 222(/* index of element to be returned */)FmTx
96 506.666 M 0 0 12(/*)FmTx
96 518.666 M 0 0 276( * check that qno refers to an existing queue;)FmTx
96 530.666 M 0 0 156( * readref sets error code)FmTx
96 542.666 M 0 0 18( */)FmTx
96 554.666 M 0 0 210(if \(QE_ISERROR\(cur = readref\(qno\)\)\))FmTx
132 566.666 M 0 0 72(return\(cur\);)FmTx
96 590.666 M 0 0 12(/*)FmTx
96 602.666 M 0 0 282( * now pop the element at the head of the queue)FmTx
96 614.666 M 0 0 18( */)FmTx
96 626.666 M 0 0 210(if \(\(q = queues[cur]\)->count == 0\){)FmTx
132 638.666 M 0 0 96(/* it\'s empty */)FmTx
132 650.666 M 0 0 228(ERRBUF\(\"take_off_queue: queue empty\"\);)FmTx
132 662.666 M 0 0 102(return\(QE_EMPTY\);)FmTx
96 674.666 M 0 0 6(})FmTx
96 686.666 M 0 0 30(else{)FmTx
132 698.666 M 0 0 156(/* get the last element */)FmTx
FmE
endp
showpage
%%Page: 17 17
%%BeginPageSetup
initializepage
(Matt Bishop; page: 17 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1670 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1670 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1670 0 :M
f57 sf
( )S
1672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1673 0 :M
f70 sf
( )S
1675 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1675 0 :M
f57 sf
( )S
1677 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (17)S
FmE
1677 0 :M
f216 sf
( )S
1683 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
132 66.667 M 0 0 66(q->count--;)FmTx
132 78.667 M 0 0 72(n = q->head;)FmTx
132 90.667 M 0 0 198(q->head = \(q->head + 1\) % MAXELT;)FmTx
132 102.667 M 0 0 108(return\(q->que[n]\);)FmTx
96 114.667 M 0 0 6(})FmTx
96 138.667 M 0 0 240(/* should never reach here \(sure ...\) */)FmTx
96 150.667 M 0 0 426(ERRBUF\(\"take_off_queue: reached end of routine despite no path there\"\);)FmTx
96 162.667 M 0 0 120(return\(QE_INTINCON\);)FmTx
60 174.667 M 0 0 6(})FmTx
FmE
1683 0 :M
f57 sf
( )S
1685 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 189.667 M (Her)S
0.283(e w)W
0.283(e m)W
0.283(ust distinguish betw)W
0.283(een a r)W
(etur)S
0.283(n v)W
-0.251 N 0.283(alue tha)W
0.283(t is an er)W
(r)S
0.283(or code and a r)W
(etur)S
0.283(n v)W
-0.251 N 0.283(alue tha)W
0.283(t comes fr)W
0.283(om the queue)W
(.)S
60 201.666 M (T)S
0.342(he solution is to c)W
(hec)S
0.342(k the er)W
(r)S
0.342(or b)W
-0.2 N (uf)S
-0.251 N (f)S
0.342(er )W
FmE
1686 0 :M
f125 sf
( )S
1688 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
223.875 201.666 M (qe_er)S
(rbuf)S
FmE
1688 0 :M
f57 sf
( )S
1690 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
263.309 201.666 M 0.342(. Bef)W
(or)S
0.342(e this function is called)W
(,)S
0.342( the \336)W
(r)S
0.342(st b)W
0.342(yte of tha)W
0.342(t ar)W
(r)S
(a)S
0.342(y is set to)W
60 213.666 M 0.792(the NUL b)W
0.792(yte )W
0.792(\324\\0\325. If)W
(,)S
0.792( on r)W
(etur)S
(n,)S
0.792( the er)W
(r)S
0.792(or b)W
-0.2 N (uf)S
-0.251 N (f)S
0.792(er contains a str)W
0.792(ing of length 1 or g)W
(r)S
(ea)S
(ter)S
-0.4 N (,)S
0.792( an er)W
(r)S
0.792(or occur)W
(r)S
0.792(ed and the)W
60 225.666 M (r)S
(etur)S
(ned v)S
-0.251 N (alue is an er)S
(r)S
(or code; otherwise)S
(,)S
( no er)S
(r)S
(or occur)S
(r)S
(ed)S
(. So the calling sequence is:)S
FmE
1691 0 :M
f216 sf
( )S
1697 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
95 240.666 M 0 0 120(qe_errbuf[0] = \324\\0\325;)FmTx
95 252.666 M 0 0 150(rv = take_off_queue\(qno\);)FmTx
95 264.666 M 0 0 258(if \(QE_ISERROR\(rv\) && qe_errbuf[0] != \324\\0\325\))FmTx
132 276.666 M 0 0 12(\311 )FmTx
FmE
1697 0 :M
f246 sf
( )S
1703 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 276.666 M 0 0 306(rv contains error code, qe_errbuf the error message)FmTx
FmE
1703 0 :M
f216 sf
( )S
1709 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
450 276.666 M 0 0 12( \311)FmTx
95 288.666 M 0 0 24(else)FmTx
132 300.666 M 0 0 12(\311 )FmTx
FmE
1709 0 :M
f246 sf
( )S
1715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
144 300.666 M 0 0 288(no error; rv is the value removed from the queue)FmTx
FmE
1715 0 :M
f216 sf
( )S
1721 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
432 300.666 M 0 0 12( \311)FmTx
FmE
1721 0 :M
f57 sf
( )S
1723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 315.666 M (T)S
-0.081(his w)W
-0.1 N (a)S
(y)S
-0.652 N (,)S
-0.081( w)W
-0.081(e need not pass a pointer thr)W
-0.081(ough the par)W
-0.081(ameter list. )W
-0.181 N (T)S
-0.081(he disad)W
(v)S
-0.251 N (anta)S
(g)S
-0.081(e of this method is the comple)W
-0.151 N -0.081(xity of)W
60 327.666 M -0.163(calling the function; ho)W
-0.251 N (w)S
(e)S
-0.251 N (v)S
-0.151 N (er)S
-0.4 N (,)S
-0.163( tha)W
-0.163(t seems a small pr)W
-0.163(ice to pa)W
-0.163(y to a)W
-0.2 N (v)S
-0.2 N -0.163(oid a possib)W
-0.163(le se)W
-0.151 N (gmenta)S
-0.163(tion f)W
-0.1 N -0.163(ault within the libr)W
(ar)S
(y)S
-0.652 N (.)S
60 339.666 M (T)S
(he standar)S
(d I/O libr)S
(ar)S
(y function )S
FmE
1723 0 :M
f125 sf
( )S
1725 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
195.217 339.666 M (fseek)S
FmE
1726 0 :M
f57 sf
( )S
1728 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
215.2 339.666 M ( uses a similar tec)S
(hnique to distinguish f)S
-0.1 N (ailur)S
(e fr)S
(om success in some cases.)S
FmE
1728 0 :M
f286 sf
( )S
1730 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 354.666 M (+)S
FmE
1731 0 :M
f57 sf
( )S
1733 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
78 354.666 M (A)S
-0.742 N (v)S
-0.2 N (oid c)S
(hang)S
(ing v)S
-0.251 N (ar)S
(ia)S
(b)S
(les thr)S
(ough a par)S
(ameter list; w)S
(hene)S
-0.251 N (v)S
-0.151 N (er possib)S
(le)S
(,)S
( a)S
-0.2 N (v)S
-0.2 N (oid passing pointer)S
(s.)S
FmE
1733 0 :M
f151 sf
( )S
1736 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 369.666 M (Ex)S
(er)S
-0.181 N -0.925(cise 4-11. )W
FmE
1737 0 :M
f57 sf
( )S
1739 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.376 369.666 M (Re)S
-0.251 N (wr)S
-0.694(ite )W
FmE
1739 0 :M
f125 sf
( )S
1741 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
216.581 369.666 M -0.694(take_off_queue )W
FmE
1742 0 :M
f57 sf
( )S
1744 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
279.476 369.666 M -0.694( to use a second par)W
(ameter)S
-0.4 N (,)S
-0.694( )W
FmE
1744 0 :M
f125 sf
( )S
1746 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
385.689 369.666 M -0.694(int *n)W
FmE
1747 0 :M
f57 sf
( )S
1749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
408.052 369.666 M (,)S
-0.694( and r)W
(etur)S
-0.694(n the v)W
-0.251 N -0.694(alue r)W
(emo)S
-0.151 N (v)S
-0.151 N -0.694(ed )W
111 381.666 M (fr)S
(om the queue thr)S
(ough tha)S
(t par)S
(ameter)S
-0.552 N (. \(Use the er)S
(r)S
(or code )S
FmE
1749 0 :M
f151 sf
( )S
1752 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.932 381.666 M (B)S
-0.3 N (ADP)S
-0.742 N (ARAM)S
FmE
1752 0 :M
f57 sf
( )S
1754 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
412.863 381.666 M (,)S
( de\336)S
(ned as \3201,)S
( to r)S
(e)S
(por)S
(t an )S
111 393.666 M (in)S
-0.4 N (v)S
-0.251 N (alid pointer)S
-0.552 N (.\) )S
-0.181 N (T)S
(he function v)S
-0.251 N (alue is the er)S
(r)S
(or code)S
(. Compar)S
(e and contr)S
(ast this a)S
(ppr)S
(oac)S
(h with the one )S
111 405.666 M (used in the a)S
(bo)S
-0.151 N (v)S
-0.151 N (e v)S
-0.151 N (er)S
(sion. )S
-0.3 N (W)S
(hen w)S
-0.1 N (ould y)S
(ou use eac)S
(h?)S
FmE
1755 0 :M
f151 sf
( )S
1758 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 420.666 M (Ex)S
(er)S
-0.181 N (cise 4-12. )S
FmE
1758 0 :M
f57 sf
( )S
1760 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.226 420.666 M (Ho)S
-0.251 N (w does )S
FmE
1761 0 :M
f125 sf
( )S
1763 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
227.741 420.666 M (fseek)S
FmE
1763 0 :M
f57 sf
( )S
1765 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
247.724 420.666 M (\(3S\) use )S
FmE
1766 0 :M
f125 sf
( )S
1768 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
283.266 420.666 M (er)S
(rno)S
FmE
1768 0 :M
f57 sf
( )S
1770 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
305.482 420.666 M ( to distinguish f)S
-0.1 N (ailur)S
(e fr)S
(om success?)S
60 435.666 M (T)S
0.852(he r)W
0.852(est of this r)W
0.852(outine is similar to )W
FmE
1771 0 :M
f125 sf
( )S
1773 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
210.108 435.666 M (add_to_queue)S
FmE
1773 0 :M
f57 sf
( )S
1775 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
266.763 435.666 M 0.852(. )W
-0.3 N (W)S
-0.801 N 0.852(e c)W
(hec)S
0.852(k the par)W
(ameter)S
-0.4 N (,)S
0.852( and then v)W
-0.251 N (alida)S
0.852(te the queue)W
0.852(. )W
-0.3 N (W)S
-0.801 N 0.852(e ne)W
-0.151 N (xt)S
60 447.666 M (c)S
(hec)S
(k f)S
(or an empty queue)S
(,)S
( and r)S
(e)S
(por)S
(t an er)S
(r)S
(or if the queue is empty:)S
FmE
1776 0 :M
f216 sf
( )S
1782 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 462.666 M 0 0 96(#define QE_EMPTY)FmTx
48 N 0 0 12(-4)FmTx
24 N 0 0 192(/* take it off an empty queue */)FmTx
FmE
1782 0 :M
f57 sf
( )S
1784 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 477.666 M 0.307(If it is not empty)W
-0.652 N (,)S
0.307( it r)W
(etur)S
0.307(ns the element a)W
0.307(t the head of the queue)W
0.307(. )W
-0.181 N (T)S
0.307(he )W
FmE
1784 0 :M
f125 sf
( )S
1786 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
341.2 477.666 M (head)S
FmE
1787 0 :M
f57 sf
( )S
1789 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
360.639 477.666 M 0.307( inde)W
-0.151 N 0.307(x is incr)W
0.307(emented to mo)W
-0.151 N (v)S
-0.151 N 0.307(e to the ne)W
-0.151 N (xt)S
60 489.666 M (element in the queue)S
(,)S
( w)S
(hic)S
(h becomes the element a)S
(t the head of the queue)S
(.)S
FmE
1789 0 :M
f138 sf
( )S
1792 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 514.999 M (4.7. Summar)S
(y)S
FmE
1793 0 :M
f57 sf
( )S
1795 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 530.666 M (T)S
0.633(he a)W
(bo)S
-0.151 N (v)S
-0.151 N 0.633(e r)W
0.633(outines g)W
(i)S
-0.251 N (v)S
-0.151 N 0.633(e se)W
-0.251 N (v)S
-0.151 N (er)S
0.633(al e)W
-0.151 N 0.633(xamples of the dif)W
-0.251 N (f)S
(er)S
0.633(ences betw)W
0.633(een r)W
(ob)S
-0.2 N 0.633(ust and fr)W
(a)S
(g)S
0.633(ile coding)W
0.633(. )W
-0.181 N (T)S
0.633(he a)W
(bo)S
-0.151 N (v)S
-0.151 N 0.633(e r)W
(outines)S
60 542.666 M (ar)S
-0.089(e r)W
(ob)S
-0.2 N (ust,)S
-0.089( because the)W
-0.151 N -0.089(y cannot be cr)W
-0.089(ashed b)W
-0.089(y poor or incor)W
(r)S
-0.089(ect calls,)W
-0.089( or inconsistenc)W
-0.151 N -0.089(y in the caller)W
-0.552 N -0.089(. )W
-0.181 N (T)S
(he)S
-0.151 N -0.089(y f)W
(or)S
-0.089(m a mod-)W
60 554.666 M (ule)S
(,)S
0.819( and ha)W
-0.2 N (v)S
-0.151 N 0.819(e inf)W
(or)S
(ma)S
0.819(tional cohesion and stamp coupling \(the la)W
0.819(tter because the)W
-0.151 N 0.819(y shar)W
0.819(e da)W
0.819(ta in common v)W
-0.251 N (ar)S
(ia)S
(b)S
(les;)S
60 566.666 M (speci\336)S
(call)S
(y)S
-0.652 N (,)S
0.003( )W
FmE
1796 0 :M
f125 sf
( )S
1798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109.888 566.666 M (queues)S
FmE
1798 0 :M
f57 sf
( )S
1800 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
137.654 566.666 M (,)S
0.003( )W
FmE
1801 0 :M
f125 sf
( )S
1803 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
142.657 566.666 M (noncectr)S
FmE
1803 0 :M
f57 sf
( )S
1805 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.24 566.666 M (,)S
0.003( and )W
FmE
1806 0 :M
f125 sf
( )S
1808 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
199.184 566.666 M (qe_er)S
(rbuf)S
FmE
1808 0 :M
f57 sf
( )S
1810 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
238.617 566.666 M 0.003(. )W
-0.3 N (W)S
0.003(hile the coding of these v)W
-0.151 N (er)S
0.003(sions of the r)W
0.003(outines tak)W
-0.1 N 0.003(es mor)W
0.003(e time than)W
60 578.666 M 0.52(the fr)W
(a)S
(g)S
0.52(ile r)W
(outines,)S
0.52( the)W
-0.151 N 0.52(y tak)W
-0.1 N 0.52(e m)W
(uc)S
0.52(h less to de)W
(b)S
-0.2 N (ug)S
(,)S
0.52( and will r)W
(equir)S
0.52(e less de)W
(b)S
-0.2 N (ug)S
(g)S
0.52(ing time f)W
0.52(or a)W
(pplica)S
0.52(tions using these)W
60 590.666 M (r)S
(outines.)S
FmE
1811 0 :M
f151 sf
( )S
1814 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 605.666 M (Ex)S
(er)S
-0.181 N (cise 4-13. )S
FmE
1814 0 :M
f57 sf
( )S
1816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
185.226 605.666 M (Re)S
-0.251 N (wr)S
(ite this libr)S
(ar)S
(y to allocte space f)S
(or eac)S
(h queue d)S
(ynamicall)S
(y)S
-0.652 N (. Speci\336)S
(call)S
(y)S
-0.652 N (,)S
( c)S
(hang)S
(e )S
FmE
1817 0 :M
f125 sf
( )S
1819 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 617.666 M (cr)S
-0.371 N (eate_queue)S
FmE
1819 0 :M
f57 sf
( )S
1821 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
164.489 617.666 M ( to tak)S
-0.1 N (e the par)S
(ameter )S
FmE
1822 0 :M
f125 sf
( )S
1824 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.505 617.666 M (int size)S
FmE
1824 0 :M
f57 sf
( )S
1826 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.557 617.666 M (,)S
( w)S
(her)S
(e )S
FmE
1827 0 :M
f125 sf
( )S
1829 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
313.48 617.666 M (size)S
FmE
1829 0 :M
f57 sf
( )S
1831 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.476 617.666 M ( is to be the maxim)S
(um n)S
(umber of elements )S
111 629.666 M (allo)S
-0.251 N (w)S
(ed in the queue)S
(. )S
-0.552 N (Alloca)S
(te space f)S
(or the queue ar)S
(r)S
(a)S
(y d)S
(ynamicall)S
(y)S
-0.652 N (.)S
FmE
1832 0 :M
f151 sf
( )S
1835 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 644.666 M (Ex)S
(er)S
-0.181 N -0.975(cise 4-14. )W
FmE
1835 0 :M
f57 sf
( )S
1837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
183.275 644.666 M (Re)S
-0.251 N (wr)S
-0.732(ite this libr)W
(ar)S
-0.732(y to use a link)W
-0.1 N -0.732(ed list str)W
(uctur)S
-0.732(e f)W
-0.732(or eac)W
-0.732(h queue)W
-0.732(. )W
-0.3 N (W)S
(ha)S
-0.732(t ar)W
-0.732(e the ad)W
(v)S
-0.251 N (anta)S
(g)S
-0.732(es )W
111 656.666 M (and disad)S
(v)S
-0.251 N (anta)S
(g)S
(es to this?)S
FmE
1837 0 :M
f138 sf
( )S
1840 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 679.999 M (5. Conc)S
(lusion)S
FmE
1841 0 :M
f57 sf
( )S
1843 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 697.666 M (Man)S
-0.151 N 0.042(y secur)W
0.042(ity pr)W
(ob)S
0.042(lems ar)W
0.042(ise fr)W
0.042(om fr)W
(a)S
(g)S
0.042(ile coding)W
0.042(. )W
-0.181 N (T)S
0.042(he UNIX oper)W
(a)S
0.042(ting system,)W
0.042( and the C standar)W
0.042(d libr)W
(ar)S
(ies,)S
0.042( encour)W
-0.2 N (-)S
FmE
60 362 45 49 rC
1844 0 :M
FrMacBegin
60 363 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 363 45 48 rC
:imsv 39 39 1 5 [45 0 0 56.919 60 363] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1844 0 :M
false
EndFrame5Picture
FmE
gR
gS 60 598 45 49 rC
1844 0 :M
FrMacBegin
60 598.999 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 599 45 48 rC
:imsv 39 39 1 5 [45 0 0 56.919 60 599] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1844 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Page: 18 18
%%BeginPageSetup
initializepage
(Matt Bishop; page: 18 of 18)setjob
%%EndPageSetup
gS 0 0 588 768 rC
1844 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
60 33 468 14 rC
1844 0 :M
FrMacBegin
60 34 468 12 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
60 35 FmB
468 0 FmL
2 1 FmSo
60 38 FmB
468 0 FmL
2 1 FmSo
FmE
gR
gS 0 0 588 768 rC
1844 0 :M
f57 sf
( )S
1846 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 30.667 M (January 7, 1998)S
96.243 N 2(ECS 153 \321 W)A
FmE
1847 0 :M
f70 sf
( )S
1849 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
302.113 30.667 M 2(INTER)A
FmE
1849 0 :M
f57 sf
( )S
1851 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
335.663 30.667 M 2( 1998)A
149.837 N (18)S
60 66.667 M (a)S
(g)S
0.509(e this. )W
-0.181 N (T)S
(he)S
-0.151 N 0.509(y pr)W
(o)S
-0.151 N 0.509(vide libr)W
(ar)S
0.509(y calls tha)W
0.509(t can cause se)W
-0.251 N (v)S
-0.151 N (er)S
0.509(e pr)W
(ob)S
0.509(lems; f)W
0.509(or e)W
-0.151 N (xample)S
(,)S
0.509( )W
FmE
1851 0 :M
f125 sf
( )S
1853 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
389.59 66.667 M (gets)S
FmE
1854 0 :M
f57 sf
( )S
1856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
405.695 66.667 M 0.509(\(3S\) does not c)W
(hec)S
0.509(k f)W
0.509(or b)W
-0.2 N (uf)S
-0.251 N (f)S
(er)S
60 78.667 M (o)S
-0.151 N (v)S
-0.151 N (er\337)S
(o)S
-0.251 N (w)S
-0.652 N (. )S
-0.552 N (A)S
-0.742 N (v)S
-0.2 N (oid these r)S
(outines!)S
FmE
1856 0 :M
f151 sf
( )S
1859 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 93.667 M (Ex)S
(er)S
-0.181 N -1.182(cise 5-1. )W
FmE
1859 0 :M
f57 sf
( )S
1861 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
177.03 93.667 M (W)S
(h)S
-0.051 N -0.887(y should the f)W
(ollo)S
-0.251 N -0.887(wing functions be a)W
-0.2 N (v)S
-0.2 N -0.887(oided w)W
-0.887(hen wr)W
-0.887(iting r)W
(ob)S
-0.2 N -0.887(ust code:)W
-0.887( )W
FmE
1862 0 :M
f125 sf
( )S
1864 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
466.572 93.667 M (gets)S
FmE
1864 0 :M
f57 sf
( )S
1866 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
482.678 93.667 M (,)S
-0.887( )W
FmE
1867 0 :M
f125 sf
( )S
1869 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
486.792 93.667 M (str)S
-0.371 N (cpy)S
FmE
1869 0 :M
f57 sf
( )S
1871 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
510.202 93.667 M (,)S
-0.887( )W
FmE
1872 0 :M
f125 sf
( )S
1874 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
514.315 93.667 M (str)S
-0.2 N (-)S
111 105.667 M (cat)S
FmE
1874 0 :M
f57 sf
( )S
1876 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
123.217 105.667 M (,)S
( )S
FmE
1877 0 :M
f125 sf
( )S
1879 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
128.217 105.667 M (sprintf)S
FmE
1879 0 :M
f57 sf
( )S
1881 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
154.33 105.667 M (? Ho)S
-0.251 N (w w)S
-0.1 N (ould y)S
(ou modify them to mak)S
-0.1 N (e them acce)S
(pta)S
(b)S
(le?)S
FmE
1882 0 :M
f151 sf
( )S
1885 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
111 120.667 M (Ex)S
(er)S
-0.181 N -0.245(cise 5-2. )W
FmE
1885 0 :M
f57 sf
( )S
1887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.603 120.667 M (W)S
-0.184(hen should member)W
-0.184(s of the )W
FmE
1888 0 :M
f125 sf
( )S
1890 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
297.923 120.667 M (scanf)S
FmE
1890 0 :M
f57 sf
( )S
1892 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
319.029 120.667 M -0.184( f)W
-0.1 N (amil)S
-0.184(y of functions be a)W
-0.2 N (v)S
-0.2 N -0.184(oided w)W
-0.184(hile wr)W
-0.184(iting r)W
(ob)S
-0.2 N -0.184(ust )W
111 132.667 M (code? )S
-0.3 N (W)S
(ha)S
(t should y)S
(ou use instead?)S
FmE
1893 0 :M
f299 sf
( )S
1896 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
60 152 M (Ac)S
-0.12 N (kno)S
-0.302 N (wledg)S
(ements)S
FmE
1897 0 :M
f138 sf
( )S
1900 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
170.886 152 M (. )S
FmE
1901 0 :M
f57 sf
( )S
1903 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
178.884 152 M -0.598( Chip Elliott \(then of Dar)W
-0.598(tmouth Colle)W
-0.151 N (g)S
(e)S
(,)S
-0.598( la)W
-0.598(ter of BBN Comm)W
(unica)S
-0.598(tions Cor)W
-0.598(p.\) pr)W
(o)S
-0.151 N (vided)S
60 164.667 M -0.248(the inspir)W
(a)S
-0.248(tion f)W
-0.248(or this. His handout )W
(\322Wr)S
-0.248(iting Bomb-Pr)W
-0.248(oof Code\323)W
-0.248( f)W
-0.248(or Dar)W
(tmouth\325)S
-0.552 N -0.248(s COSC 23,)W
-0.248( Intr)W
-0.248(oduction to Softw)W
-0.1 N (ar)S
(e)S
60 176.667 M (Eng)S
(ineer)S
(ing c)S
(lass,)S
( succinctl)S
(y descr)S
(ibed man)S
-0.151 N (y of the pr)S
(inciples and tec)S
(hniques w)S
(hic)S
(h I ha)S
-0.2 N (v)S
-0.151 N (e e)S
-0.151 N (xtended)S
(.)S
60 191.667 M (T)S
0.184(hanks to Kim Kno)W
-0.251 N 0.184(wles f)W
0.184(or her constr)W
(ucti)S
-0.251 N (v)S
-0.151 N 0.184(e sug)W
(g)S
0.184(estions on this document. )W
-0.552 N (Also,)S
0.184( the students of ECS 40 her)W
0.184(e a)W
0.184(t UC)W
60 203.667 M (Da)S
-0.2 N -0.204(vis helped me r)W
(e\336)S
-0.204(ne this e)W
-0.151 N -0.204(xposition b)W
-0.204(y asking questions and indica)W
-0.204(ting w)W
(ha)S
-0.204(t w)W
-0.1 N -0.204(as dif)W
-0.251 N (\336)S
-0.204(cult to under)W
(stand)S
-0.204(. I hope this)W
60 215.667 M (document is c)S
(lear; it is cer)S
(tainl)S
(y c)S
(lear)S
(er than ear)S
(lier v)S
-0.151 N (er)S
(sions!)S
FmE
60 86 45 50 rC
1903 0 :M
FrMacBegin
60 87 45 48 FmKp
0 0 0 1 0 0 0 FmK
0 FmP
FmPI
60 87 45 49 rC
:imsv 39 39 1 5 [45 0 0 56.919 60 87] T T 1 T :f
[0  :i 000000000000000000000000000000000000000000000000000000E00000000F1C0000007003800001800070000270039000040E1C10000401E0D00004008750000400B850000400A050000400A050000400A050000400A050000400A050000400A0D0000400A310000400AC10000400B0500004008210000400BC30000500B0C00004C083438003308D8C4000CCB630300031D8C008000D63001800038C006800001201B000001106C000000CDB000000032C00000000F000000000000000000000000000000000000000000000000000000000000000%ADOeod
:j
1903 0 :M
false
EndFrame5Picture
FmE
endp
showpage
%%Trailer
end
%%EOF
