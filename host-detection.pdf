%PDF-1.2
%‚„œ”
1 0 obj
<<
/A <<
/S /URI
/URI (http://www.synnergy.net/Archives/Papers/dethy/portscan.pdf)
>>
/Type /Annot
/Subtype /Link
/Rect [84 272 438 282]
/Border [0 0 0]
/H /I
>>
endobj
2 0 obj
<<
/A <<
/S /URI
/URI (http://www.kyuzz.org/antirez/hping2.html))
>>
/Type /Annot
/Subtype /Link
/Rect [216 152 468 162]
/Border [0 0 0]
/H /I
>>
endobj
3 0 obj
<<
/A <<
/S /URI
/URI (http://hispahack.ccc.de))
>>
/Type /Annot
/Subtype /Link
/Rect [306 212 456 222]
/Border [0 0 0]
/H /I
>>
endobj
4 0 obj
<<
/A <<
/S /URI
/URI (http://www.elxsi.de))
>>
/Type /Annot
/Subtype /Link
/Rect [234 308 360 318]
/Border [0 0 0]
/H /I
>>
endobj
5 0 obj
<<
/A <<
/S /URI
/URI (http://www.synnergy.net)
>>
/Type /Annot
/Subtype /Link
/Rect [294 464 438 474]
/Border [0 0 0]
/H /I
>>
endobj
6 0 obj
<<
/Author (dethy)
/CreationDate (D:20010113125300)
/Producer (txt2pdf v2.4 \251 SANFACE Software 1999)
/Title (Advanced Host Detection)
/Subject (Advanced Host Detection)
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F1
/Encoding 13 0 R
/BaseFont /Courier
>>
endobj
10 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F2
/Encoding 13 0 R
/BaseFont /Courier-Oblique
>>
endobj
11 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F3
/Encoding 13 0 R
/BaseFont /Courier-Bold
>>
endobj
12 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F4
/Encoding 13 0 R
/BaseFont /Courier-BoldOblique
>>
endobj
13 0 obj
<<
/Type /Encoding
/Differences [ 0 /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam
/quotedbl /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one /two /three /four /five
/six /seven /eight /nine /colon /semicolon /less /equal
/greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L
/M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft
/backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve
/dotaccent /dieresis /.notdef /ring /cedilla /.notdef
/hungarumlaut /ogonek /caron /space /exclamdown /cent
/sterling /currency /yen /brokenbar /section /dieresis
/copyright /ordfeminine /guillemotleft /logicalnot /hyphen
/registered /macron /degree /plusminus /twosuperior
/threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown /Agrave
/Aacute /Acircumflex /Atilde /Adieresis /Aring /AE
/Ccedilla /Egrave /Eacute /Ecircumflex /Edieresis /Igrave
/Iacute /Icircumflex /Idieresis /Eth /Ntilde /Ograve
/Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash
/Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
/germandbls /agrave /aacute /acircumflex /atilde /adieresis
/aring /ae /ccedilla /egrave /eacute /ecircumflex
/edieresis /igrave /iacute /icircumflex /idieresis /eth
/ntilde /ograve /oacute /ocircumflex /otilde /odieresis
/divide /oslash /ugrave /uacute /ucircumflex /udieresis
/yacute /thorn /ydieresis ]
>>
endobj
14 0 obj
<<
  /Font << /F1 9 0 R /F2 10 0 R /F3 11 0 R /F4 12 0 R >>
  /ProcSet [ /PDF /Text ]
>>
endobj
15 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 16 0 R
>>
endobj
16 0 obj
<<
/Length 17 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
/F3 10 Tf
T* (Advanced Host Detection) Tj
/F1 10 Tf
T* T* (                Techniques To Validate Host-Connectivity) Tj
T* T* (                         whitepaper by dethy) Tj
T* (                         dethy@synnergy.net) Tj
T* T* ( Abstract) Tj
T* T* (  Security Engineers spend a tireless amount of effort to block and filter) Tj
T* (  packet anomalies in an internetwork connected environment. Advanced host) Tj
T* (  mapping bypasses many forms of intrusion detection systems, filters, and) Tj
T* (  routers, essentially enabling an attacker to map and discover previously) Tj
T* (  unknown firewalled hosts.) Tj
T* T* T* (Introduction) Tj
T* T* (This  paper  will attempt  to  describe techniques  used  to discover  heavily) Tj
T* (filtered  and  firewalled  hosts,  that  will  not  answer  to  standard  PING) Tj
T* (responses. It is  assumed that the  reader has a  firm knowledge of  the major) Tj
T* (internet  protocols  \(TCP,IP,UDP,ICMP\).  Most  other  protocols  will  not  be) Tj
T* (discussed but techniques described here can be applied to many protocols.) Tj
T* () Tj
T* T* T* (Host Detection Methods) Tj
T* T* (It is  becoming increasingly  apparent the  amount of  firewalled and filtered) Tj
T* (hosts  connected to  the internet  nowadays.  Misconfigured  and intrinsically) Tj
T* (firewalled hosts often block packet responses and replies that determine their) Tj
T* (\(inter\)network connectivity. A prime example of this scenario is the  standard) Tj
T* (PING \(packet   internet  groper\)  utility. PING  issues an  ICMP type  3 \(echo) Tj
T* (request\) response to an arbitrary  host to test for it's  online connectivity.) Tj
T* (However, since a growing number of these servers block many forms of ICMP code) Tj
T* (types,  a  reply  will  often  be  blocked,  dropped  and  thus   undelivered.) Tj
T* (Unfortunately,  a  client may  then  assume the  network  or host  is  down or) Tj
T* (inconveniently firewalled.) Tj
T* T* (Exactly how can one knowingly detect the online presence of a host ?) Tj
T* T* (Understanding  avenues  which  can  circumvent  certain  levels  of   firewall) Tj
T* (rulesets,  will ultimately  allow a  client  to  determine whether  a host  is) Tj
T* (network  connected and/or  behind a  filtered environment.  This technique  is) Tj
T* (known as 'Host Detection.) Tj
T* T* (Host detection is similar to scanning in several  ways although host detection) Tj
T* (does not test for the absence of packets to ports or modifications  pertaining) Tj
T* (to protocol headers,  ie setting flagged packet replies, but rather  tests any) Tj
T* (responsiveness signs of issued from the remote host. In this respect, host-) Tj
T* (detection is a form of PING scanning, that is detecting any form of response) Tj
T* (to signify the apparent connective state of a server.) Tj
T* T* (This paper analyses two broad 'PING sweep' host detection techniques that  can) Tj
T* (be used in a \(inter\)networked environment for advanced host mapping.) Tj
T* () Tj
T* T* (   *  eliciting valid protocol responses) Tj
T* (   *  generating invalid server-side protocol responses) Tj
T* T* T* (The first method includes  eliciting valid responses from  supported protocols) Tj
T* (on  a  host.  Any  valid  request  from  a  client  issued  to  a  server over) Tj
/F2 10 Tf
(                                       1)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
17 0 obj
3494
endobj
18 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 19 0 R
>>
endobj
19 0 obj
<<
/Length 20 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (TCP/IP/UDP/ICMP that will assume a reply,  in terms of an answered request, is) Tj
T* (confined into this category. Such methods include:) Tj
T* T* (  *  UDP Echo) Tj
T* (  *  TCP Echo) Tj
T* (  *  UDP Closed Ports) Tj
T* (  *  TCP ACK) Tj
T* (  *  TCP SYN) Tj
T* (  *  TCP SYN|ACK) Tj
T* (  *  TCP FIN) Tj
T* (  *  TCP NULL FLAGS) Tj
T* (  *  TCP XMAS) Tj
T* (  *  ICMP Echo Request          \(Type 8\)) Tj
T* (  *  ICMP Broadcast) Tj
T* (  *  ICMP Router Solicitation   \(Type 10\)) Tj
T* (  *  ICMP Timestamp Request     \(Type 13\)) Tj
T* (  *  ICMP Information Request   \(Type 15\)) Tj
T* (  *  ICMP Address Mask Request  \(Type 17\)) Tj
T* T* T* (Opposing these RFC-compliant  replies are the  underlying methods to  generate) Tj
T* (invalid  responses from  the target  host  in  order to  determine its  hidden) Tj
T* (presence. Of course receiving a reply from any of these methods will allow  us) Tj
T* (to knowingly detect whether a host is online and/or firewalled. These  methods) Tj
T* (include:) Tj
T* T* (  * Timedout Packet Fragmentation) Tj
T* (  * Invalid IP Header Length) Tj
T* (  * Invalid IP Field Values) Tj
T* T* T* (Eliciting Valid Protocol Requests) Tj
T* () Tj
T* T* (The first definitive  category of host  detecting takes place  in the form  of) Tj
T* (eliciting  valid protocol  queries. Several  such methods  are included  using) Tj
T* (valid packet requests.) Tj
T* T* (  * Echo port method) Tj
T* (  * UDP method) Tj
T* (  * TCP FLAG method) Tj
T* (  * ICMP request method) Tj
T* T* (All of  the above  categories are  possible methods  that allow  any arbitrary) Tj
T* (client  to  request  a  returned  packet  reply  in  order  to  determine it's) Tj
T* (interconnectivity. As  such, the  packets returned  and transmitted  are valid) Tj
T* (protocol  responses,  and  thus is  differentiated  from  generating invalided) Tj
T* (responses since each request correctly uses TCP/IP/UDP/ICMP protocols  without) Tj
T* (mangling any of the available fields.) Tj
T* T* T* (ECHO Port Method) Tj
T* T* (This  old-fashioned  and   outdated  technique  used   to  determine  a   host) Tj
T* (responsiveness at a very basic level can be still used on poorly/misconfigured) Tj
T* (UNIX hosts. Most often a  security conscious administrator will block  traffic) Tj
T* (to port 7 TCP/UDP or disable this service which) Tj
T* (runs from inetd.) Tj
T* T* T* (TCP/Echo Port) Tj
T* T* (This simplistic method  uses a standard  three-way TCP handshake  that aims to) Tj
/F2 10 Tf
(                                       2)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
20 0 obj
2687
endobj
21 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 22 0 R
/Annots [ 1 0 R 2 0 R ]
>>
endobj
22 0 obj
<<
/Length 23 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (establish  a  connection to  the  echo port  \(7/tcp\).  If a  connect\(\)'ion  is) Tj
T* (established  the  host is  then  assumed as  being  online and  thus  the host) Tj
T* (detection sequence has taken  place at this very  basic level. As such,  since) Tj
T* (the three-way handshake along with the  potential of the echo port being  open) Tj
T* (and even firewalled, makes this method highly restricted and problematic.) Tj
T* T* (Although most  UNIX/Linux distributions  have made  the echo  port disabled by) Tj
T* (default it is  still in use  on many systems.  The diagnostical purposes  that) Tj
T* (this server was initially  set out to achieve  has become far out-weighted  by) Tj
T* (the  security implication  that it  opens  up  as a  result of  the increasing) Tj
T* (traffic that it may generate on a connecting client \(which in turn  diminishes) Tj
T* (it's own bandwidth and system processor performance\).) Tj
T* T* (Since  three-way  handshaking begins  with   an initial  SYN  flag packet  and) Tj
T* (receives a  SYN|ACK in  reply, a  client does  not need   to continue with the) Tj
T* (handshaking paradigm  in order  to determine  the hosts  responsivesness.  Not) Tj
T* (only  would  it log but  it   has the   highest chance  of being   noticed and) Tj
T* (consecutively  blocked  by  the  arbitary  host.   As  such  misconfigured  or) Tj
T* (simplistic configuration of a firewall  would allow packets with the  SYN flag) Tj
T* (set to pass  through. Noteably, this  is why the  TCP echo port  method should) Tj
T* (only be used  as a last resort  - and even then  it's not a wise  idea, unless) Tj
T* (your aim is to inevitably trigger most forms of intrusion detection systems) Tj
T* (\(IDS\) and alarm prudent systems administrators.) Tj
T* T* (An  example  of  using  this  method  in  a  networked  environment  could  be) Tj
T* (accomplished through telnet.) Tj
T* T* ( dethy@dev:~ $ telnet XXX.XXX.XXX.XXX 7) Tj
T* ( Trying XXX.XXX.XXX.XXX...) Tj
T* ( Connected to XXX.XXX.XXX.XXX) Tj
T* ( Escape character is '^]'.) Tj
T* ( Hello.) Tj
T* ( Hello.) Tj
T* T* T* (As shown above, the remote host  replies to our initial 'Hello.' with  its own) Tj
T* ('Hello.', obviously the  server is responsive.  Creating a scanner  for such a) Tj
T* (method wouldn't  necessarily need  to send  any garbled  data to  the port, an) Tj
T* (established connection is all that is required.) Tj
T* T* (Note: Other methods to determine whether  this service is running on a  remote) Tj
T* (host which avoid the TCP  three-way handshake could alternatively be  used for) Tj
T* (such purposes as defeating packet loggers.) Tj
T* (Check ) Tj
0 0 1 rg
(http://www.synnergy.net/Archives/Papers/dethy/portscan.pdf) Tj
0 0 0 rg
( for a further) Tj
T* (discussion of advanced port scan techniques.) Tj
T* T* T* (UDP/Echo Port) Tj
T* T* (Similarly to the TCP  echo port method, the  UDP port 7 will  answer a clients) Tj
T* (datagram with it's own UDP datagram. Since the packet block initially sent  is) Tj
T* (replied with an answer from a remote host, we know the host is alive.) Tj
T* T* (Using hping \(available from ) Tj
0 0 1 rg
(http://www.kyuzz.org/antirez/hping2.html\)) Tj
0 0 0 rg
( as our) Tj
T* (packet generator we send the following:) Tj
T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -2 -p 7) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): udp mode set, 28 headers + 0) Tj
T* ( data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: seq=0 ttl=64 id=1255 rtt=0.9 ms) Tj
T* T* /F2 10 Tf
(                                       3)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
23 0 obj
3776
endobj
24 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 25 0 R
>>
endobj
25 0 obj
<<
/Length 26 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (UDP Method) Tj
T* T* (This  next  technique  involves  the User  Datagram  Protocol  and  it's known) Tj
T* (responsiveness to closed  ports. This clandestine  packet reply is  taken from) Tj
T* (the known UDP port scan method. The  logic involved with this is by sending  a) Tj
T* (UDP  datagram to  a closed,  NON- LISTENING  port, the  arbitrary host  should) Tj
T* (respond with an ICMP_PORT_UNREACH error message. Since this host returns  such) Tj
T* (a response, we are then able to determine and indicate it's connectivity - and) Tj
T* (thus is assumed alive.) Tj
T* T* (The cycle for this method is as follows:) Tj
T* T* (  * client -> UDP  \(to closed port\)) Tj
T* (  * server -> ICMP_PORT_UNREACH) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -2 -p 65) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): udp mode set, 28 headers + 0) Tj
T* ( data bytes) Tj
T* ( ICMP Port Unreachable from XXX.XXX.XXX.XXX  \(XXX.XXX.XXX.XXX\)) Tj
T* T* T* (Predicting a closed port is fairly  simple. Try choosing a high port  \(greater) Tj
T* (than 1024 and less than  65536\). Of  course if a  reply to a UDP  datagram  is) Tj
T* (not sent back  to  the client,  evidence shows  that  this packet would   have) Tj
T* (been dropped  by  the kernel   since  the destination  port  would  have  been) Tj
T* (open or a filtering system has blocked the packet. Naturally, if this scenario) Tj
T* (occurs choose another port to test for responsiveness \(one that is closed\).) Tj
T* T* (Caution is to be taken with UDP packets, however. Since UDP are often  dropped) Tj
T* (during transmission, and/or blocked by firewalls, a replied  ICMP_PORT_UNREACH) Tj
T* (may not even arrive to the  client at all.  In this  instance   retransmission) Tj
T* (should take place for added certainty.) Tj
T* T* T* (TCP FLAG Methods) Tj
T* T* (Streaming various flagged packets over a network is perhaps the most effective) Tj
T* (method  to determine  the connectivity  of a  host. Since  these packets   are) Tj
T* (elusive in  terms of  transmission and  presents itself  as normal  day to day) Tj
T* (traffic,  they  are  rather  difficult  to  differentiate  between   intrusive) Tj
T* (information  gathering  packets  and harmless  inbound  traffic.  All that  is) Tj
T* (required  for this  host detection  technique to  be  successful  is a  single) Tj
T* (flagged packet unlike the  aforementioned TCP/UDP echo port  method, involving) Tj
T* (three-way handshaking.) Tj
T* T* T* (TCP SYN Approach) Tj
T* T* (This SYN flag method is a highly successul PING sweep implementation. Since  a) Tj
T* (response is replied to any  SYN packet on a closed  or open port, it allows  a) Tj
T* (client to be certain in detecting the presence of a host machine.) Tj
T* T* (Manipulating the packet header to  contain the SYN flag and  transmitting this) Tj
T* (to an open port will return a  packet with the SYN|ACK bits set. If  no packet) Tj
T* (is  returned at  all, then  a client  may assume  the host  is firewalled,  or) Tj
T* (or the port filtered.) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -S -p 23) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): S set, 40 headers + 0 data bytes) Tj
/F2 10 Tf
(                                       4)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
26 0 obj
3541
endobj
27 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 28 0 R
>>
endobj
28 0 obj
<<
/Length 29 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* ( 50 bytes from 192.168.1.1: flags=SA seq=0 ttl=64 id=1252 win=32696 rtt=0.9 ms) Tj
T* T* T* (As displayed the  SA \(SYN|ACK\) is  set in the  returned packet. Being  a blind) Tj
T* (client, one that  does not completely  know whether a  port is open  or closed) Tj
T* (does not matter  in this host  detection method. Since  both open/closed ports) Tj
T* (will  respond to  the SYN  packet, we  do not  particularly need  to send  the) Tj
T* (initial packet with knowledge of the state of the port whether open or closed.) Tj
T* T* (An example sending a SYN to a closed port is shown below.) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -S -p 2) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING atlanta \(eth0 XXX.XXX.XXX.XXX\): S set, 40 headers + 0 data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=RA seq=0 ttl=255 id=1254 win=0 rtt=0.7 ms) Tj
T* T* (The RA \(RST|ACK\) flags returned in this packet are indicative of a closed ports) Tj
T* (response. Since we receive a returned packet, we know the host is alive.) Tj
T* T* T* (TCP ACK Approach) Tj
T* T* (This method is  arguably the most  effective approach for  PING scanning on  a) Tj
T* (remote host.  Flagging the  ACK bit  in the  TCP header  and transmitting  the) Tj
T* (packet to an open  or closed port should  return a packet with  the reset\(RST\)) Tj
T* (bit flagged. Evidently this method is disguised as normal traffic but also  is) Tj
T* (flexible in that an open/closed port will not deter the end result. The  state) Tj
T* (of the port for this method is not restrictive as stated, lucratively enabling) Tj
T* (a client to query a target on any given port \(1-65536\) and almost guaranteed a) Tj
T* (response.) Tj
T* T* (Of course, hosts may disregard these  packets with an effective rule base  for) Tj
T* (routers, and firewalls. It is favorably plausible to determine whether a  host) Tj
T* (is protected by some sort of  filtering system through using a combination  of) Tj
T* (the techniques  this paper  describes. Example,  if a  machine is  found to be) Tj
T* (blocking TCP echo port connection, and no returned packets are replied at all,) Tj
T* (then using the TCP ACK approach directed  to the echo port 7 will help  enable) Tj
T* (the client  to predict  and spot  rulesets by  using the  TCP ACK  method as a) Tj
T* (diagnostical assumption. The server may reply with the RST bit, meaning:) Tj
T* T* (  * TCP echo port 7 is filtered by some arbitrary ruleset) Tj
T* (  * Packets with the SYN flag enabled are blocked to port 7) Tj
T* (  * TCP ACK packets are allowed through) Tj
T* T* (All of the above are ostensibly obvious, but perhaps the assumption made about) Tj
T* (the SYN but may seem incorrect.  However, through a process of elimination  we) Tj
T* (know  that  the  echo port  is  filtered,  and we  know  that  to establish  a) Tj
T* (connection on this port we need to use the three-way handshaking  negotiation,) Tj
T* (which involves the following responses:) Tj
T* T* (                SYN -> SYN|ACK -> ACK) Tj
T* T* (Now  we also  know that  the  ACK  packets returned  the client  with  the RST) Tj
T* (bit in response. Eliminating the  ACK flag  from the  above equation,  we  end) Tj
T* (up with  SYN and  SYN|ACK. Since  the SYN  flag is  transmitted first from the) Tj
T* (client to the target and a  SYN|ACK response  is not being returned   from the) Tj
T* (target we  are able to cancel the SYN|ACK  bit \(since the  SYN packet was  not) Tj
T* (actually received,   by means  of some  firewall blocking  it's transmission\).) Tj
T* (Therefore, by  some ruleset  or firewall,  packets matching  the SYN  flag are) Tj
T* (dropped on the receivers end. This  is a technique known as firewalking,  that) Tj
T* (is analysing the types of packets that are and aren't allowed through in order) Tj
T* (to map the types of rulesets  an arbitrary host has implemented \(and  those it) Tj
/F2 10 Tf
(                                       5)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
29 0 obj
4138
endobj
30 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 31 0 R
>>
endobj
31 0 obj
<<
/Length 32 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (has not\).) Tj
T* T* (Using HPING to issue an ACK packet  to a closed and then an open  port outputs) Tj
T* (the following:) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -A -c 1 -p 2) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): A set, 40 headers + 0 data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=R seq=0 ttl=255 id=1048 win=0 rtt=0.5 ms) Tj
T* T* T* (The -p argument denotes the port in which to send the packet. In this instance) Tj
T* (packet transmission was directed to port 2 \(a NON-LISTENING port\).) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -A -c 1 -p 23) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): A set, 40 headers + 0 data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=R seq=0 ttl=255 id=1052 win=0 rtt=0.5 ms) Tj
T* T* T* (where port 23 was an open, LISTENING port.) Tj
T* T* (As is shown, both replies from the XXX.XXX.XXX.XXX host responded with the RST) Tj
T* (flag on open and closed ports. Thus we have verified this host exists\(online\).) Tj
T* T* T* (TCP SYN|ACK Approach) Tj
T* T* (This method is not the most flexible in terms of compatibility. BSD networking) Tj
T* (code does not send any flagged packet back to a SYN|ACK query packet, hence is) Tj
T* (architecture dependant. However, Linux/Windows detection \(and others\) can be) Tj
T* (obtained successfully with this technique.) Tj
T* T* (A SYN|ACK  packet is  initially sent  to an  arbitrary port \(open/closed state) Tj
T* (does not matter\). The returned packet should be set with the RST bit in reply.) Tj
T* (Since the state of  the port plays no  role in this scenario,  any random port) Tj
T* (could be used as the testing port.) Tj
T* T* (The example shown below is a SYN|ACK packet issued to a Win95 machine with a) Tj
T* (non-listening port \(23\). The result is an RST flagged packet.) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -S -A -p 23) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): SA set, 40 headers + 0 data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=R seq=0 ttl=128 id=31029 win=0 rtt=0.5 ms) Tj
T* T* T* (Likewise, the same packet is issued to a Linux machine except with a listening) Tj
T* (port on 23. The result is once again, an RST flagged packet.) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -S -A -p 23) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): SA set, 40 headers + 0 data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=R seq=0 ttl=255 id=1258 win=0 rtt=0.5 ms) Tj
T* T* T* (TCP FIN Approach) Tj
T* T* (Much more clandestine in approach is the TCP FIN host scan technique.  Issuing) Tj
/F2 10 Tf
(                                       6)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
32 0 obj
3096
endobj
33 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 34 0 R
>>
endobj
34 0 obj
<<
/Length 35 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (a packet with  this flag set  to a closed  port will return  an RST|ACK packet) Tj
T* (from the remote host. Alternatively an  open port will discard the packet  and) Tj
T* (hence is useless to us as host detection extraodinaires.) Tj
T* T* (Locating a closed port is clearly basic,  take a random guess at a port  above) Tj
T* (the  reserved services\(1-1024\)  where the  abundance on  the unserviced  ports) Tj
T* (remain.) Tj
T* T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -F -p 2) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): F set, 40 headers + 0 data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=RA seq=0 ttl=255 id=1260 win=0 rtt=0.5 ms) Tj
T* T* T* (The outbound packet was sent to a closed port with the RST|ACK bit replied.) Tj
T* (Since we our queried packet was replied by the server, we know the host) Tj
T* (is alive and well.) Tj
T* T* (Alternatively the query packet does not invoke a reply from the remote host any) Tj
T* (of the below concepts may tell us why.) Tj
T* T* (  * inbound FIN packets blocked by firewall/router/ACLS) Tj
T* (  * inbound traffic to that port is filtered) Tj
T* (  * the queried port was open \(try another port\)) Tj
T* (  * host is down \(unconnected from the \(inter\)network\)) Tj
T* T* T* (TCP NULL Approach) Tj
T* T* (This method involves unsetting all the flags in the TCP header and sending the) Tj
T* (packet to a closed, NON-LISTENING port. The reply should be a packet with  the) Tj
T* (RST|ACK bits set. An open port will not respond to this packet \(discarded\), so) Tj
T* (once more choose a port that is known to  have no services  running by default.) Tj
T* T* (An example  of this  closed port  state along  with no  flags set is displayed) Tj
T* (below.) Tj
T* T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -p 2) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): NO FLAGS are set, 40 headers + 0) Tj
T* ( data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=RA seq=0 ttl=255 id=1267 win=0 rtt=0.5 ms) Tj
T* T* T* (Defining a port to be  used as the testing port  for this host detection is  a) Tj
T* (relatively easy choice. The results for this scan can often go undelivered  to) Tj
T* (the client since  ACL's and rulesets  particularly check for  unflagged packet) Tj
T* (queries. This method therefore, will not be as effective as the aforementioned) Tj
T* (ACK and SYN techniques, but of course is a useful method if the host does not) Tj
T* (answer to standard ICMP type 8 echo requests.) Tj
T* T* T* (TCP XMAS Approach) Tj
T* T* (Similarly to the NULL flag header host detection method, XMAS scanning tests a) Tj
T* (closed ports response to a packet that has enabled all bits of the TCP  header) Tj
T* (flags:  SYN, ACK, FIN, RST, URG, PSH  \(the  two reserved  bits  do  not modify) Tj
T* (the outcome\). This method  is based on the UNIX/Linux/BSD  TCP/IP stack) Tj
T* (implementation  and  will  not  always successfully  work  against  Windows) Tj
T* (operating systems.) Tj
T* T* /F2 10 Tf
(                                       7)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
35 0 obj
3329
endobj
36 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 37 0 R
>>
endobj
37 0 obj
<<
/Length 38 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* ( dethy@dev:~ # hping XXX.XXX.XXX.XXX -c 1 -p 2 -F -S -R -P -A -U -X -Y) Tj
T* () Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): RSAFPUXY set, 40 headers + 0) Tj
T* ( data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: flags=RA seq=0 ttl=255 id=1380 win=0 rtt=0.6 ms) Tj
T* T* T* (The RST|ACK  bits are  indicative that  the host  received our  reply and  has) Tj
T* (confirmed it with its own transmitted packet. Therefore the client  interprets) Tj
T* (the arbitrary host as being alive and network connected.) Tj
T* T* (Since open ports  do not respond  to this malformed  packet request, using  an) Tj
T* (open port for host detection is trivial.) Tj
T* T* T* (Comments) Tj
T* T* (From  the  above  information,  circumstantial  evidence  suggests  that  host) Tj
T* (detection of some arbitrary host is easily identifible if that host is running) Tj
T* (a  UNIX/Linux/BSD  derivative  since  these  operating  systems  answer   many) Tj
T* (malformed packet requests. Contrastedly, Windows based operating systems  have) Tj
T* (a tendancy to drop many  anomalistic traffic, which ultimately prevents  these) Tj
T* (hosts from  being successfully  detected \(but  not transparent  to many of the) Tj
T* (scans detailed above\) in a \(inter\)networked environment.) Tj
T* T* T* (ICMP Methods) Tj
T* T* (The Internet Control  Message Protocol\(ICMP\) is  used for reporting  errors in) Tj
T* (datagram processing, and is  an integral part of  IP. ICMP has not  especially) Tj
T* (been well-researched as a form  of host detection until recently  a whitepaper) Tj
T* (written  by  Ofir  Akfin describes  ways  ICMP  can be  used  in  a number  of) Tj
T* (scenarious, including fingerprinting and inverse mapping.) Tj
T* T* (With information security and it's importance on the increase, system analysts) Tj
T* (are implementening ACL's and an effective rulebase to block all forms of ICMP.) Tj
T* (Although  not all  forms are  considered lethal  \(smurf broadcasts,  excessive) Tj
T* (unreachable error replies\)  many forms of  ICMP aid server  communication in a) Tj
T* (networked environment \(timestamping for example\).) Tj
T* T* (Host detection disregards the type of  ICMP that is filtered and look  for any) Tj
T* (signs of life elicited through some arbitrary ICMP type datagram. Today,  most) Tj
T* (hosts have some form of filtering against ICMP type 8 \(echo request\) but  have) Tj
T* (left other types, all the better for host detection.) Tj
T* T* T* (ICMP Echo Request \(Type 8\)) Tj
T* T* (PING? PONG! At last we reach  the standard and mandatory method used  for host) Tj
T* (- detection. The 'PING'  network diagnostic utility elicits  ICMP echo_request) Tj
T* (datagrams to analyse network connectivity. An echo_reply Type 0 ICMP  datagram) Tj
T* (will be returned if the host is active\(online\).) Tj
T* T* (Since this method was  designed to be the  standard method for host  detection) Tj
T* (recognition; firewalls, routers, ACLs have designed their rulesets around this) Tj
T* (fact and have consequently  blocked all forms of  ICMP Type 8 inbound  network) Tj
T* (traffic. This gives reasons to all the other techniques described above  which) Tj
T* (evade standard echo responses \(and are just as successful\).) Tj
T* T* (Focussing more directly at the ICMP Type 8 packet reveals the following:) Tj
T* T* (    0                   1                   2                   3) Tj
/F2 10 Tf
(                                       8)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
38 0 obj
3680
endobj
39 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 40 0 R
>>
endobj
40 0 obj
<<
/Length 41 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |     Type      |     Code      |          Checksum             |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |           Identifier          |        Sequence Number        |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |                             Data                              |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* T* T* (A generic response is as follows:) Tj
T* T* T* ( dethy@dev:~ # hping -1 XXX.XXX.XXX.XXX -c 1 -C 8) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.XXX \(eth0 XXX.XXX.XXX.XXX\): icmp mode set, 28 headers + 0) Tj
T* ( data bytes) Tj
T* ( 50 bytes from XXX.XXX.XXX.XXX: icmp_seq=0 ttl=255 id=1273 rtt=0.4 ms) Tj
T* T* T* (As is displayed 50 bytes of the ICMP echo_reply were returned from the  target) Tj
T* (host.  Similarly, as  is the  case with  other  methods  since we  received an) Tj
T* (answered packet the host is assumed alive.) Tj
T* T* T* (ICMP Broadcast) Tj
T* T* (Broadcasting is  a way  of  transmitting  packets to  all connected  hosts of a) Tj
T* (network by sending an echo request\(Type 8\) to the network or broadcast address.) Tj
T* (The  results will  be a  magnification of  the first initiated packet with each) Tj
T* (networked host sending their own reply back to the instigating client.) Tj
T* T* (In fact, ICMP Broadcasting is an  extremely useful method to map an  arbitrary) Tj
T* (network's  interconnected computers.  Since each  echo query  is answered,  it) Tj
T* (allows  simple host  detection for  a prober  to discover  an entire  network.) Tj
T* (However, there is a drawback. By  default Windows computers \(except NT 4  with) Tj
T* (Service Pack < 4\) do not answer  to ICMP Type 8 echo request packets  directed) Tj
T* (to the  broadcast or  network address  but instead  silently discards any such) Tj
T* (packets.  Once again  it becomes  apparent that  Windows boxes  can be  rather) Tj
T* (elusive in terms of remote host detection.) Tj
T* T* (Below is an example of an ICMP echo request packet sent to the network address) Tj
T* (of some server.) Tj
T* (Note: The XXX.XXX.XXX.4 IP address did not return any reply since) Tj
T* (it was a Windows95 box.) Tj
T* T* T* ( dethy@dev:~ # hping -1 XXX.XXX.XXX.0 -c 2) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.0 \(eth0 XXX.XXX.XXX.0\): icmp mode set, 28 headers + 0) Tj
T* ( data bytes) Tj
T* ( 28 bytes from XXX.XXX.XXX.3: icmp_seq=0 ttl=255 id=13013 rtt=0.4 ms) Tj
T* ( 50 bytes from XXX.XXX.XXX.1: icmp_seq=0 ttl=255 id=426 rtt=0.6 ms) Tj
T* ( 50 bytes from XXX.XXX.XXX.2: icmp_seq=0 ttl=255 id=15319 rtt=0.8 ms) Tj
T* T* ( --- XXX.XXX.XXX.0 hping statistic ---) Tj
T* ( 1 packets tramitted, 3 packets received, -100% packet loss) Tj
T* ( round-trip min/avg/max = 0.4/0.6/0.8 ms) Tj
T* T* T* (It is noticed that the  single transmitted packet received three  replies when) Tj
T* (directed to the network address.) Tj
T* /F2 10 Tf
(                                       9)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
41 0 obj
3434
endobj
42 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 43 0 R
/Annots [ 3 0 R ]
>>
endobj
43 0 obj
<<
/Length 44 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (Alternatively, a packet  sent to the  broadcast address will  likewise produce) Tj
T* (three answered reply datagrams.) Tj
T* T* T* ( dethy@dev:~ # hping -1 XXX.XXX.XXX.255 -c 2) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING XXX.XXX.XXX.255 \(eth0 XXX.XXX.XXX.255\): icmp mode set, 28 headers + 0) Tj
T* ( data bytes) Tj
T* ( 28 bytes from XXX.XXX.XXX.3: icmp_seq=0 ttl=255 id=13098 rtt=0.4 ms) Tj
T* ( 50 bytes from XXX.XXX.XXX.1: icmp_seq=0 ttl=255 id=730 rtt=0.7 ms) Tj
T* ( 50 bytes from XXX.XXX.XXX.2: icmp_seq=0 ttl=255 id=15327 rtt=0.8 ms) Tj
T* T* ( --- XXX.XXX.XXX.255 hping statistic ---) Tj
T* ( 1 packets tramitted, 3 packets received, -100% packet loss) Tj
T* ( round-trip min/avg/max = 0.4/0.7/0.8 ms) Tj
T* T* T* (Once  again,  this  technique  has shown  a  successful  method  using address) Tj
T* (broadcasting as a network host mapping mechansism.) Tj
T* T* T* (ICMP Router Solicitation        \(Type 10\)) Tj
T* T* (The  ICMP router   discovery requests are  called Router  Solicitations.  Each) Tj
T* (router periodically multicasts a Router Advertisement \(ICMP Type 9\) from  each) Tj
T* (of its multicast interfaces,  which  in turn announces  the IP  address\(es\) of) Tj
T* (that interface.) Tj
T* T* (This technique is useful  for discovering a system  acting as a Router.  It is) Tj
T* (known that ICMP Router Solication is an optional message format on a  standard) Tj
T* (host. However, it is  mandatory for a router  to have enabled the  ICMP Router) Tj
T* (Solication implementation.  Thus, if  servers respond  with an  ICMP Type 9 in) Tj
T* (reply to  an ICMP  Type 10,  one can  be fairly  certain that  the server is a) Tj
T* (router or network device. Needless to  say, a host that receives an  ICMP Type) Tj
T* (10 but is not configured to transmit these messages, can not send back a reply.) Tj
T* T* (The packet format for a router discovery messages looks like the following:) Tj
T* T* (    0                   1                   2                    3) Tj
T* (    0   2   4   6  8  10  12  14  16  18  20  22  24  26  28  30  31) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |     Type      |      Code     |          Checksum             |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |                           Reserved                            |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* T* T* (\(Unfortunately  hping  has  not  implemented  ICMP  Type  10,13,15,17, message) Tj
T* (formats.  Instead icmpush  \(available from ) Tj
0 0 1 rg
(http://hispahack.ccc.de\)) Tj
0 0 0 rg
(  has  been) Tj
T* (alternatively  selected  as  the  packet generating/analysing utility\).) Tj
T* T* ( dethy@dev:~ # ./icmpush -vv -rts XXX.XXX.XXX.XXX) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> ICMP total size = 20 bytes) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> MTU = 1500 bytes) Tj
T* (  -> Total packet size \(ICMP + IP\) = 40 bytes) Tj
T* ( ICMP Router Solicitation packet sent to XXX.XXX.XXX.XXX \(XXX.XXX.XXX.XXX\)) Tj
T* T* ( Receiving ICMP replies ...) Tj
T* ( XXX.XXX.XXX.XXX -> Router Advertisement \(XXX.XXX.XXX.XXX\)) Tj
T* ( ./icmpush: Program finished OK) Tj
T* /F2 10 Tf
(                                       10)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
44 0 obj
3515
endobj
45 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 46 0 R
>>
endobj
46 0 obj
<<
/Length 47 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* T* (Another  successful hit!  We know  we have  found a  Router on  this  network.) Tj
T* (Perhaps the Router  is filtering other  ICMP types or  perhaps blocking ports,) Tj
T* (but fortunately this paper has  discussed alternative methods to bypass  these) Tj
T* (forms of ACL.) Tj
T* T* T* (ICMP Timestamp Request          \(Type 13\)) Tj
T* T* (The reply \(ICMP  Type 14\) within  a timestamp request  is the initial  request) Tj
T* (data  additionally  with  the remote  hosts  timestamp.  Obviously, timestamps) Tj
T* (requests are made in order to query a server for the current time.) Tj
T* T* (Often  cross  platform compatibility  issues  lend a  hand  when requesting  a) Tj
T* (timestamp reply.  Windows95 and  WindowsNT did  not answer  queries that  were) Tj
T* (sent, UNIX/Linux/BSD replied with the correct data.) Tj
T* T* (Taking a look at the ICMP packet itself reveals the following:) Tj
T* T* (    0                   1                   2                   3) Tj
T* (    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |     Type      |      Code     |          Checksum             |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |           Identifier          |        Sequence Number        |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |                      Originate Timestamp                      |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |                        Receive Timestamp                      |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |                       Transmit Timestamp                      |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* T* T* (The first example shown below transmits  an ICMP timestamp request to a  Linux) Tj
T* (server, the result was 03:50:32 encapsulated within the data field.) Tj
T* T* T* ( dethy@dev:~ # ./icmpush -vv -tstamp XXX.XXX.XXX.XXX) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> ICMP total size = 20 bytes) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> MTU = 1500 bytes) Tj
T* (  -> Total packet size \(ICMP + IP\) = 40 bytes) Tj
T* ( ICMP Timestamp Request packet sent to XXX.XXX.XXX.XXX \(XXX.XXX.XXX.XXX\)) Tj
T* T* ( Receiving ICMP replies ...) Tj
T* ( XXX.XXX.XXX.XXX -> Timestamp Reply transmited at 03:50:32) Tj
T* ( ./icmpush: Program finished OK) Tj
T* T* T* (The  next example  issued the  same packet  but to  a Windows95  computer, no) Tj
T* (returned packet was captured.) Tj
T* T* T* ( dethy@dev:~ # ./icmpush -vv -tstamp XXX.XXX.XXX.XXX) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> ICMP total size = 20 bytes) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> MTU = 1500 bytes) Tj
T* (  -> Total packet size \(ICMP + IP\) = 40 bytes) Tj
T* ( ICMP Timestamp Request packet sent to XXX.XXX.XXX.XXX \(XXX.XXX.XXX.XXX\)) Tj
T* /F2 10 Tf
(                                       11)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
47 0 obj
3302
endobj
48 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 49 0 R
>>
endobj
49 0 obj
<<
/Length 50 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* ( Receiving ICMP replies ...) Tj
T* ( ./icmpush: Program finished OK) Tj
T* T* T* (ICMP  Timestamp  request  us  a healthy  method  to  use  for host  detection,) Tj
T* (particularly *NIX servers.) Tj
T* T* T* (ICMP Information Request        \(Type 15\)) Tj
T* T* (This message is used to query a host to discover it's network address, however) Tj
T* (as  the  RFC states,  ICMP  Type 15  \(Information  Request\) and  ICMP  Type 16) Tj
T* (\(information reply\) are obsoleted, but that's not to say it's still not in use) Tj
T* (in the wild. :\)) Tj
T* T* (A cross section of this ICMP type reveals the following:) Tj
T* T* (    0                   1                   2                   3) Tj
T* (    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |     Type      |      Code     |          Checksum             |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |           Identifier          |        Sequence Number        |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* T* T* (A packet  with ICMP  Type 15  was sent  to a  host which  in turn answered the) Tj
T* (request, and thus gave indication of it's existence to some arbitrary host.) Tj
T* T* T* ( dethy@dev:~ # ./icmpush -vv -info XXX.XXX.XXX.XXX) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> ICMP total size = 8 bytes) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> MTU = 1500 bytes) Tj
T* (  -> Total packet size \(ICMP + IP\) = 28 bytes) Tj
T* ( ICMP Info Request packet sent to XXX.XXX.XXX.XXX \(XXX.XXX.XXX.XXX\)) Tj
T* T* ( Receiving ICMP replies ...) Tj
T* ( XXX.XXX.XXX.XXX -> Info Reply \(XXX.XXX.XXX.XXX\)) Tj
T* ( ./icmpush: Program finished OK) Tj
T* T* T* (Once  again, I  could not  reproduce these  results against  a Windows  95/NT) Tj
T* (system, but several *NIX distribution replied successfully.) Tj
T* T* T* (ICMP Address Mask Request       \(Type 17\)) Tj
T* T* (Address mask requests are generated to  obtain the subnet mask address on  the) Tj
T* (local network. The response to this initial query packet will be an ICMP  Type) Tj
T* (18 \(Address Mask Reply\), which should contain the subnet address.) Tj
T* T* (A detailed look at the ICMP Address Mask reveals the following:) Tj
T* T* (    0                   1                   2                   3) Tj
T* (    0   2   4   6  8  10  12  14  16  18  20  22  24  26  28  30  31) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |     Type      |      Code     |          Checksum             |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |           Identifier          |        Sequence Number        |) Tj
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* (   |                      Subnet Address Mask                      |) Tj
/F2 10 Tf
(                                       12)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
50 0 obj
3199
endobj
51 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 52 0 R
>>
endobj
52 0 obj
<<
/Length 53 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+) Tj
T* T* T* (Funnily enough issuing this ICMP type to various Linux boxes did not return an) Tj
T* (ICMP Type 18 reply, however, Windows systems did.) Tj
T* (The  example  below  shows  the result  of  the  Address  Mask Request  packet) Tj
T* (initiated against a Windows box.) Tj
T* T* T* ( dethy@dev:~ # ./icmpush -vv -mask XXX.XXX.XXX.XXX) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> ICMP total size = 12 bytes) Tj
T* (  -> Outgoing interface = XXX.XXX.XXX.XXX) Tj
T* (  -> MTU = 1500 bytes) Tj
T* (  -> Total packet size \(ICMP + IP\) = 32 bytes) Tj
T* ( ICMP Address Mask Request packet sent to XXX.XXX.XXX.XXX \(XXX.XXX.XXX.XXX\)) Tj
T* T* ( Receiving ICMP replies ...) Tj
T* ( XXX.XXX.XXX.XXX -> Address Mask Reply \(255.255.255.0\)) Tj
T* ( ./icmpush: Program finished OK) Tj
T* T* T* (So the subnet mask was received at our end. Yet another host detection  method) Tj
T* (is  feasible against  Windows systems  to  use  for host  mapping in  a  cross) Tj
T* (platform network environment that blocks ICMP echo requests.) Tj
T* T* T* (Comments) Tj
T* T* (Some readers may be thinking why not elicit ICMP reply's to hosts and  analyse) Tj
T* (their response  to use  for host  detection. RFC  1122 meaningfully states the) Tj
T* (following:) Tj
T* T* (      An ICMP error message MUST NOT be sent as the result of receiving:) Tj
T* (         *    an ICMP error message, or) Tj
T* (         *    a datagram destined to an IP broadcast or IP multicast) Tj
T* (              address, or) Tj
T* (         *    a datagram sent as a link-layer broadcast, or) Tj
T* (         *    a non-initial fragment, or) Tj
T* (         *    a datagram whose source address does not define a single) Tj
T* (              host -- e.g., a zero address, a loopback address, a) Tj
T* (              broadcast address, a multicast address, or a Class E) Tj
T* (              address.) Tj
T* T* (The first point  clearly states that   a host  will  not issue a   response to) Tj
T* (an ICMP reply datagram,  so much for host detection using reply datagrams.  Oh) Tj
T* (well time put your thinking caps on once more. :\)) Tj
T* T* T* (Generating Invalid Protocol Responses) Tj
T* T* (This section  describes methods  using the  Internet Protocol  \(IP\) to divulge) Tj
T* (error  messages  in  order to  discovery  arbitrary  hosts. The  corresponding) Tj
T* (encapsulated protocol \(TCP/UDP/ICMP\) has no  effect on the results using  this) Tj
T* (method when packaging the datagrams.) Tj
T* T* (The foundation for analysing the connectivity of a  host against this   method) Tj
T* (emphasises the  need for  effective ACL's  and outgoing  packet filtering. The) Tj
T* (basis for this technique relies on generating invalid datagrams and  detecting) Tj
T* (external  responses that  the malformed  packet creates  as  a  result of  the) Tj
T* (abnormality.) Tj
T* T* /F2 10 Tf
(                                       13)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
53 0 obj
3136
endobj
54 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 55 0 R
>>
endobj
55 0 obj
<<
/Length 56 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (IP Header Approach) Tj
T* T* (Creating anomalistic IP headers in transmission will help increase the chances) Tj
T* (of detecting a firewalled and filtered host. Many forms of intrusion detection) Tj
T* (systems and  routers do  drop packets  that contain  malformed headers such as) Tj
T* (invalid field values. The techniques below list such scenarios.) Tj
T* T* (  * Timedout Packet Fragmentation) Tj
T* (  * Invalid Header Length) Tj
T* (  * Invalid Field Values) Tj
T* T* T* (Timedout Packet Fragmentation) Tj
T* T* (Another method used in advanced  host detection is unsent packet  fragmenting.) Tj
T* (It is firstly  necessary to construct  a packet with  a fragmented offset  and) Tj
T* (send to a host. Instead of assembling another fragmented datagram to  complete) Tj
T* (the  packet, the  client will  let the  initial fragmented  datagram timeout,) Tj
T* (leaving the server waiting for the  next expected packet in the sequence.  The) Tj
T* (effect of  this is  an elicited  ICMP Type  11 Code  1 Time  Exceeded Fragment) Tj
T* (Reassembly generated by the server.) Tj
T* T* (Example:) Tj
T* T* ( dethy@dev:~ # hping -c 1 -x -y XXX.XXX.XXX.XXX) Tj
T* ( eth0 default routing interface selected \(according to /proc\)) Tj
T* ( HPING dev \(eth0 XXX.XXX.XXX.XXX\): NO FLAGS are set, 40 headers + 0 data bytes) Tj
T* T* ( --- dev hping statistic ---) Tj
T* ( 1 packets tramitted, 0 packets received, 100% packet loss) Tj
T* ( round-trip min/avg/max = 0.0/0.0/0.0 ms) Tj
T* T* T* (Note: Although hping returns 100% packet loss, if does not check for the  ICMP) Tj
T* (datagram the remote host generated.) Tj
T* T* (tcpdump shows the following information:) Tj
T* T* T* ( 20:41:09.309085 YYY.YYY.YYY.YYY > XXX.XXX.XXX.XXX: icmp: ip reassembly time) Tj
T* ( exceeded [tos 0xc0]  \(ttl 255, id 3375\)) Tj
T* T* T* (Once again we have produced a response from a server using invalid protocol) Tj
T* (communication.) Tj
T* T* T* (Invalid Header Length) Tj
T* T* (Specifying an invalid  header length within  an IP header  will result in  the) Tj
T* (remote host generating an ICMP Type 12 - Parameter Problem error message.  The) Tj
T* (Code type  of this  within this  ICMP datagram  may be  equal to either of the) Tj
T* (following:) Tj
T* T* ( 0 - Pointer indicates the error) Tj
T* ( 2 - Bad Length) Tj
T* T* (A  code  equal  to  0  will return  the  exact  byte  which  caused the  error) Tj
T* (encapsulated  within  the  pointer  field. Alternatively  a  code  equal  to 2) Tj
T* (signifies the entire packet contains errors.  In either case, the host on  the) Tj
T* (receiving end of this packet solicits the ICMP Type 12 Code \(0 | 2\) in  return) Tj
T* (to tell the sender that the packet has been discarded or dropped.) Tj
T* /F2 10 Tf
(                                       14)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
56 0 obj
2937
endobj
57 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 58 0 R
/Annots [ 4 0 R ]
>>
endobj
58 0 obj
<<
/Length 59 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* (Below ISIC \(IP Stack Integrity Checker\) was used to assemble a packet with  an) Tj
T* (incorrect IP header length of 66 bytes.) Tj
T* T* T* ( dethy@dev:~ # ./isic -s YYY.YYY.YYY.YYY -d XXX.XXX.XXX.XXX -p 1 -V 0 -F 0 -I 66) Tj
T* (-D) Tj
T* ( Compiled against Libnet 1.0.1b) Tj
T* ( Installing Signal Handlers.) Tj
T* ( Seeding with 5099) Tj
T* ( No Maximum traffic limiter) Tj
T* ( Bad IP Version  = 0%   Odd IP Header Length   = 100%   Frag'd Pcnt   = 0%) Tj
T* ( YYY.YYY.YYY.YYY -> XXX.XXX.XXX.XXX tos[137] id[0] ver[4] frag[0]) Tj
T* T* (  Wrote 1 packets in 0.00s @ 5649.72 pkts/s) Tj
T* T* (tcpdump trace revealed the following:) Tj
T* T* (  21:39:03.755839 XXX.XXX.XXX.XXX > YYY.YYY.YYY.YYY: icmp: parameter problem -) Tj
T* (  octet 20 [tos 0xd0]  \(ttl 255, id 21508\)) Tj
T* T* T* (As was expected, a malformed  header length forced an arbitrary  response from) Tj
T* (the server. This method ultimately could be used to bypass many forms of ACL's) Tj
T* (and filtering systems if not correctly configured.) Tj
T* T* T* (Invalid Field Values) Tj
T* T* (On a more general level, specifying invalid values within any fields of the IP) Tj
T* (header will produce ICMP  errors messages on the  target host. Such a  case is) Tj
T* (with the IP PROTO field, which has a total of 8 bits in  length and hence  has) Tj
T* (a  possible  total of  256  \(2^8\) combinations.  The  trick involved  in  this) Tj
T* (instance is by  electing a protocol  value that is  not indicative of  a legal) Tj
T* (protocol value on that host.) Tj
T* T* (Fortunately  a client  is able  to determine  if a  host does  not support  a) Tj
T* (protocol, as  the server  will generate  an ICMP  Type 3  Code 3 - Destination) Tj
T* (Unreachable Protocol Unreachable. If a  response is not sent back,  the client) Tj
T* (assumes  that this protocol specified is supported on that host.) Tj
T* T* (For the  next example  apsend \(http://www.elxsi.de\)  was used  to generate the) Tj
T* (packet.) Tj
T* T* T* ( dethy@dev:~ # perl apsend -s YYY.YYY.YYY.YYY -d XXX.XXX.XXX.XXX -b 8 -p 8) Tj
T* ( --protocol 0) Tj
T* ( Packet: 1 from YYY.YYY.YYY.YYY\(port: 8\) to XXX.XXX.XXX.XXX\(port: 8\).) Tj
T* ( Protocol: 0  Type of Service\(ToS\): 16  ID: 0) Tj
T* T* T* (In the above  example the datagram  was sent with  a protocol equal  to 0, and) Tj
T* (thus should always return an ICMP error.) Tj
T* T* (A tcpdump trace returned the following data:) Tj
T* T* T* ( 21:58:21.128201 YYY.YYY.YYY.YYY > XXX.XXX.XXX.XXX: icmp: dev.synnergy.net) Tj
T* ( protocol 0 unreachable [tos 0xd0]  \(ttl 255, id 24133\)) Tj
T* T* T* (As expected XXX.XXX.XXX.XXX was returned with an ICMP Type 3 Code 3  datagram,) Tj
T* (once more we know  the host is alive,  thus another successful host  detection) Tj
T* (method.) Tj
/F2 10 Tf
(                                       15)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
59 0 obj
2973
endobj
60 0 obj
<<
/Type /Page
/Parent 8 0 R
/Resources 14 0 R
/Contents 61 0 R
/Annots [ 5 0 R ]
>>
endobj
61 0 obj
<<
/Length 62 0 R
>>
stream
BT
/F1 10 Tf
1 0 0 1 50 802 Tm
12 TL
T* T* T* (Final Note) Tj
T* T* (Further malformed packets could be  used to generate arbitrary responses  on a) Tj
T* (host using invalid IP  field values, this is  left for the reader  to analyse.) Tj
T* (Most of these methods can be applied to most protocols such as IGMP or ARP  as) Tj
T* (a useful mechanism  to detect firewalled  hosts.) Tj
T* T* (Implementing inbound and outbound traffic  filters is a must for  any  network) Tj
T* (wishing to avoid many  forms of remote host  detection. A proper rulebase  and) Tj
T* (effective ACL's should be thouroughly reviewed and tested as a standard  means) Tj
T* (of security practice.) Tj
T* T* (By now  the reader should   be readily  equipped  with  enough   knowledge  to) Tj
T* (accurately interrogate such protocols  to generate server responses as a means) Tj
T* (of advanced host detection.) Tj
T* T* T* T* (References) Tj
T* T* (ICMP Scanning   - by Ofir Afkin - www.sys-security.com) Tj
T* (RFC 792         - Internet Control Message Protocol) Tj
T* (RFC 1122        - Requirements for Internet hosts - communication laye) Tj
T* T* T* (dethy@synnergy.net - Synnergy Networks - ) Tj
0 0 1 rg
(http://www.synnergy.net) Tj
0 0 0 rg
(  © 1998-2001) Tj
T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* T* 
/F2 10 Tf
(                                       16)'
/F1 10 Tf
2 w
1 1 1 rg
15 15 m
580 15 l
580 15 m
580 827 l
580 827 m
15 827 l
15 827 m
15 15 l
B*
ET
endstream
endobj
62 0 obj
1507
endobj
7 0 obj
<<
/Type /Catalog
/Pages 8 0 R
>>
endobj
8 0 obj
<<
/Type /Pages
/Count 16
/MediaBox [ 0 0 595 842 ]
/Kids [ 15 0 R 18 0 R 21 0 R 24 0 R 27 0 R 30 0 R 33 0 R 36 0 R 39 0 R 42 0 R 45 0 R 48 0 R 51 0 R 54 0 R 57 0 R 60 0 R ]
>>
endobj
xref
0 63
0000000000 65535 f 0000000015 00000 n 0000000192 00000 n 0000000353 00000 n 0000000497 00000 n 0000000637 00000 n 0000000780 00000 n 0000057935 00000 n 0000057984 00000 n 0000000970 00000 n 0000001065 00000 n 0000001169 00000 n 0000001270 00000 n 0000001378 00000 n 0000003480 00000 n 0000003585 00000 n 0000003668 00000 n 0000007216 00000 n 0000007237 00000 n 0000007320 00000 n 0000010061 00000 n 0000010082 00000 n 0000010189 00000 n 0000014019 00000 n 0000014040 00000 n 0000014123 00000 n 0000017718 00000 n 0000017739 00000 n 0000017822 00000 n 0000022014 00000 n 0000022035 00000 n 0000022118 00000 n 0000025268 00000 n 0000025289 00000 n 0000025372 00000 n 0000028755 00000 n 0000028776 00000 n 0000028859 00000 n 0000032593 00000 n 0000032614 00000 n 0000032697 00000 n 0000036185 00000 n 0000036206 00000 n 0000036307 00000 n 0000039876 00000 n 0000039897 00000 n 0000039980 00000 n 0000043336 00000 n 0000043357 00000 n 0000043440 00000 n 0000046693 00000 n 0000046714 00000 n 0000046797 00000 n 0000049987 00000 n 0000050008 00000 n 0000050091 00000 n 0000053082 00000 n 0000053103 00000 n 0000053204 00000 n 0000056231 00000 n 0000056252 00000 n 0000056353 00000 n 0000057914 00000 n trailer
<<
/Size 63
/Root 7 0 R
/Info 6 0 R
>>
startxref
58176
%%EOF
